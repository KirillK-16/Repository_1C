
&НаКлиенте
Перем РезультатЗапуска, ДанныеДляВывода;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Диаграмма = ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_001;
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка,0,0,0.15,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения,0.15,0,0.9,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды,0.9,0.07,1,0.5);
    
    Диаграмма = ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_002;
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка,0,0,0.15,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения,0.15,0,0.9,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды,0.9,0.07,1,0.5);
    
    Диаграмма = ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_003;
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка,0,0,0.15,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения,0.15,0,0.9,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды,0.9,0.07,1,0.5);
    
    Диаграмма = ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_004;
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка,0,0,0.15,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения,0.15,0,0.9,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды,0.9,0.07,1,0.5);
    
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
    
    Если ЗначениеЗаполнено(Отчет.ПрофилиКлючевыхОперацийXML) Тогда
        ПрофильИзXML(Отчет.ПрофилиКлючевыхОперацийXML);
    КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    ЭтотОбъект.КлючУникальности = Новый УникальныйИдентификатор;
    
    Если НЕ ЗначениеЗаполнено(Отчет.ТипАнализа) Тогда
        Отчет.ТипАнализа = "Среднее время";
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
    
    Если Отчет.ПрофилиКлючевыхОпераций.Количество() <> 4 Тогда
        
        СообщениеПользователю = Новый СообщениеПользователю;
        СообщениеПользователю.Текст = "Не выбраны все профили ключевых операций.
        |Необходимо выбрать четыре профиля!
        |Для выбора профилей используйте кнопку ""Настройки""."; 
        СообщениеПользователю.Сообщить();
        Возврат;
    КонецЕсли;
        
    ПараметрыФормирования = Новый Структура(
        "Период,
        |ПрофильКлючевыхОпераций_001,
        |ПрофильКлючевыхОпераций_002,
        |ПрофильКлючевыхОпераций_003,
        |ПрофильКлючевыхОпераций_004,
        |ТолькоКлючевыеОперацииПрофиля,
        |ТипАнализа,
        |УникальныйИдентификаторФормы");
    ПараметрыФормирования.Период = Отчет.Период;
    ПараметрыФормирования.ПрофильКлючевыхОпераций_001 = Отчет.ПрофилиКлючевыхОпераций[0].Профиль;
    ПараметрыФормирования.ПрофильКлючевыхОпераций_002 = Отчет.ПрофилиКлючевыхОпераций[1].Профиль;
    ПараметрыФормирования.ПрофильКлючевыхОпераций_003 = Отчет.ПрофилиКлючевыхОпераций[2].Профиль;
    ПараметрыФормирования.ПрофильКлючевыхОпераций_004 = Отчет.ПрофилиКлючевыхОпераций[3].Профиль;
    ПараметрыФормирования.ТолькоКлючевыеОперацииПрофиля = Истина;
    ПараметрыФормирования.ТипАнализа = Отчет.ТипАнализа;
    ПараметрыФормирования.УникальныйИдентификаторФормы = ЭтотОбъект.УникальныйИдентификатор;
        
    ДанныеДляВывода = Новый Структура;
    
    РезультатЗапуска = СформироватьНаСервере(ПараметрыФормирования);
    
    ПодключитьОбработчикОжидания("ПроверкаФормированияДанных", 1, Истина);
    
    ЭтотОбъект.Элементы.ФормаСформировать.Доступность = Ложь;
    ЭтотОбъект.Элементы.ФормаНастройки.Доступность = Ложь;
    
    ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_001.Очистить();
    ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_001.ОбластьЗаголовка.Текст = "Получение данных...";
    
    ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_002.Очистить();
    ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_002.ОбластьЗаголовка.Текст = "Получение данных...";
    
    ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_003.Очистить();
    ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_003.ОбластьЗаголовка.Текст = "Получение данных...";
    
    ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_004.Очистить();
    ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_004.ОбластьЗаголовка.Текст = "Получение данных...";
    
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
    
    ПараметрыОткрытия = Новый Структура;
    ПараметрыОткрытия.Вставить("Период", Отчет.Период);
    ПараметрыОткрытия.Вставить("ПрофилиКлючевыхОперацийXML", ПрофильВXML());
    ПараметрыОткрытия.Вставить("ТипАнализа", Отчет.ТипАнализа);
    ПараметрыОткрытия.Вставить("ИспользоватьБазовоеЗначение", Отчет.ИспользоватьБазовоеЗначение);
    
    ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаЗакрытияНастроек", ЭтотОбъект);
    ОткрытьФорму("Отчет.МониторПроизводительностиСборокПлатформы.Форма.ФормаНастройкиОтчета", ПараметрыОткрытия, ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершитьВывод()
    
    ВывестиПроизводительностьПлатформы(ДанныеДляВывода.ДиаграммаПроизводительностьПлатформы_001.ПроизводительностьПлатформы, ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_001, Отчет.ПрофилиКлючевыхОпераций[0].Профиль);
    ВывестиПроизводительностьПлатформы(ДанныеДляВывода.ДиаграммаПроизводительностьПлатформы_002.ПроизводительностьПлатформы, ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_002, Отчет.ПрофилиКлючевыхОпераций[1].Профиль);
    ВывестиПроизводительностьПлатформы(ДанныеДляВывода.ДиаграммаПроизводительностьПлатформы_003.ПроизводительностьПлатформы, ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_003, Отчет.ПрофилиКлючевыхОпераций[2].Профиль);
    ВывестиПроизводительностьПлатформы(ДанныеДляВывода.ДиаграммаПроизводительностьПлатформы_004.ПроизводительностьПлатформы, ЭтотОбъект.ДиаграммаПроизводительностьПлатформы_004, Отчет.ПрофилиКлючевыхОпераций[3].Профиль);
    
    ЭтотОбъект.Элементы.ФормаСформировать.Доступность = Истина;
    ЭтотОбъект.Элементы.ФормаНастройки.Доступность = Истина;
    
КонецПроцедуры

&НаКлиенте
Процедура ВывестиПроизводительностьПлатформы(ПроизводительностьПлатформы, Диаграмма, Профиль)
    
    Если Отчет.ТипАнализа = "APDEX" Тогда
        Диаграмма.ОбластьЗаголовка.Текст = "APDEX по версиям платформы.
        |" + Профиль + ".";
    ИначеЕсли Отчет.ТипАнализа = "Среднее время" Тогда
        Диаграмма.ОбластьЗаголовка.Текст = "Среднее время операции по версиям платформы, сек.
        |" + Профиль + ".";
    КонецЕсли;
        
    Диаграмма.Обновление = Ложь;
    Диаграмма.Очистить();
    
    СерииДляВывода = Новый Соответствие;
    ТочкиДляВывода = Новый Соответствие;
    
    МинимальноеЗначение = 9999999999;
    
    Для Каждого ТекЗапись Из ПроизводительностьПлатформы Цикл
        
        Если СерииДляВывода[ТекЗапись.РежимРаботыКонфигурации] = Неопределено Тогда
            Серия = Диаграмма.Серии.Добавить();
            Серия.Текст = ТекЗапись.РежимРаботыКонфигурации;
            СерииДляВывода.Вставить(ТекЗапись.РежимРаботыКонфигурации, Серия);
        КонецЕсли;
        
        Если ТочкиДляВывода[ТекЗапись.СборкаСтрока] = Неопределено Тогда
            Точка = Диаграмма.Точки.Добавить();
            Точка.Текст = ТекЗапись.СборкаСтрока;
            ТочкиДляВывода.Вставить(ТекЗапись.СборкаСтрока, Точка);
        КонецЕсли;
        
        Диаграмма.УстановитьЗначение(ТочкиДляВывода[ТекЗапись.СборкаСтрока], СерииДляВывода[ТекЗапись.РежимРаботыКонфигурации], ТекЗапись.Значение);
        
        Если МинимальноеЗначение > ТекЗапись.Значение Тогда
            МинимальноеЗначение = ТекЗапись.Значение;
        КонецЕсли;
        
    КонецЦикла;
    
    Если Отчет.ТипАнализа = "APDEX" И Отчет.ИспользоватьБазовоеЗначение Тогда
        Диаграмма.БазовоеЗначение = (ЦЕЛ(МинимальноеЗначение * 10) - 1)/10;
    Иначе
        Диаграмма.БазовоеЗначение = 0;
    КонецЕсли;
    
    Диаграмма.Обновление = Истина;
    
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаФормированияДанных()
    
    РезультатПроверки = ПроверкаФормированияДанныхНаСервере(РезультатЗапуска);
    
    Если ТипЗнч(РезультатПроверки.ДиаграммаПроизводительностьПлатформы_001) = Тип("Структура") Тогда
                
        ДанныеДляВывода.Вставить("ДиаграммаПроизводительностьПлатформы_001", РезультатПроверки.ДиаграммаПроизводительностьПлатформы_001);
                
        РезультатЗапуска.Удалить("ФзПроизводительностьПлатформы_001");
        РезультатЗапуска.Удалить("АдресХранилищаДиаграммаПроизводительностьПлатформы_001");
        
    КонецЕсли;
    
    Если ТипЗнч(РезультатПроверки.ДиаграммаПроизводительностьПлатформы_002) = Тип("Структура") Тогда
                
        ДанныеДляВывода.Вставить("ДиаграммаПроизводительностьПлатформы_002", РезультатПроверки.ДиаграммаПроизводительностьПлатформы_002);
                
        РезультатЗапуска.Удалить("ФзПроизводительностьПлатформы_002");
        РезультатЗапуска.Удалить("АдресХранилищаДиаграммаПроизводительностьПлатформы_002");
        
    КонецЕсли;
    
    Если ТипЗнч(РезультатПроверки.ДиаграммаПроизводительностьПлатформы_003) = Тип("Структура") Тогда
                
        ДанныеДляВывода.Вставить("ДиаграммаПроизводительностьПлатформы_003", РезультатПроверки.ДиаграммаПроизводительностьПлатформы_003);
                
        РезультатЗапуска.Удалить("ФзПроизводительностьПлатформы_003");
        РезультатЗапуска.Удалить("АдресХранилищаДиаграммаПроизводительностьПлатформы_003");
        
    КонецЕсли;
    
    Если ТипЗнч(РезультатПроверки.ДиаграммаПроизводительностьПлатформы_004) = Тип("Структура") Тогда
                
        ДанныеДляВывода.Вставить("ДиаграммаПроизводительностьПлатформы_004", РезультатПроверки.ДиаграммаПроизводительностьПлатформы_004);
                
        РезультатЗапуска.Удалить("ФзПроизводительностьПлатформы_004");
        РезультатЗапуска.Удалить("АдресХранилищаДиаграммаПроизводительностьПлатформы_004");
        
    КонецЕсли;
        
    Если РезультатЗапуска.Количество() > 0 Тогда
        ПодключитьОбработчикОжидания("ПроверкаФормированияДанных", 1, Истина);
    Иначе
        ЗавершитьВывод();
    КонецЕсли;
            
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверкаФормированияДанныхНаСервере(РезультатЗапуска)
    
    РезультатПроверки = Новый Структура("ДиаграммаПроизводительностьПлатформы_001, ДиаграммаПроизводительностьПлатформы_002, ДиаграммаПроизводительностьПлатформы_003, ДиаграммаПроизводительностьПлатформы_004");
    
    Если РезультатЗапуска["ФзПроизводительностьПлатформы_001"] <> Неопределено Тогда
        ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(РезультатЗапуска["ФзПроизводительностьПлатформы_001"]);
        Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_001 = Неопределено;
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_001 = ПолучитьИзВременногоХранилища(РезультатЗапуска["АдресХранилищаДиаграммаПроизводительностьПлатформы_001"]);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_001 = ПодробноеПредставлениеОшибки(ФЗ.ИнформацияОбОшибке);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_001 = "Отменено";
        КонецЕсли;
    КонецЕсли;
    
    Если РезультатЗапуска["ФзПроизводительностьПлатформы_002"] <> Неопределено Тогда
        ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(РезультатЗапуска["ФзПроизводительностьПлатформы_002"]);
        Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_002 = Неопределено;
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_002 = ПолучитьИзВременногоХранилища(РезультатЗапуска["АдресХранилищаДиаграммаПроизводительностьПлатформы_002"]);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_002 = ПодробноеПредставлениеОшибки(ФЗ.ИнформацияОбОшибке);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_002 = "Отменено";
        КонецЕсли;
    КонецЕсли;
    
    Если РезультатЗапуска["ФзПроизводительностьПлатформы_003"] <> Неопределено Тогда
        ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(РезультатЗапуска["ФзПроизводительностьПлатформы_003"]);
        Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_003 = Неопределено;
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_003 = ПолучитьИзВременногоХранилища(РезультатЗапуска["АдресХранилищаДиаграммаПроизводительностьПлатформы_003"]);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_003 = ПодробноеПредставлениеОшибки(ФЗ.ИнформацияОбОшибке);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_003 = "Отменено";
        КонецЕсли;
    КонецЕсли;
    
    Если РезультатЗапуска["ФзПроизводительностьПлатформы_004"] <> Неопределено Тогда
        ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(РезультатЗапуска["ФзПроизводительностьПлатформы_004"]);
        Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_004 = Неопределено;
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_004 = ПолучитьИзВременногоХранилища(РезультатЗапуска["АдресХранилищаДиаграммаПроизводительностьПлатформы_004"]);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_004 = ПодробноеПредставлениеОшибки(ФЗ.ИнформацияОбОшибке);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы_004 = "Отменено";
        КонецЕсли;
    КонецЕсли;
       
    Возврат РезультатПроверки;
    
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьНаСервере(Параметры)
    
    АдресХранилищаДиаграммаПроизводительностьПлатформы_001 = ПоместитьВоВременноеХранилище(Неопределено, Параметры.УникальныйИдентификаторФормы);
    Параметры_001 = КопироватьПараметры(Параметры);
    Параметры_001.Вставить("ПрофильКлючевыхОпераций", Параметры.ПрофильКлючевыхОпераций_001);
    Параметры_001.Вставить("АдресХранилищаДиаграммаПроизводительностьПлатформы", АдресХранилищаДиаграммаПроизводительностьПлатформы_001);
    ПараметрыФоновогоЗадания = Новый Массив;
    ПараметрыФоновогоЗадания.Добавить(Параметры_001);
    Наименование = "Отчет МониторПроизводительностиСборокПлатформы_001";
    ФзПроизводительностьПлатформы_001 = ФоновыеЗадания.Выполнить("ЦентрМониторингаИмпортСлужебный.ПолучитьПроизводительностьПлатформы", ПараметрыФоновогоЗадания,,Наименование);
    
    АдресХранилищаДиаграммаПроизводительностьПлатформы_002 = ПоместитьВоВременноеХранилище(Неопределено, Параметры.УникальныйИдентификаторФормы);
    Параметры_002 = КопироватьПараметры(Параметры);
    Параметры_002.Вставить("ПрофильКлючевыхОпераций", Параметры.ПрофильКлючевыхОпераций_002);
    Параметры_002.Вставить("АдресХранилищаДиаграммаПроизводительностьПлатформы", АдресХранилищаДиаграммаПроизводительностьПлатформы_002);
    ПараметрыФоновогоЗадания = Новый Массив;
    ПараметрыФоновогоЗадания.Добавить(Параметры_002);
    Наименование = "Отчет МониторПроизводительностиСборокПлатформы_002";
    ФзПроизводительностьПлатформы_002 = ФоновыеЗадания.Выполнить("ЦентрМониторингаИмпортСлужебный.ПолучитьПроизводительностьПлатформы", ПараметрыФоновогоЗадания,,Наименование);
    
    АдресХранилищаДиаграммаПроизводительностьПлатформы_003 = ПоместитьВоВременноеХранилище(Неопределено, Параметры.УникальныйИдентификаторФормы);
    Параметры_003 = КопироватьПараметры(Параметры);
    Параметры_003.Вставить("ПрофильКлючевыхОпераций", Параметры.ПрофильКлючевыхОпераций_003);
    Параметры_003.Вставить("АдресХранилищаДиаграммаПроизводительностьПлатформы", АдресХранилищаДиаграммаПроизводительностьПлатформы_003);
    ПараметрыФоновогоЗадания = Новый Массив;
    ПараметрыФоновогоЗадания.Добавить(Параметры_003);
    Наименование = "Отчет МониторПроизводительностиСборокПлатформы_003";
    ФзПроизводительностьПлатформы_003 = ФоновыеЗадания.Выполнить("ЦентрМониторингаИмпортСлужебный.ПолучитьПроизводительностьПлатформы", ПараметрыФоновогоЗадания,,Наименование);
    
    АдресХранилищаДиаграммаПроизводительностьПлатформы_004 = ПоместитьВоВременноеХранилище(Неопределено, Параметры.УникальныйИдентификаторФормы);
    Параметры_004 = КопироватьПараметры(Параметры);
    Параметры_004.Вставить("ПрофильКлючевыхОпераций", Параметры.ПрофильКлючевыхОпераций_004);
    Параметры_004.Вставить("АдресХранилищаДиаграммаПроизводительностьПлатформы", АдресХранилищаДиаграммаПроизводительностьПлатформы_004);
    ПараметрыФоновогоЗадания = Новый Массив;
    ПараметрыФоновогоЗадания.Добавить(Параметры_004);
    Наименование = "Отчет МониторПроизводительностиСборокПлатформы_004";
    ФзПроизводительностьПлатформы_004 = ФоновыеЗадания.Выполнить("ЦентрМониторингаИмпортСлужебный.ПолучитьПроизводительностьПлатформы", ПараметрыФоновогоЗадания,,Наименование);
        
    РезультатЗапуска = Новый Соответствие;
    
    РезультатЗапуска.Вставить("ФзПроизводительностьПлатформы_001", ФзПроизводительностьПлатформы_001.УникальныйИдентификатор);
    РезультатЗапуска.Вставить("АдресХранилищаДиаграммаПроизводительностьПлатформы_001", АдресХранилищаДиаграммаПроизводительностьПлатформы_001);
    
    РезультатЗапуска.Вставить("ФзПроизводительностьПлатформы_002", ФзПроизводительностьПлатформы_002.УникальныйИдентификатор);
    РезультатЗапуска.Вставить("АдресХранилищаДиаграммаПроизводительностьПлатформы_002", АдресХранилищаДиаграммаПроизводительностьПлатформы_002);
    
    РезультатЗапуска.Вставить("ФзПроизводительностьПлатформы_003", ФзПроизводительностьПлатформы_003.УникальныйИдентификатор);
    РезультатЗапуска.Вставить("АдресХранилищаДиаграммаПроизводительностьПлатформы_003", АдресХранилищаДиаграммаПроизводительностьПлатформы_003);
    
    РезультатЗапуска.Вставить("ФзПроизводительностьПлатформы_004", ФзПроизводительностьПлатформы_004.УникальныйИдентификатор);
    РезультатЗапуска.Вставить("АдресХранилищаДиаграммаПроизводительностьПлатформы_004", АдресХранилищаДиаграммаПроизводительностьПлатформы_004);
    
    Возврат РезультатЗапуска;
    
КонецФункции

&НаСервереБезКонтекста
Функция КопироватьПараметры(Знач Параметры)
    
    НовыеПараметры = Новый Структура;
    Для Каждого ТекЭлемент Из Параметры Цикл
        НовыеПараметры.Вставить(ТекЭлемент.Ключ, ТекЭлемент.Значение);
    КонецЦикла;
    
    Возврат НовыеПараметры;
        
КонецФункции

&НаКлиенте
Процедура ОбработкаЗакрытияНастроек(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
    
    Если ТипЗнч(РезультатЗакрытия) = Тип("Структура") Тогда
        
        Отчет.Период = РезультатЗакрытия.Период;
        Отчет.ПрофилиКлючевыхОперацийXML = РезультатЗакрытия.ПрофилиКлючевыхОперацийXML;
        ПрофильИзXML(Отчет.ПрофилиКлючевыхОперацийXML);
        Отчет.ТипАнализа = РезультатЗакрытия.ТипАнализа;
        Отчет.ИспользоватьБазовоеЗначение = РезультатЗакрытия.ИспользоватьБазовоеЗначение;
                        
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Функция ПрофильВXML()
    
    ЗаписьXML = Новый ЗаписьXML;
    ЗаписьXML.УстановитьСтроку("UTF-8");
    СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Отчет.ПрофилиКлючевыхОпераций.Выгрузить(), НазначениеТипаXML.Явное);
    
    Возврат ЗаписьXML.Закрыть();
    
КонецФункции

&НаСервере
Функция ПрофильИзXML(XML)
    
    Чтение = Новый ЧтениеXML;
    Чтение.УстановитьСтроку(XML);
    
    Отчет.ПрофилиКлючевыхОпераций.Загрузить(СериализаторXDTO.ПрочитатьXML(Чтение));
        
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьРазмерОбластиДиаграммы(ОбластьДиаграммы, Верх, Лево, Низ, Право)
    
    ОбластьДиаграммы.Верх = Верх;
    ОбластьДиаграммы.Лево = Лево;
    ОбластьДиаграммы.Низ = Низ;
    ОбластьДиаграммы.Право = Право;
    
КонецПроцедуры

#КонецОбласти


