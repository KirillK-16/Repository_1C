&НаКлиенте
Перем РезультатЗапуска, ДанныеДляВывода;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Если НЕ ЗначениеЗаполнено(Отчет.РежимРаботыКонфигурации) Тогда
        Отчет.РежимРаботыКонфигурации = "Не учитывать";
	КонецЕсли;
		    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    ЭтотОбъект.КлючУникальности = Новый УникальныйИдентификатор;
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
    
    Если НЕ ПараметрыФормированияВерны() Тогда
        Возврат;
    КонецЕсли;
    
    ЭтотОбъект.Элементы.Сформировать.Доступность = Ложь;
    ЭтотОбъект.Элементы.ФормаНастройки.Доступность = Ложь;
    
    ДиаграммаПроизводительностьКонфигураций.Очистить();
    ДиаграммаПроизводительностьКонфигураций.ОбластьЗаголовка.Текст = "Получение данных...";
    
    ДиаграммаРаспределениеВерсийКонфигурацийПоПлатформе.Очистить();
    ДиаграммаРаспределениеВерсийКонфигурацийПоПлатформе.ОбластьЗаголовка.Текст = "Получение данных...";
    
    ДиаграммаПроизводительностьПлатформы.Очистить();
    ДиаграммаПроизводительностьПлатформы.ОбластьЗаголовка.Текст = "Получение данных...";
    
    ДиаграммаРаспределениеВерсийПлатформыКонфигурации.Очистить();
    ДиаграммаРаспределениеВерсийПлатформыКонфигурации.ОбластьЗаголовка.Текст = "Получение данных...";
    
    ПараметрыФормирования = Новый Структура("Период, Конфигурация, ПрофильКлючевыхОпераций, ТолькоКлючевыеОперацииПрофиля,
        |УникальныйИдентификаторФормы, РежимРаботыКонфигурации, РаспределениеПользователей, МинимальноеКоличествоЗамеров,
		|КлючеваяОперация, ОтборПоЧастойВерсииПлатформы, АнализироватьПлатформу, СтатусИнформационнойБазы");
    ПараметрыФормирования.Период = Отчет.ПериодОтчета;
    ПараметрыФормирования.Конфигурация = Отчет.Конфигурация;
    ПараметрыФормирования.ПрофильКлючевыхОпераций = Отчет.ПрофильКлючевыхОпераций;
    ПараметрыФормирования.ТолькоКлючевыеОперацииПрофиля = Отчет.ТолькоКлючевыеОперацииПрофиля;
    ПараметрыФормирования.УникальныйИдентификаторФормы = ЭтотОбъект.УникальныйИдентификатор;
    ПараметрыФормирования.РежимРаботыКонфигурации = Отчет.РежимРаботыКонфигурации;
    ПараметрыФормирования.РаспределениеПользователей = Отчет.РаспределениеПользователейXML;    
	ПараметрыФормирования.МинимальноеКоличествоЗамеров = Отчет.МинимальноеКоличествоЗамеров;    
	ПараметрыФормирования.КлючеваяОперация = Отчет.КлючеваяОперация;    
	ПараметрыФормирования.ОтборПоЧастойВерсииПлатформы = Отчет.ОтборПоЧастойВерсииПлатформы;    
	ПараметрыФормирования.АнализироватьПлатформу = Отчет.АнализироватьПлатформу;    
	ПараметрыФормирования.СтатусИнформационнойБазы = Отчет.СтатусИнформационнойБазы.ВыгрузитьЗначения();    
        
    ДанныеДляВывода = Новый Структура;
    
    РезультатЗапуска = СформироватьНаСервере(ПараметрыФормирования);
    
    ПодключитьОбработчикОжидания("ПроверкаФормированияДанных", 1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
    
    ПараметрыОткрытия = Новый Структура;
    ПараметрыОткрытия.Вставить("Конфигурация", Отчет.Конфигурация);
    ПараметрыОткрытия.Вставить("ПериодОтчета", Отчет.ПериодОтчета);
    ПараметрыОткрытия.Вставить("ПрофильКлючевыхОпераций", Отчет.ПрофильКлючевыхОпераций);
    ПараметрыОткрытия.Вставить("ТолькоКлючевыеОперацииПрофиля", Отчет.ТолькоКлючевыеОперацииПрофиля);
    ПараметрыОткрытия.Вставить("МинимальноеКоличествоБазДляРаспределения", Отчет.МинимальноеКоличествоБазДляРаспределения);
    ПараметрыОткрытия.Вставить("РежимРаботыКонфигурации", Отчет.РежимРаботыКонфигурации);
    ПараметрыОткрытия.Вставить("ИспользоватьБазовоеЗначение", Отчет.ИспользоватьБазовоеЗначение);
    ПараметрыОткрытия.Вставить("РаспределениеПользователей", Отчет.РаспределениеПользователейXML);
	ПараметрыОткрытия.Вставить("МинимальноеКоличествоЗамеров", Отчет.МинимальноеКоличествоЗамеров);
	ПараметрыОткрытия.Вставить("КлючеваяОперация", Отчет.КлючеваяОперация);
	ПараметрыОткрытия.Вставить("ОтборПоЧастойВерсииПлатформы", Отчет.ОтборПоЧастойВерсииПлатформы);
	ПараметрыОткрытия.Вставить("АнализироватьПлатформу", Отчет.АнализироватьПлатформу);
	ПараметрыОткрытия.Вставить("СтатусИнформационнойБазы", Отчет.СтатусИнформационнойБазы);
        
    ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаЗакрытияНастроек", ЭтотОбъект);
    ОткрытьФорму("Отчет.МониторПроизводительностиКонфигурации.Форма.ФормаНастройкиОтчета", ПараметрыОткрытия, ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПараметрыФормированияВерны()
    
    РезультатПроверки = Истина;
    
    Если СтрНайти(Отчет.РежимРаботыКонфигурации, " + Количество пользователей") > 0 Тогда
        СерииПользователей = ПолучитьСерии();
        Если СерииПользователей.Количество() = 0 Тогда
            
            СообщениеПользователю = Новый СообщениеПользователю;
            СообщениеПользователю.Текст = "Не установлено условие по количеству пользователей. Используйте команду ""Настройки"" для заполнения условия.
            |Формирование не возможно!";
            СообщениеПользователю.Сообщить();
            
            РезультатПроверки = Ложь;
            
        КонецЕсли;
    КонецЕсли;
    
    Возврат РезультатПроверки;
        
КонецФункции

&НаКлиенте
Процедура ОбработкаЗакрытияНастроек(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
    
    Если ТипЗнч(РезультатЗакрытия) = Тип("Структура") Тогда
        
        Отчет.Конфигурация = РезультатЗакрытия.Конфигурация;
        Отчет.ПериодОтчета = РезультатЗакрытия.ПериодОтчета;
        Отчет.ПрофильКлючевыхОпераций = РезультатЗакрытия.ПрофильКлючевыхОпераций;
        Отчет.ТолькоКлючевыеОперацииПрофиля = РезультатЗакрытия.ТолькоКлючевыеОперацииПрофиля;
        Отчет.МинимальноеКоличествоБазДляРаспределения = РезультатЗакрытия.МинимальноеКоличествоБазДляРаспределения;
        Отчет.РежимРаботыКонфигурации = РезультатЗакрытия.РежимРаботыКонфигурации;
        Отчет.ИспользоватьБазовоеЗначение = РезультатЗакрытия.ИспользоватьБазовоеЗначение;
        Отчет.РаспределениеПользователейXML = РезультатЗакрытия.РаспределениеПользователей;
		Отчет.МинимальноеКоличествоЗамеров = РезультатЗакрытия.МинимальноеКоличествоЗамеров;
		Отчет.КлючеваяОперация = РезультатЗакрытия.КлючеваяОперация;
		Отчет.ОтборПоЧастойВерсииПлатформы = РезультатЗакрытия.ОтборПоЧастойВерсииПлатформы;
		Отчет.АнализироватьПлатформу = РезультатЗакрытия.АнализироватьПлатформу;
		Отчет.СтатусИнформационнойБазы.ЗагрузитьЗначения(РезультатЗакрытия.СтатусИнформационнойБазы);
		УстановитьВидимость();
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаФормированияДанных()
    
    РезультатПроверки = ПроверкаФормированияДанныхНаСервере(РезультатЗапуска);
    
    Если ТипЗнч(РезультатПроверки.ПоВерсииПлатформы) = Тип("Структура") Тогда
        
        
        ДанныеДляВывода.Вставить("ПоВерсииПлатформы", РезультатПроверки.ПоВерсииПлатформы);
                
        РезультатЗапуска.Удалить("ПоВерсииПлатформы");
        РезультатЗапуска.Удалить("АдресХранилищаВерсийКонфигурацийПоВерсииПлатформы");
        
    ИначеЕсли ТипЗнч(РезультатПроверки.ПоВерсииПлатформы) = Тип("Строка") Тогда
        
        Сообщить("Получение данных по версии платформы: " + РезультатПроверки.ПоВерсииПлатформы);
        
        РезультатЗапуска.Удалить("ПоВерсииПлатформы");
        РезультатЗапуска.Удалить("АдресХранилищаВерсийКонфигурацийПоВерсииПлатформы");
        
    КонецЕсли;
	
    Если Отчет.АнализироватьПлатформу И ТипЗнч(РезультатПроверки.ПоВерсииКонфигурации) = Тип("Структура") Тогда
        
        ДанныеДляВывода.Вставить("ПоВерсииКонфигурации", РезультатПроверки.ПоВерсииКонфигурации);
                
        РезультатЗапуска.Удалить("ПоВерсииКонфигурации");
        РезультатЗапуска.Удалить("АдресХранилищаВерсийПлатформыПоВерсииКонфигурации");
        
    ИначеЕсли Отчет.АнализироватьПлатформу И ТипЗнч(РезультатПроверки.ПоВерсииКонфигурации) = Тип("Строка") Тогда
        
        Сообщить("Получение данных по версии конфигурации: " + РезультатПроверки.ПоВерсииКонфигурации);
        
        РезультатЗапуска.Удалить("ПоВерсииКонфигурации");
        РезультатЗапуска.Удалить("АдресХранилищаВерсийПлатформыПоВерсииКонфигурации");
        
    КонецЕсли;
    
    Если РезультатЗапуска.Количество() > 0 Тогда
        ПодключитьОбработчикОжидания("ПроверкаФормированияДанных", 1, Истина);
    Иначе
        ЗавершитьВывод();
    КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВывод()
    
    Если ДанныеДляВывода.Свойство("ПоВерсииПлатформы") Тогда
        ВывестиРезультатПоВерсииПлатформы(ДанныеДляВывода.ПоВерсииПлатформы);
    КонецЕсли;
    
    Если ДанныеДляВывода.Свойство("ПоВерсииКонфигурации") Тогда
        ВывестиРезультатПоВерсииКонфигурации(ДанныеДляВывода.ПоВерсииКонфигурации);
    КонецЕсли;
    
    ЭтотОбъект.Элементы.Сформировать.Доступность = Истина;
    ЭтотОбъект.Элементы.ФормаНастройки.Доступность = Истина;
            
КонецПроцедуры

&НаКлиенте
Процедура ВывестиРезультатПоВерсииПлатформы(Данные)
       
    ДиаграммаПроизводительностьКонфигураций.Обновление = Ложь;
    ДиаграммаРаспределениеВерсийКонфигурацийПоПлатформе.Обновление = Ложь;
    
    ОбновитьДиаграммаРаспределениеВерсийКонфигурацийПоПлатформе(ДиаграммаРаспределениеВерсийКонфигурацийПоПлатформе, Данные);
    ОбновитьДиаграммаПроизводительностьКонфигураций(ДиаграммаПроизводительностьКонфигураций, Данные);
        
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДиаграммаПроизводительностьКонфигураций(Диаграмма, Данные)
    
    ЦветНеприемлимо = Новый Цвет(204, 204, 204);
    ЦветОченьПлохо = Новый Цвет(255, 204, 102);
    ЦветПлохо = Новый Цвет(255, 255, 102);
    ЦветХорошо = Новый Цвет(204, 255, 153);
    ЦветОтлично = Новый Цвет(204, 255, 255);
	
	Диаграмма.Очистить();
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка, 0, 0, 0.1, 1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 1, 1);
	Если Данные.ПроизводительностьВерсийКонфигурацийНаПлатформе.Количество() > 10 Тогда
		Диаграмма.ВидПодписей = ВидПодписейКДиаграмме.Нет;
		Диаграмма.ОбластьПостроения.ОтображатьПодписиШкалыТочек = Истина;
		Диаграмма.ОбластьПостроения.ШкалаТочек.ОтображениеЗаголовка = ОтображениеЗаголовкаШкалыДиаграммы.НеОтображать;
	Иначе
		Диаграмма.ВидПодписей = ВидПодписейКДиаграмме.Точка;
		Диаграмма.ОбластьПостроения.ШкалаТочек.ОтображениеЗаголовка = ОтображениеЗаголовкаШкалыДиаграммы.Отображать;		
		Диаграмма.ОбластьПостроения.ОтображатьПодписиШкалыТочек = Ложь;
	КонецЕсли;                                                           	
	Диаграмма.ОбластьПостроения.ШкалаТочек.ТекстЗаголовка = "Версии конфигурации";
	Диаграмма.ПоложениеПодписей = ПоложениеПодписейКДиаграмме.Край;
	Диаграмма.ОбластьПостроения.ШкалаЗначений.ОтображениеЗаголовка = ОтображениеЗаголовкаШкалыДиаграммы.Отображать;
	Диаграмма.ОбластьПостроения.ШкалаЗначений.ТекстЗаголовка = "APDEX";	
			
	ПредставлениеПлатформы = ?(Отчет.ОтборПоЧастойВерсииПлатформы," на платформе " + Данные.ВерсияПлатформы, ""); 
    
    Если Отчет.РежимРаботыКонфигурации = "Не учитывать" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Производительность версий конфигурации" + ПредставлениеПлатформы;
        
        Серия = Диаграмма.Серии.Добавить();
        Серия.Текст = "";
        
        Диаграмма.ОтображатьЛегенду = Ложь;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 1, 1);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Не учитывать + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Файловый + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Клиент-Серверный + Количество пользователей" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Производительность версий конфигурации" + ПредставлениеПлатформы + " в разрезе количества пользователей";
        
        СерииКлючей = ПолучитьСерии();
        Серии = Новый Соответствие;
        Для Каждого Ключ Из СерииКлючей Цикл
            Серии[Ключ] = Диаграмма.Серии.Добавить();
            ИмяСерии = СтрЗаменить(Ключ, "МЕЖДУ_", "");
            ИмяСерии = СтрЗаменить(ИмяСерии, "БОЛЬШЕ_", "от ");
            ИмяСерии = СтрЗаменить(ИмяСерии, "МЕНЬШЕ_", "до ");
            ИмяСерии = СтрЗаменить(ИмяСерии, "_", "-");
            Серии[Ключ].Текст = ИмяСерии;
        КонецЦикла;
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0, 1, 1);        
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Все" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Производительность версий конфигурации" + ПредставлениеПлатформы;
        
        СерииДляВывода = Новый Соответствие;
        
        СерияФайловый = Диаграмма.Серии.Добавить();
        СерияФайловый.Текст = "Файловый";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.F"), СерияФайловый);
        
        СерияКлиентСерверный = Диаграмма.Серии.Добавить();
        СерияКлиентСерверный.Текст = "Клиент-Серверный";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.S"), СерияКлиентСерверный);
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Файловый" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Производительность версий конфигурации" + ПредставлениеПлатформы;
        
        СерииДляВывода = Новый Соответствие;
        
        СерияФайловый = Диаграмма.Серии.Добавить();
        СерияФайловый.Текст = "Файловый";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.F"), СерияФайловый);
                       
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Клиент-Серверный" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Производительность версий конфигурации" + ПредставлениеПлатформы;
        
        СерииДляВывода = Новый Соответствие;
        
        СерияКлиентСерверный = Диаграмма.Серии.Добавить();
        СерияКлиентСерверный.Текст = "Клиент-Серверный";
        СерияКлиентСерверный.Цвет = Новый Цвет(254, 225, 1);
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.S"), СерияКлиентСерверный);
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    КонецЕсли;
       
    Диаграмма.ОбластьПостроения.ФорматШкалыЗначений = "ЧДЦ=2; ЧН=0";
        
    МинимальноеЗначение = 1;
    ТочкиДляВывода = Новый Соответствие;
	ШаблонЗаголовкаТочки = "%1; Замеров: %2"; // APDEX: ";
    Для Каждого ТекЭлемент Из Данные.ПроизводительностьВерсийКонфигурацийНаПлатформе Цикл
        
        Если Отчет.МинимальноеКоличествоБазДляРаспределения <> 0 И Данные.ВерсииДляВывода[ТекЭлемент.ВерсияКонфигурации] = Неопределено Тогда
            Продолжить;
        КонецЕсли;
                
        Значение = ТекЭлемент.APDEX;
        Если Значение < МинимальноеЗначение Тогда
            МинимальноеЗначение = Значение;
		КонецЕсли;
		
		ЗаголовокТочки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовкаТочки, ТекЭлемент.ВерсияКонфигурации, ТекЭлемент.КоличествоЗамеров);
        
        Если Отчет.РежимРаботыКонфигурации = "Не учитывать" Тогда
            
            Точка = Диаграмма.Точки.Добавить();
            Точка.Текст = ЗаголовокТочки; //ТекЭлемент.ВерсияКонфигурации;
            Точка.ПриоритетЦвета = Истина;
            
            Если Значение >= 0 И Значение <= 0.5 Тогда
                Точка.Цвет = ЦветНеприемлимо;
            ИначеЕсли Значение > 0.5 И Значение <= 0.7 Тогда
                Точка.Цвет = ЦветОченьПлохо;
            ИначеЕсли Значение > 0.7 И Значение <= 0.85 Тогда
                Точка.Цвет = ЦветПлохо;
            ИначеЕсли Значение > 0.85 И Значение <= 0.94 Тогда
                Точка.Цвет = ЦветХорошо;
            ИначеЕсли Значение > 0.94 И Значение <= 1 Тогда
                Точка.Цвет = ЦветОтлично;
            КонецЕсли;
            
        ИначеЕсли Отчет.РежимРаботыКонфигурации = "Не учитывать + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Файловый + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Клиент-Серверный + Количество пользователей" Тогда
            
            Если ТочкиДляВывода[ТекЭлемент.ВерсияКонфигурации] = Неопределено Тогда
                Точка = Диаграмма.Точки.Добавить();
                Точка.Текст = ЗаголовокТочки; //ТекЭлемент.ВерсияКонфигурации;
                ТочкиДляВывода.Вставить(ТекЭлемент.ВерсияКонфигурации, Точка);
            КонецЕсли;
            
            Точка = ТочкиДляВывода[ТекЭлемент.ВерсияКонфигурации];
            Серия = Серии[ТекЭлемент.СерияПользователей];
            
        ИначеЕсли Отчет.РежимРаботыКонфигурации = "Все" ИЛИ Отчет.РежимРаботыКонфигурации = "Файловый" ИЛИ Отчет.РежимРаботыКонфигурации = "Клиент-Серверный" Тогда
            
            Если ТочкиДляВывода[ТекЭлемент.ВерсияКонфигурации] = Неопределено Тогда
                Точка = Диаграмма.Точки.Добавить();
                Точка.Текст = ЗаголовокТочки; //ТекЭлемент.ВерсияКонфигурации;
                ТочкиДляВывода.Вставить(ТекЭлемент.ВерсияКонфигурации, Точка);
            КонецЕсли;
            
            Точка = ТочкиДляВывода[ТекЭлемент.ВерсияКонфигурации];
            Серия = СерииДляВывода[ТекЭлемент.РежимРаботыКонфигурации];
                   
        КонецЕсли;
                
        Диаграмма.УстановитьЗначение(Точка, Серия, Значение);
        
        Если МинимальноеЗначение > Значение Тогда
            МинимальноеЗначение = Значение;
        КонецЕсли;
                
    КонецЦикла;
    
    Если Отчет.ИспользоватьБазовоеЗначение Тогда
        Диаграмма.БазовоеЗначение = (ЦЕЛ(МинимальноеЗначение * 10) - 1)/10;
    Иначе
        Диаграмма.БазовоеЗначение = 0;
    КонецЕсли;
            
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.ДиаграммаРаспределениеВерсийКонфигурацийПоПлатформе.Видимость = Отчет.АнализироватьПлатформу;
	Элементы.ДиаграммаПроизводительностьПлатформы.Видимость = Отчет.АнализироватьПлатформу;
	Элементы.ДиаграммаРаспределениеВерсийПлатформыКонфигурации.Видимость = Отчет.АнализироватьПлатформу;
КонецПроцедуры
	
	
&НаСервере
Функция ПолучитьСерии()
    
    ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Отчет.РаспределениеПользователейXML);
	ТаблицаРаспределенияПользователей = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
    
    Серии = Новый Массив;
    Для Каждого ТекСтрока Из ТаблицаРаспределенияПользователей Цикл
        ПользователейОт = Формат(ТекСтрока.ПользователейОт, "ЧН=0; ЧГ=0");
        ПользователейДо = Формат(ТекСтрока.ПользователейДо, "ЧН=0; ЧГ=0");
        Если ВРЕГ(ТекСтрока.Условие) = "МЕЖДУ" Тогда
            Ключ = ВРЕГ(ТекСтрока.Условие) + "_" + ПользователейОт + "_" + ПользователейДо;
        ИначеЕсли ВРЕГ(ТекСтрока.Условие) = "БОЛЬШЕ" ТОГДА
            Ключ = ВРЕГ(ТекСтрока.Условие) + "_" + ПользователейДо;
        ИначеЕсли ВРЕГ(ТекСтрока.Условие) = "МЕНЬШЕ" ТОГДА
            Ключ = ВРЕГ(ТекСтрока.Условие) + "_" + ПользователейДо;
        КонецЕсли;
        Серии.Добавить(Ключ);
    КонецЦикла;
    
    Возврат Серии;
        
КонецФункции

&НаКлиенте
Процедура ОбновитьДиаграммаРаспределениеВерсийКонфигурацийПоПлатформе(Диаграмма, Данные)
    
    Диаграмма.Обновление = Ложь;
    Диаграмма.Очистить();
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка, 0, 0, 0.1, 1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 1, 1);
    
    Если Отчет.РежимРаботыКонфигурации = "Не учитывать" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Распределение количества информационных баз по версиям конфигурации";
        
        Серия = Диаграмма.Серии.Добавить();
        Серия.Цвет = Новый Цвет(251,237,158);
        
        Диаграмма.ОтображатьЛегенду = Ложь;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 1, 1);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Не учитывать + Количество пользователей" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Распределение количества информационных баз по версиям конфигурации и количеству пользователей";
        
        СерииКлючей = ПолучитьСерии();
        Серии = Новый Соответствие;
        Для Каждого Ключ Из СерииКлючей Цикл
            Серии[Ключ] = Диаграмма.Серии.Добавить();
            ИмяСерии = СтрЗаменить(Ключ, "МЕЖДУ_", "");
            ИмяСерии = СтрЗаменить(ИмяСерии, "БОЛЬШЕ_", "от ");
            ИмяСерии = СтрЗаменить(ИмяСерии, "МЕНЬШЕ_", "до ");
            ИмяСерии = СтрЗаменить(ИмяСерии, "_", "-");
            Серии[Ключ].Текст = ИмяСерии;
        КонецЦикла;
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0, 1, 1);
                
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Все" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Распределение количества информационных баз по версиям конфигурации";
        
        СерииДляВывода = Новый Соответствие;
        
        СерияФайловый = Диаграмма.Серии.Добавить();
        СерияФайловый.Текст = "Файловый";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.F"), СерияФайловый);
        
        СерияКлиентСерверный = Диаграмма.Серии.Добавить();
        СерияКлиентСерверный.Текст = "Клиент-Серверный";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.S"), СерияКлиентСерверный);
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Файловый" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Распределение количества информационных баз по версиям конфигурации";
        
        СерииДляВывода = Новый Соответствие;
        
        СерияФайловый = Диаграмма.Серии.Добавить();
        СерияФайловый.Текст = "Файловый";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.F"), СерияФайловый);
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Файловый + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Клиент-Серверный + Количество пользователей" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Распределение количества информационных баз по версиям конфигурации и количеству пользователей";
        
        СерииКлючей = ПолучитьСерии();
        Серии = Новый Соответствие;
        Для Каждого Ключ Из СерииКлючей Цикл
            Серии[Ключ] = Диаграмма.Серии.Добавить();
            ИмяСерии = СтрЗаменить(Ключ, "МЕЖДУ_", "");
            ИмяСерии = СтрЗаменить(ИмяСерии, "БОЛЬШЕ_", "от ");
            ИмяСерии = СтрЗаменить(ИмяСерии, "МЕНЬШЕ_", "до ");
            ИмяСерии = СтрЗаменить(ИмяСерии, "_", "-");
            Серии[Ключ].Текст = ИмяСерии;
        КонецЦикла;
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0, 1, 1);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Клиент-Серверный" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Распределение количества информационных баз по версиям конфигурации";
        
        СерииДляВывода = Новый Соответствие;
        
        СерияКлиентСерверный = Диаграмма.Серии.Добавить();
        СерияКлиентСерверный.Текст = "Клиент-Серверный";
        СерияКлиентСерверный.Цвет = Новый Цвет(254, 225, 1);
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.S"), СерияКлиентСерверный);
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    КонецЕсли;
    
    ВерсииДляВывода = Новый Соответствие;
    
    Если Отчет.МинимальноеКоличествоБазДляРаспределения <> 0 Тогда
        
        МаксимальноеЗначениеВерсииКонфигурации = Новый Соответствие;
        
        Для Каждого ТекЭлемент Из Данные.РаспределениеВерсийКонфигурацийПоВерсииПлатформы Цикл
            Если МаксимальноеЗначениеВерсииКонфигурации[ТекЭлемент.ВерсияКонфигурации] = Неопределено Тогда
                МаксимальноеЗначениеВерсииКонфигурации.Вставить(ТекЭлемент.ВерсияКонфигурации, 0);
            КонецЕсли;
            
            МаксимальноеЗначениеВерсииКонфигурации[ТекЭлемент.ВерсияКонфигурации] = МаксимальноеЗначениеВерсииКонфигурации[ТекЭлемент.ВерсияКонфигурации] + ТекЭлемент.КолвоИБ;
        КонецЦикла;
        
        МаксимальноеЗначение =  0;
        
        Для Каждого ТекЗначение Из МаксимальноеЗначениеВерсииКонфигурации Цикл
            Если МаксимальноеЗначение < ТекЗначение.Значение Тогда
                МаксимальноеЗначение = ТекЗначение.Значение;
            КонецЕсли;
        КонецЦикла;
        
        ПорогВхождения = ЦЕЛ((МаксимальноеЗначение/100) * Отчет.МинимальноеКоличествоБазДляРаспределения);
        Для Каждого ТекЗначение Из МаксимальноеЗначениеВерсииКонфигурации Цикл
            Если ТекЗначение.Значение >= ПорогВхождения Тогда
                ВерсииДляВывода.Вставить(ТекЗначение.Ключ, Истина);
            КонецЕсли;
        КонецЦикла;
                
    КонецЕсли;
        
    ТочкиДляВывода = Новый Соответствие;
    Для Каждого ТекЭлемент Из Данные.РаспределениеВерсийКонфигурацийПоВерсииПлатформы Цикл
        
        Если Отчет.МинимальноеКоличествоБазДляРаспределения <> 0 И ВерсииДляВывода[ТекЭлемент.ВерсияКонфигурации] = Неопределено Тогда
            Продолжить;
        КонецЕсли;
        
        Если ТочкиДляВывода[ТекЭлемент.ВерсияКонфигурации] = Неопределено Тогда
            Точка = Диаграмма.Точки.Добавить();
            Точка.Текст = ТекЭлемент.ВерсияКонфигурации;
            ТочкиДляВывода.Вставить(ТекЭлемент.ВерсияКонфигурации, Точка);
        КонецЕсли;
        
        Если Отчет.РежимРаботыКонфигурации = "Не учитывать" Тогда
            Диаграмма.УстановитьЗначение(ТочкиДляВывода[ТекЭлемент.ВерсияКонфигурации], Серия, ТекЭлемент.КолвоИБ);
        ИначеЕсли Отчет.РежимРаботыКонфигурации = "Не учитывать + Количество пользователей" Тогда
            Диаграмма.УстановитьЗначение(ТочкиДляВывода[ТекЭлемент.ВерсияКонфигурации], Серии[ТекЭлемент.СерияПользователей], ТекЭлемент.КолвоИБ);
        ИначеЕсли Отчет.РежимРаботыКонфигурации = "Файловый + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Клиент-Серверный + Количество пользователей" Тогда
            Диаграмма.УстановитьЗначение(ТочкиДляВывода[ТекЭлемент.ВерсияКонфигурации], Серии[ТекЭлемент.СерияПользователей], ТекЭлемент.КолвоИБ);    
        Иначе
            Диаграмма.УстановитьЗначение(ТочкиДляВывода[ТекЭлемент.ВерсияКонфигурации], СерииДляВывода[ТекЭлемент.РежимРаботыКонфигурации], ТекЭлемент.КолвоИБ);
        КонецЕсли;
                    
    КонецЦикла;
    
    Данные.Вставить("ВерсииДляВывода", ВерсииДляВывода);
    
КонецПроцедуры

&НаКлиенте
Процедура ВывестиРезультатПоВерсииКонфигурации(Данные)
    
    ДиаграммаПроизводительностьПлатформы.Обновление = Ложь;
    ДиаграммаРаспределениеВерсийПлатформыКонфигурации.Обновление = Ложь;
    
    ОбновитьДиаграммаРаспределениеВерсийПлатформыКонфигурации(ДиаграммаРаспределениеВерсийПлатформыКонфигурации, Данные);
    ОбновитьДиаграммаПроизводительностьПлатформы(ДиаграммаПроизводительностьПлатформы, Данные);
        
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДиаграммаПроизводительностьПлатформы(Диаграмма, Данные)
    
    ЦветНеприемлимо = Новый Цвет(204, 204, 204);
    ЦветОченьПлохо = Новый Цвет(255, 204, 102);
    ЦветПлохо = Новый Цвет(255, 255, 102);
    ЦветХорошо = Новый Цвет(204, 255, 153);
    ЦветОтлично = Новый Цвет(204, 255, 255);
    
    Диаграмма.Очистить();
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка, 0, 0, 0.1, 1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 1, 1);
       
    Диаграмма.ОбластьПостроения.ФорматШкалыЗначений = "ЧДЦ=2; ЧН=0";
    
    Если Отчет.РежимРаботыКонфигурации = "Не учитывать" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Производительность версий платформы для конфигурации " + Данные.ВерсияКонфигурации;
        
        Серия = Диаграмма.Серии.Добавить();
        Серия.Текст = "";
        
        Диаграмма.ОтображатьЛегенду = Ложь;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 1, 1);
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Не учитывать + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Файловый + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Клиент-Серверный + Количество пользователей" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Производительность версий платформы для конфигурации " + Данные.ВерсияКонфигурации + " в разрезе количества пользователей";
        
        СерииКлючей = ПолучитьСерии();
        Серии = Новый Соответствие;
        Для Каждого Ключ Из СерииКлючей Цикл
            Серии[Ключ] = Диаграмма.Серии.Добавить();
            ИмяСерии = СтрЗаменить(Ключ, "МЕЖДУ_", "");
            ИмяСерии = СтрЗаменить(ИмяСерии, "БОЛЬШЕ_", "от ");
            ИмяСерии = СтрЗаменить(ИмяСерии, "МЕНЬШЕ_", "до ");
            ИмяСерии = СтрЗаменить(ИмяСерии, "_", "-");
            Серии[Ключ].Текст = ИмяСерии;
        КонецЦикла;
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0, 1, 1);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Все" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Производительность версий платформы для конфигурации " + Данные.ВерсияКонфигурации;
        
        СерииДляВывода = Новый Соответствие;
        
        СерияФайловый = Диаграмма.Серии.Добавить();
        СерияФайловый.Текст = "Файловый";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.F"), СерияФайловый);
        
        СерияКлиентСерверный = Диаграмма.Серии.Добавить();
        СерияКлиентСерверный.Текст = "Клиент-Серверный";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.S"), СерияКлиентСерверный);
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Файловый" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Производительность версий платформы для конфигурации " + Данные.ВерсияКонфигурации;
        
        СерииДляВывода = Новый Соответствие;
        
        СерияФайловый = Диаграмма.Серии.Добавить();
        СерияФайловый.Текст = "Файловый";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.F"), СерияФайловый);
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Клиент-Серверный" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Производительность версий платформы для конфигурации " + Данные.ВерсияКонфигурации;
        
        СерииДляВывода = Новый Соответствие;
        
        СерияКлиентСерверный = Диаграмма.Серии.Добавить();
        СерияКлиентСерверный.Текст = "Клиент-Серверный";
        СерияКлиентСерверный.Цвет = Новый Цвет(254, 225, 1);
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.S"), СерияКлиентСерверный);
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    КонецЕсли;
    
    МинимальноеЗначение = 1;
    ТочкиДляВывода = Новый Соответствие;
    Для Каждого ТекЭлемент Из Данные.ПроизводительностьВерсийПлатформыНаКонфигурации Цикл
        
        Если Отчет.МинимальноеКоличествоБазДляРаспределения <> 0 И Данные.ВерсииДляВывода[ТекЭлемент.ВерсияПлатформы] = Неопределено Тогда
            Продолжить;
        КонецЕсли;
        
        Значение = ТекЭлемент.APDEX;
        Если Значение < МинимальноеЗначение Тогда
            МинимальноеЗначение = Значение;
        КонецЕсли;
        
        Если Отчет.РежимРаботыКонфигурации = "Не учитывать" Тогда
            
            Точка = Диаграмма.Точки.Добавить();
            Точка.Текст = ТекЭлемент.ВерсияПлатформы;
            Точка.ПриоритетЦвета = Истина;
            
            Если Значение >= 0 И Значение <= 0.5 Тогда
                Точка.Цвет = ЦветНеприемлимо;
            ИначеЕсли Значение > 0.5 И Значение <= 0.7 Тогда
                Точка.Цвет = ЦветОченьПлохо;
            ИначеЕсли Значение > 0.7 И Значение <= 0.85 Тогда
                Точка.Цвет = ЦветПлохо;
            ИначеЕсли Значение > 0.85 И Значение <= 0.94 Тогда
                Точка.Цвет = ЦветХорошо;
            ИначеЕсли Значение > 0.94 И Значение <= 1 Тогда
                Точка.Цвет = ЦветОтлично;
            КонецЕсли;
            
        ИначеЕсли Отчет.РежимРаботыКонфигурации = "Не учитывать + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Файловый + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Клиент-Серверный + Количество пользователей" Тогда
            
            Если ТочкиДляВывода[ТекЭлемент.ВерсияПлатформы] = Неопределено Тогда
                Точка = Диаграмма.Точки.Добавить();
                Точка.Текст = ТекЭлемент.ВерсияПлатформы;
                ТочкиДляВывода.Вставить(ТекЭлемент.ВерсияПлатформы, Точка);
            КонецЕсли;
            
            Точка = ТочкиДляВывода[ТекЭлемент.ВерсияПлатформы];
            Серия = Серии[ТекЭлемент.СерияПользователей];
            
        ИначеЕсли Отчет.РежимРаботыКонфигурации = "Все" ИЛИ Отчет.РежимРаботыКонфигурации = "Файловый" ИЛИ Отчет.РежимРаботыКонфигурации = "Клиент-Серверный" Тогда
            
            Если ТочкиДляВывода[ТекЭлемент.ВерсияПлатформы] = Неопределено Тогда
                Точка = Диаграмма.Точки.Добавить();
                Точка.Текст = ТекЭлемент.ВерсияПлатформы;
                ТочкиДляВывода.Вставить(ТекЭлемент.ВерсияПлатформы, Точка);
            КонецЕсли;
            
            Точка = ТочкиДляВывода[ТекЭлемент.ВерсияПлатформы];
            Серия = СерииДляВывода[ТекЭлемент.РежимРаботыКонфигурации];
            
        КонецЕсли;
        
        Если МинимальноеЗначение > Значение Тогда
            МинимальноеЗначение = Значение;
        КонецЕсли;
                
        Диаграмма.УстановитьЗначение(Точка, Серия, Значение);
            
    КонецЦикла;
    
    Если Отчет.ИспользоватьБазовоеЗначение Тогда
        Диаграмма.БазовоеЗначение = (ЦЕЛ(МинимальноеЗначение * 10) - 1)/10;
    Иначе
        Диаграмма.БазовоеЗначение = 0;
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДиаграммаРаспределениеВерсийПлатформыКонфигурации(Диаграмма, Данные)
    
    Диаграмма.Обновление = Ложь;
    Диаграмма.Очистить();
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка, 0, 0, 0.1, 1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 1, 1);
    
    Если Отчет.РежимРаботыКонфигурации = "Не учитывать" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Распределение количества информационных баз по версиям платформы";
        
        Серия = Диаграмма.Серии.Добавить();
        Серия.Цвет = Новый Цвет(251,237,158);
        
        Диаграмма.ОтображатьЛегенду = Ложь;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 1, 1);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Не учитывать + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Файловый + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Клиент-Серверный + Количество пользователей" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Распределение количества информационных баз по версиям платформы и количеству пользователей";
        
        СерииКлючей = ПолучитьСерии();
        Серии = Новый Соответствие;
        Для Каждого Ключ Из СерииКлючей Цикл
            Серии[Ключ] = Диаграмма.Серии.Добавить();
            ИмяСерии = СтрЗаменить(Ключ, "МЕЖДУ_", "");
            ИмяСерии = СтрЗаменить(ИмяСерии, "БОЛЬШЕ_", "от ");
            ИмяСерии = СтрЗаменить(ИмяСерии, "МЕНЬШЕ_", "до ");
            ИмяСерии = СтрЗаменить(ИмяСерии, "_", "-");
            Серии[Ключ].Текст = ИмяСерии;
        КонецЦикла;
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0, 1, 1);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Все" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Распределение количества информационных баз по версиям платформы";
        
        СерииДляВывода = Новый Соответствие;
        
        СерияФайловый = Диаграмма.Серии.Добавить();
        СерияФайловый.Текст = "Файловый";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.F"), СерияФайловый);
        
        СерияКлиентСерверный = Диаграмма.Серии.Добавить();
        СерияКлиентСерверный.Текст = "Клиент-Серверный";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.S"), СерияКлиентСерверный);
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Файловый" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Распределение количества информационных баз по версиям платформы";
        
        СерииДляВывода = Новый Соответствие;
        
        СерияФайловый = Диаграмма.Серии.Добавить();
        СерияФайловый.Текст = "Файловый";
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.F"), СерияФайловый);
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    ИначеЕсли Отчет.РежимРаботыКонфигурации = "Клиент-Серверный" Тогда
        
        Диаграмма.ОбластьЗаголовка.Текст = "Распределение количества информационных баз по версиям платформы";
        
        СерииДляВывода = Новый Соответствие;
        
        СерияКлиентСерверный = Диаграмма.Серии.Добавить();
        СерияКлиентСерверный.Текст = "Клиент-Серверный";
        СерияКлиентСерверный.Цвет = Новый Цвет(254, 225, 1);
        СерииДляВывода.Вставить(ПредопределенноеЗначение("Перечисление.РежимРаботыКонфигурации.S"), СерияКлиентСерверный);
        
        Диаграмма.ОтображатьЛегенду = Истина;
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения, 0.1, 0, 0.9, 1);
        УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды, 0.9, 0.1, 1, 0.5);
        
    КонецЕсли;
    
    ВерсииДляВывода = Новый Соответствие;
    
    Если Отчет.МинимальноеКоличествоБазДляРаспределения <> 0 Тогда
        
        МаксимальноеЗначениеВерсииПлатформы = Новый Соответствие;
        
        Для Каждого ТекЭлемент Из Данные.РаспределениеВерсийПлатформыПоВерсииКонфигурации Цикл
            Если МаксимальноеЗначениеВерсииПлатформы[ТекЭлемент.ВерсияПлатформы] = Неопределено Тогда
                МаксимальноеЗначениеВерсииПлатформы.Вставить(ТекЭлемент.ВерсияПлатформы, 0);
            КонецЕсли;
            
            МаксимальноеЗначениеВерсииПлатформы[ТекЭлемент.ВерсияПлатформы] = МаксимальноеЗначениеВерсииПлатформы[ТекЭлемент.ВерсияПлатформы] + ТекЭлемент.КолвоИБ;
        КонецЦикла;
        
        МаксимальноеЗначение =  0;
        
        Для Каждого ТекЗначение Из МаксимальноеЗначениеВерсииПлатформы Цикл
            Если МаксимальноеЗначение < ТекЗначение.Значение Тогда
                МаксимальноеЗначение = ТекЗначение.Значение;
            КонецЕсли;
        КонецЦикла;
        
        ПорогВхождения = ЦЕЛ((МаксимальноеЗначение/100) * Отчет.МинимальноеКоличествоБазДляРаспределения);
        Для Каждого ТекЗначение Из МаксимальноеЗначениеВерсииПлатформы Цикл
            Если ТекЗначение.Значение >= ПорогВхождения Тогда
                ВерсииДляВывода.Вставить(ТекЗначение.Ключ, Истина);
            КонецЕсли;
        КонецЦикла;
                
    КонецЕсли;
    
    ТочкиДляВывода = Новый Соответствие;
    Для Каждого ТекЭлемент Из Данные.РаспределениеВерсийПлатформыПоВерсииКонфигурации Цикл
        
        Если Отчет.МинимальноеКоличествоБазДляРаспределения <> 0 И ВерсииДляВывода[ТекЭлемент.ВерсияПлатформы] = Неопределено Тогда
            Продолжить;
        КонецЕсли;
        
        Если ТочкиДляВывода[ТекЭлемент.ВерсияПлатформы] = Неопределено Тогда
            Точка = Диаграмма.Точки.Добавить();
            Точка.Текст = ТекЭлемент.ВерсияПлатформы;
            ТочкиДляВывода.Вставить(ТекЭлемент.ВерсияПлатформы, Точка);
        КонецЕсли;
        
        Если Отчет.РежимРаботыКонфигурации = "Не учитывать" Тогда
            Диаграмма.УстановитьЗначение(ТочкиДляВывода[ТекЭлемент.ВерсияПлатформы], Серия, ТекЭлемент.КолвоИБ);
        ИначеЕсли Отчет.РежимРаботыКонфигурации = "Не учитывать + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Файловый + Количество пользователей" ИЛИ Отчет.РежимРаботыКонфигурации = "Клиент-Серверный + Количество пользователей" Тогда
            Диаграмма.УстановитьЗначение(ТочкиДляВывода[ТекЭлемент.ВерсияПлатформы], Серии[ТекЭлемент.СерияПользователей], ТекЭлемент.КолвоИБ);    
        Иначе
            Диаграмма.УстановитьЗначение(ТочкиДляВывода[ТекЭлемент.ВерсияПлатформы], СерииДляВывода[ТекЭлемент.РежимРаботыКонфигурации], ТекЭлемент.КолвоИБ);
        КонецЕсли;
                
    КонецЦикла;
    
    Данные.Вставить("ВерсииДляВывода", ВерсииДляВывода);
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверкаФормированияДанныхНаСервере(РезультатЗапуска)
    
    РезультатПроверки = Новый Структура("ПоВерсииПлатформы, ПоВерсииКонфигурации");
    
    Если РезультатЗапуска["ПоВерсииПлатформы"] <> Неопределено Тогда
        ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(РезультатЗапуска["ПоВерсииПлатформы"]);
        Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
            РезультатПроверки.ПоВерсииПлатформы = Неопределено;
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
            РезультатПроверки.ПоВерсииПлатформы = ПолучитьИзВременногоХранилища(РезультатЗапуска["АдресХранилищаВерсийКонфигурацийПоВерсииПлатформы"]);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
            РезультатПроверки.ПоВерсииПлатформы = ПодробноеПредставлениеОшибки(ФЗ.ИнформацияОбОшибке);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
            РезультатПроверки.ПоВерсииПлатформы = "Отменено";
        КонецЕсли;
    КонецЕсли;
    
    Если РезультатЗапуска["ПоВерсииКонфигурации"] <> Неопределено Тогда
        ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(РезультатЗапуска["ПоВерсииКонфигурации"]);
        Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
            РезультатПроверки.ПоВерсииКонфигурации = Неопределено;
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
            РезультатПроверки.ПоВерсииКонфигурации = ПолучитьИзВременногоХранилища(РезультатЗапуска["АдресХранилищаВерсийПлатформыПоВерсииКонфигурации"]);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
            РезультатПроверки.ПоВерсииКонфигурации = ПодробноеПредставлениеОшибки(ФЗ.ИнформацияОбОшибке);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
            РезультатПроверки.ПоВерсииКонфигурации = "Отменено";
        КонецЕсли;
    КонецЕсли;
    
    Возврат РезультатПроверки;
    
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьНаСервере(Параметры)
    
    АдресХранилищаВерсийКонфигурацийПоВерсииПлатформы = ПоместитьВоВременноеХранилище(Неопределено, Параметры.УникальныйИдентификаторФормы);
    АдресХранилищаВерсийПлатформыПоВерсииКонфигурации = ПоместитьВоВременноеХранилище(Неопределено, Параметры.УникальныйИдентификаторФормы);
    
    Параметры.Вставить("АдресХранилищаВерсийКонфигурацийПоВерсииПлатформы", АдресХранилищаВерсийКонфигурацийПоВерсииПлатформы);
    Параметры.Вставить("АдресХранилищаВерсийПлатформыПоВерсииКонфигурации", АдресХранилищаВерсийПлатформыПоВерсииКонфигурации);
    
    ВерсияПлатформы = ПолучитьСамуюЧастуюВерсиюПлатформы(Параметры);
    Параметры.Вставить("ВерсияПлатформы", ВерсияПлатформы);
    
    ВерсияКонфигурации = ПолучитьСамуюЧастуюВерсиюКонфигурации(Параметры);
    Параметры.Вставить("ВерсияКонфигурации", ВерсияКонфигурации);
    
    ПараметрыФоновогоЗадания = Новый Массив;
    ПараметрыФоновогоЗадания.Добавить(Параметры);
    
    ФзПоВерсииПлатформы = ФоновыеЗадания.Выполнить("ЦентрМониторингаИмпортСлужебный.СформироватьДанныеКонфигурацииПоВерсииПлатформы", ПараметрыФоновогоЗадания,,"Отчет МониторПроизводительностиКонфигурации");
	Если Параметры.АнализироватьПлатформу Тогда
    	ФзПоВерсииКонфигурации = ФоновыеЗадания.Выполнить("ЦентрМониторингаИмпортСлужебный.СформироватьДанныеКонфигурацииПоВерсииКонфигурации", ПараметрыФоновогоЗадания,,"Отчет МониторПроизводительностиКонфигурации");
	КонецЕсли;
    
    РезультатЗапуска = Новый Соответствие;
    РезультатЗапуска.Вставить("ПоВерсииПлатформы", ФзПоВерсииПлатформы.УникальныйИдентификатор);
	Если Параметры.АнализироватьПлатформу Тогда
    	РезультатЗапуска.Вставить("ПоВерсииКонфигурации", ФзПоВерсииКонфигурации.УникальныйИдентификатор);
		РезультатЗапуска.Вставить("АдресХранилищаВерсийПлатформыПоВерсииКонфигурации", АдресХранилищаВерсийПлатформыПоВерсииКонфигурации);
	КонецЕсли;
    РезультатЗапуска.Вставить("АдресХранилищаВерсийКонфигурацийПоВерсииПлатформы", АдресХранилищаВерсийКонфигурацийПоВерсииПлатформы);        
    
    Возврат РезультатЗапуска;
        
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСамуюЧастуюВерсиюПлатформы(Параметры)
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = Общий.ТекстЗапросаПериодов(Дата(Параметры.Период.ДатаНачала), Дата(Параметры.Период.ДатаОкончания), "ДЕНЬ");
    Запрос.Текст = Запрос.Текст + "
    |;
    |ВЫБРАТЬ ПЕРВЫЕ 1
    |   Информация.ВерсияПлатформы КАК ВерсияПлатформы,
    |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Информация.ИнформационнаяБаза) КАК КолвоИБ
    |ИЗ
    |   Периоды
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   РегистрСведений.ИнформацияИсторияПодробно КАК Информация
    |ПО
    |   Информация.ПериодЗаписи = Периоды.Период
    |   И Информация.Конфигурация = &Конфигурация
    |   И Информация.ВерсияПлатформы <> &ПустаяВерсия
    |   {И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}
    |   {И Информация.КоличествоПользователей}
    |СГРУППИРОВАТЬ ПО
    |   Информация.ВерсияПлатформы
    |УПОРЯДОЧИТЬ ПО
    |   КолвоИБ УБЫВ
    |";
    
    Запрос.УстановитьПараметр("ДатаНачала", Дата(Параметры.Период.ДатаНачала));
    Запрос.УстановитьПараметр("ДатаОкончания", Дата(Параметры.Период.ДатаОкончания));
    Запрос.УстановитьПараметр("Конфигурация", Параметры.Конфигурация);
    Запрос.УстановитьПараметр("ПустаяВерсия", Справочники.ВерсииПлатформыЦентрМониторинга.НайтиПоНаименованию("0.0.0.0", Истина));
    
    Если Параметры.РежимРаботыКонфигурации = "Не учитывать" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "");
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "");
        
    ИначеЕсли Параметры.РежимРаботыКонфигурации = "Не учитывать + Количество пользователей" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "");
        
        ЧтениеXML = Новый ЧтениеXML;
        ЧтениеXML.УстановитьСтроку(Параметры.РаспределениеПользователей);
        ТаблицаРаспределенияПользователей = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
        
        УсловияПользователей = "";
        Для Каждого ТекСтрока Из ТаблицаРаспределенияПользователей Цикл
            
            ПользователейОт = Формат(ТекСтрока.ПользователейОт, "ЧН=0; ЧГ=0");
            ПользователейДо = Формат(ТекСтрока.ПользователейДо, "ЧН=0; ЧГ=0");
            
            Если ВРЕГ(ТекСтрока.Условие) = "МЕЖДУ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей МЕЖДУ " + ПользователейОт + " И " + ПользователейДо + " ИЛИ
                |";
            ИначеЕсли ВРЕГ(ТекСтрока.Условие) = "БОЛЬШЕ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей > " + ПользователейДо + " ИЛИ
                |";
            ИначеЕсли ВРЕГ(ТекСтрока.Условие) = "МЕНЬШЕ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей < " + ПользователейДо + " ИЛИ
                |";
            КонецЕсли;
            
        КонецЦикла;
        УсловияПользователей = Лев(УсловияПользователей, СтрДлина(УсловияПользователей) - 4);
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "И (" + УсловияПользователей + ")");
        
    ИначеЕсли Параметры.РежимРаботыКонфигурации = "Все" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "И Информация.РежимРаботыКонфигурации В (&РежимРаботыКонфигурации)");
        РежимыРаботыКонфигурации = Новый Массив;
        РежимыРаботыКонфигурации.Добавить(Перечисления.РежимРаботыКонфигурации.F);
        РежимыРаботыКонфигурации.Добавить(Перечисления.РежимРаботыКонфигурации.S);
        Запрос.УстановитьПараметр("РежимРаботыКонфигурации", РежимыРаботыКонфигурации);
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "");
        
    ИначеЕсли Параметры.РежимРаботыКонфигурации = "Файловый" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации");
        Запрос.УстановитьПараметр("РежимРаботыКонфигурации", Перечисления.РежимРаботыКонфигурации.F);
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "");
        
    ИначеЕсли Параметры.РежимРаботыКонфигурации = "Файловый + Количество пользователей" ИЛИ Параметры.РежимРаботыКонфигурации = "Клиент-Серверный + Количество пользователей" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации");
        Запрос.УстановитьПараметр("РежимРаботыКонфигурации", Перечисления.РежимРаботыКонфигурации.F);
        
        ЧтениеXML = Новый ЧтениеXML;
        ЧтениеXML.УстановитьСтроку(Параметры.РаспределениеПользователей);
        ТаблицаРаспределенияПользователей = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
        
        УсловияПользователей = "";
        Для Каждого ТекСтрока Из ТаблицаРаспределенияПользователей Цикл
            
            ПользователейОт = Формат(ТекСтрока.ПользователейОт, "ЧН=0; ЧГ=0");
            ПользователейДо = Формат(ТекСтрока.ПользователейДо, "ЧН=0; ЧГ=0");
            
            Если ВРЕГ(ТекСтрока.Условие) = "МЕЖДУ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей МЕЖДУ " + ПользователейОт + " И " + ПользователейДо + " ИЛИ
                |";
            ИначеЕсли ВРЕГ(ТекСтрока.Условие) = "БОЛЬШЕ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей > " + ПользователейДо + " ИЛИ
                |";
            ИначеЕсли ВРЕГ(ТекСтрока.Условие) = "МЕНЬШЕ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей < " + ПользователейДо + " ИЛИ
                |";
            КонецЕсли;
            
        КонецЦикла;
        УсловияПользователей = Лев(УсловияПользователей, СтрДлина(УсловияПользователей) - 4);
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "И (" + УсловияПользователей + ")");
        
    ИначеЕсли Параметры.РежимРаботыКонфигурации = "Клиент-Серверный" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации");
        Запрос.УстановитьПараметр("РежимРаботыКонфигурации", Перечисления.РежимРаботыКонфигурации.S);
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "");
        
    КонецЕсли;
        
    Результат = Запрос.Выполнить();
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        
        ВерсияПлатформы = Выборка.ВерсияПлатформы;
    Иначе
        ВерсияПлатформы = Неопределено;
    КонецЕсли;
    
    Возврат ВерсияПлатформы;
    
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСамуюЧастуюВерсиюКонфигурации(Параметры)
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = Общий.ТекстЗапросаПериодов(Дата(Параметры.Период.ДатаНачала), Дата(Параметры.Период.ДатаОкончания), "ДЕНЬ");
    Запрос.Текст = Запрос.Текст + "
    |;
    |ВЫБРАТЬ ПЕРВЫЕ 1
    |   Информация.ВерсияКонфигурации КАК ВерсияКонфигурации,
    |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Информация.ИнформационнаяБаза) КАК КолвоИБ
    |ИЗ
    |   Периоды
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   РегистрСведений.ИнформацияИсторияПодробно КАК Информация
    |ПО
    |   Информация.ПериодЗаписи = Периоды.Период
    |   И Информация.Конфигурация = &Конфигурация
    |   И Информация.ВерсияКонфигурации <> &ПустаяВерсия
    |   {И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}
    |   {И Информация.КоличествоПользователей}
    |СГРУППИРОВАТЬ ПО
    |   Информация.ВерсияКонфигурации
    |УПОРЯДОЧИТЬ ПО
    |   КолвоИБ УБЫВ
    |";
    
    Запрос.УстановитьПараметр("ДатаНачала", Дата(Параметры.Период.ДатаНачала));
    Запрос.УстановитьПараметр("ДатаОкончания", Дата(Параметры.Период.ДатаОкончания));
    Запрос.УстановитьПараметр("Конфигурация", Параметры.Конфигурация);
    Запрос.УстановитьПараметр("ПустаяВерсия", Справочники.ВерсииКонфигурации.НайтиПоНаименованию("0.0.0.0", Истина));
    
    Если Параметры.РежимРаботыКонфигурации = "Не учитывать" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "");
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "");
        
    ИначеЕсли Параметры.РежимРаботыКонфигурации = "Не учитывать + Количество пользователей" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "");
        
        ЧтениеXML = Новый ЧтениеXML;
        ЧтениеXML.УстановитьСтроку(Параметры.РаспределениеПользователей);
        ТаблицаРаспределенияПользователей = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
        
        УсловияПользователей = "";
        Для Каждого ТекСтрока Из ТаблицаРаспределенияПользователей Цикл
            
            ПользователейОт = Формат(ТекСтрока.ПользователейОт, "ЧН=0; ЧГ=0");
            ПользователейДо = Формат(ТекСтрока.ПользователейДо, "ЧН=0; ЧГ=0");
            
            Если ВРЕГ(ТекСтрока.Условие) = "МЕЖДУ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей МЕЖДУ " + ПользователейОт + " И " + ПользователейДо + " ИЛИ
                |";
            ИначеЕсли ВРЕГ(ТекСтрока.Условие) = "БОЛЬШЕ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей > " + ПользователейДо + " ИЛИ
                |";
            ИначеЕсли ВРЕГ(ТекСтрока.Условие) = "МЕНЬШЕ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей < " + ПользователейДо + " ИЛИ
                |";
            КонецЕсли;
            
        КонецЦикла;
        УсловияПользователей = Лев(УсловияПользователей, СтрДлина(УсловияПользователей) - 4);
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "И (" + УсловияПользователей + ")");
        
    ИначеЕсли Параметры.РежимРаботыКонфигурации = "Все" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "И Информация.РежимРаботыКонфигурации В (&РежимРаботыКонфигурации)");
        РежимыРаботыКонфигурации = Новый Массив;
        РежимыРаботыКонфигурации.Добавить(Перечисления.РежимРаботыКонфигурации.F);
        РежимыРаботыКонфигурации.Добавить(Перечисления.РежимРаботыКонфигурации.S);
        Запрос.УстановитьПараметр("РежимРаботыКонфигурации", РежимыРаботыКонфигурации);
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "");
        
    ИначеЕсли Параметры.РежимРаботыКонфигурации = "Файловый" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации");
        Запрос.УстановитьПараметр("РежимРаботыКонфигурации", Перечисления.РежимРаботыКонфигурации.F);
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "");
        
    ИначеЕсли Параметры.РежимРаботыКонфигурации = "Файловый + Количество пользователей" ИЛИ Параметры.РежимРаботыКонфигурации = "Клиент-Серверный + Количество пользователей" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации");
        Запрос.УстановитьПараметр("РежимРаботыКонфигурации", Перечисления.РежимРаботыКонфигурации.F);
        
        ЧтениеXML = Новый ЧтениеXML;
        ЧтениеXML.УстановитьСтроку(Параметры.РаспределениеПользователей);
        ТаблицаРаспределенияПользователей = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
        
        УсловияПользователей = "";
        Для Каждого ТекСтрока Из ТаблицаРаспределенияПользователей Цикл
            
            ПользователейОт = Формат(ТекСтрока.ПользователейОт, "ЧН=0; ЧГ=0");
            ПользователейДо = Формат(ТекСтрока.ПользователейДо, "ЧН=0; ЧГ=0");
            
            Если ВРЕГ(ТекСтрока.Условие) = "МЕЖДУ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей МЕЖДУ " + ПользователейОт + " И " + ПользователейДо + " ИЛИ
                |";
            ИначеЕсли ВРЕГ(ТекСтрока.Условие) = "БОЛЬШЕ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей > " + ПользователейДо + " ИЛИ
                |";
            ИначеЕсли ВРЕГ(ТекСтрока.Условие) = "МЕНЬШЕ" Тогда
                УсловияПользователей = УсловияПользователей + " Информация.КоличествоПользователей < " + ПользователейДо + " ИЛИ
                |";
            КонецЕсли;
            
        КонецЦикла;
        УсловияПользователей = Лев(УсловияПользователей, СтрДлина(УсловияПользователей) - 4);
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "И (" + УсловияПользователей + ")");
        
    ИначеЕсли Параметры.РежимРаботыКонфигурации = "Клиент-Серверный" Тогда
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "И Информация.РежимРаботыКонфигурации = &РежимРаботыКонфигурации");
        Запрос.УстановитьПараметр("РежимРаботыКонфигурации", Перечисления.РежимРаботыКонфигурации.S);
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И Информация.КоличествоПользователей}", "");
        
    КонецЕсли;
    
    Результат = Запрос.Выполнить();
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        
        ВерсияКонфигурации = Выборка.ВерсияКонфигурации;
    Иначе
        ВерсияКонфигурации = Неопределено;
    КонецЕсли;
    
    Возврат ВерсияКонфигурации;
    
КонецФункции

&НаКлиенте
Процедура УстановитьРазмерОбластиДиаграммы(ОбластьДиаграммы, Верх, Лево, Низ, Право)
    
    ОбластьДиаграммы.Верх = Верх;
    ОбластьДиаграммы.Лево = Лево;
    ОбластьДиаграммы.Низ = Низ;
    ОбластьДиаграммы.Право = Право;
    
КонецПроцедуры

#КонецОбласти


