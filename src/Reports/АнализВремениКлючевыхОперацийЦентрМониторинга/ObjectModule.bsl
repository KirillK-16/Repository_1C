
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
    
    // Отключаем стандартный вывод отчета - будем выводить программно 
	СтандартнаяОбработка = Ложь;
    
    ПараметрыФормирования = Новый Структура;
    ПараметрыФормирования.Вставить("АдресХранилища", ЭтотОбъект.АдресХранилища);
    ПараметрыФормирования.Вставить("ДокументРезультат", ДокументРезультат);
    ПараметрыФормирования.Вставить("ДанныеРасшифровки", ДанныеРасшифровки);
    ПараметрыФормирования.Вставить("Настройки", КомпоновщикНастроек.ПолучитьНастройки());
    ПараметрыФормирования.Вставить("ПользовательскиеНастройки", КомпоновщикНастроек.ПользовательскиеНастройки);
    ПараметрыФормирования.Вставить("ИмяОтчета", "АнализВремениКлючевыхОперацийЦентрМониторинга");
    ПараметрыФормирования.Вставить("ИмяСхемыКомпоновки", "ОсновнаяСхемаКомпоновкиДанных");
    ПараметрыФормирования.Вставить("ИмяНаборДанных", "НаборДанныхОценкаПроизводительности");
    
    ПараметрыФоновогоЗадания = Новый Массив;
    ПараметрыФоновогоЗадания.Добавить(ПараметрыФормирования);
    
    ФЗ = ФоновыеЗадания.Выполнить("ФункцииСКД.ПриКомпоновкеРезультатаФоновоеЗадание", ПараметрыФоновогоЗадания);
    ЭтотОбъект.ИдентификаторФоновогоЗадания = ФЗ.УникальныйИдентификатор;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеДляВывода(Настройки, ПользовательскиеНастройки) Экспорт
    
    ДатаНачалаЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
    
    ПараметрПериод = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
    ДатаНачала = Дата(ПараметрПериод.Значение.ДатаНачала);
    ДатаОкончания = Дата(ПараметрПериод.Значение.ДатаОкончания);
    
    ПараметрКонфигурация = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Конфигурация"));
    
    ПараметрВерсияКонфигурация = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВерсияКонфигурации"));
    
    ПараметрПрофильКлючевыхОпераций = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПрофильКлючевыхОпераций"));
    
    ПараметрЕстьПрофиль = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЕстьПрофиль"));
    
    ПараметрМинимальноеКоличествоЗамеров = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("МинимальноеКоличествоЗамеров"));
	
	ПараметрСтатус = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Статус"));
	
	ПараметрРежимРаботыКонфигурации = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("РежимРаботыКонфигурации"));
        
    ТекстТаблицаПериодов = СформироватьТекстПериодов(ДатаНачала, ДатаОкончания);
    
    Запрос = Новый Запрос;
    МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
    Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
    
    Справочники.ПрофилиКлючевыхОпераций.ДобавитьВременнуюТаблицуКлючевыхОпераций(ПараметрПрофильКлючевыхОпераций.Значение, Запрос, "КлючевыеОперации");
    
    Запрос.Текст = Запрос.Текст + ТекстТаблицаПериодов + "
    |;
    |ВЫБРАТЬ
    |   ИнформацияИстория.Конфигурация КАК Конфигурация,
    |   ИнформацияИстория.ВерсияКонфигурации КАК ВерсияКонфигурации,
	|   ИнформацияИстория.РежимРаботыКонфигурации КАК РежимРаботыКонфигурации,
    |   Замеры.КлючеваяОперация КАК КлючеваяОперация,
    |   Замеры.ВремяВыполнения КАК ВремяВыполнения,
    |   СУММА(Замеры.КоличествоОпераций) КАК КоличествоОпераций
    |ПОМЕСТИТЬ
    |   ВсеЗамерыВыборка
    |ИЗ
    |   Периоды
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   РегистрСведений.ИнформацияИсторияПодробно КАК ИнформацияИстория
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   РегистрСведений.ЗамерыВремениЦентрМониторинга КАК Замеры
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|   РегистрСведений.СтатусИнформационнойБазы КАК СтатусИнформационнойБазы
	|	ПО Замеры.ИнформационнаяБаза = СтатусИнформационнойБазы.ИнформационнаяБаза
	|   {И СтатусИнформационнойБазы.Статус = &Статус}
    |ПО
    |   Замеры.Период = ИнформацияИстория.ПериодЗаписи
    |   И Замеры.ИнформационнаяБаза = ИнформацияИстория.ИнформационнаяБаза   
    |ПО
    |   ИнформацияИстория.ПериодЗаписи = Периоды.Период
    |   {И ИнформацияИстория.Конфигурация = &Конфигурация}
    |   {И ИнформацияИстория.ВерсияКонфигурации = &ВерсияКонфигурации}
	|   {И ИнформацияИстория.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}
	|
	|//ГДЕ ДопУсловия
	|
	|СГРУППИРОВАТЬ ПО
    |   ИнформацияИстория.Конфигурация,
    |   ИнформацияИстория.ВерсияКонфигурации,
	|   ИнформацияИстория.РежимРаботыКонфигурации,
    |   Замеры.КлючеваяОперация,
    |   Замеры.ВремяВыполнения
    |;
    |ВЫБРАТЬ
    |   ВсеЗамерыВыборка.Конфигурация КАК Конфигурация,
    |   ВсеЗамерыВыборка.ВерсияКонфигурации КАК ВерсияКонфигурации,
	|   ВсеЗамерыВыборка.РежимРаботыКонфигурации КАК РежимРаботыКонфигурации,
    |   ВерсииКонфигурации.ВерсияЧисло КАК ВерсияКонфигурацииЧисло,
    |   ВЫБОР
    |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА ВсеЗамерыВыборка.КлючеваяОперация.Наименование
    |       ИНАЧЕ
    |           ВЫБОР
    |               КОГДА КлючевыеОперации.ИмяПредставление = &ПустаяСтрока ТОГДА ВсеЗамерыВыборка.КлючеваяОперация.Наименование
    |               ИНАЧЕ КлючевыеОперации.ИмяПредставление
    |           КОНЕЦ
    |   КОНЕЦ КАК КлючеваяОперацияПредставление,
    |   ВЫБОР
    |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА 1
    |       ИНАЧЕ КлючевыеОперации.ЦелевоеВремя
    |   КОНЕЦ КАК ЦелевоеВремя,
    |   ВЫБОР
    |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА 5
    |       ИНАЧЕ КлючевыеОперации.Важность
    |   КОНЕЦ КАК Важность,
    |   ВЫБОР
    |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА ЛОЖЬ
    |       ИНАЧЕ Истина
    |   КОНЕЦ КАК ЕстьПрофиль,
    |   КлючевыеОперации.Ответственный КАК Ответственный,
    |   МИНИМУМ(ВсеЗамерыВыборка.ВремяВыполнения) КАК МинимальноеВремяВыполнения,
    |   Сумма(ВсеЗамерыВыборка.ВремяВыполнения * ВсеЗамерыВыборка.КоличествоОпераций)/Сумма(ВсеЗамерыВыборка.КоличествоОпераций) КАК СреднееВремяВыполнения,
	|   Сумма(ВсеЗамерыВыборка.ВремяВыполнения * ВсеЗамерыВыборка.КоличествоОпераций) КАК СуммаВремяВыполнения,
    |   МАКСИМУМ(ВсеЗамерыВыборка.ВремяВыполнения) КАК МаксимальноеВремяВыполнения,
    |   СУММА(ВсеЗамерыВыборка.КоличествоОпераций) КАК ВсегоЗамеров
    |ПОМЕСТИТЬ
    |   ВсеЗамеры
    |ИЗ
    |   ВсеЗамерыВыборка
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   Справочник.ВерсииКонфигурации КАК ВерсииКонфигурации
    |ПО
    |   ВерсииКонфигурации.Ссылка = ВсеЗамерыВыборка.ВерсияКонфигурации
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   КлючевыеОперации
    |ПО
    |   КлючевыеОперации.КлючеваяОперация = ВсеЗамерыВыборка.КлючеваяОперация
    |{ГДЕ
    |   ВЫБОР
    |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА ЛОЖЬ
    |       ИНАЧЕ Истина
    |   КОНЕЦ = &ЕстьКлючеваяОперация}
    |СГРУППИРОВАТЬ ПО
    |   ВсеЗамерыВыборка.Конфигурация,
    |   ВсеЗамерыВыборка.ВерсияКонфигурации,
	|   ВсеЗамерыВыборка.РежимРаботыКонфигурации,
    |   ВерсииКонфигурации.ВерсияЧисло,
    |   ВЫБОР
    |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА ВсеЗамерыВыборка.КлючеваяОперация.Наименование
    |       ИНАЧЕ
    |           ВЫБОР
    |               КОГДА КлючевыеОперации.ИмяПредставление = &ПустаяСтрока ТОГДА ВсеЗамерыВыборка.КлючеваяОперация.Наименование
    |               ИНАЧЕ КлючевыеОперации.ИмяПредставление
    |           КОНЕЦ
    |   КОНЕЦ,
    |   ВЫБОР
    |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА 1
    |       ИНАЧЕ КлючевыеОперации.ЦелевоеВремя
    |   КОНЕЦ,
    |   ВЫБОР
    |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА 5
    |       ИНАЧЕ КлючевыеОперации.Важность
    |   КОНЕЦ,
    |   ВЫБОР
    |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА ЛОЖЬ
    |       ИНАЧЕ Истина
    |   КОНЕЦ,
    |   КлючевыеОперации.Ответственный
	|{ИМЕЮЩИЕ
	|   СУММА(ВсеЗамерыВыборка.КоличествоОпераций) >= &МинимальноеКоличествоЗамеров}
    |ИНДЕКСИРОВАТЬ ПО
    |   Конфигурация,
    |   ВерсияКонфигурации,
    |   КлючеваяОперацияПредставление
    |;
    |
    |ВЫБРАТЬ
    |   МАКСИМУМ(ВерсияКонфигурацииЧисло) КАК Версия
    |ИЗ
    |   ВсеЗамеры
    |;";
    
    Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
    Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
    Запрос.УстановитьПараметр("ПустаяСтрока", "");
    
    Если ПараметрКонфигурация.Использование Тогда
        Если ТипЗнч(ПараметрКонфигурация.Значение) = Тип("СправочникСсылка.Конфигурации") Тогда
            Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ИнформацияИстория.Конфигурация = &Конфигурация}", "И ИнформацияИстория.Конфигурация = &Конфигурация");
            Запрос.УстановитьПараметр("Конфигурация", ПараметрКонфигурация.Значение); 
        ИначеЕсли ТипЗнч(ПараметрКонфигурация.Значение) = Тип("СписокЗначений") Тогда
            Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ИнформацияИстория.Конфигурация = &Конфигурация}", "И ИнформацияИстория.Конфигурация В (&Конфигурация)");
            Запрос.УстановитьПараметр("Конфигурация", ПараметрКонфигурация.Значение);
        Иначе
            ВызватьИсключение "Не заполнена настройка ""Конфигурация""!";
        КонецЕсли;
    Иначе
        ВызватьИсключение "Не заполнена настройка ""Конфигурация""!";
    КонецЕсли;
    
    Если ПараметрВерсияКонфигурация.Использование Тогда 
        Если ТипЗнч(ПараметрВерсияКонфигурация.Значение) = Тип("СправочникСсылка.ВерсииКонфигурации") Тогда
            Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ИнформацияИстория.ВерсияКонфигурации = &ВерсияКонфигурации}", "И ИнформацияИстория.ВерсияКонфигурации = &ВерсияКонфигурации");
            Запрос.УстановитьПараметр("ВерсияКонфигурации", ПараметрВерсияКонфигурация.Значение); 
        ИначеЕсли ТипЗнч(ПараметрВерсияКонфигурация.Значение) = Тип("СписокЗначений") Тогда
            Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ИнформацияИстория.ВерсияКонфигурации = &ВерсияКонфигурации}", "И ИнформацияИстория.ВерсияКонфигурации В (&ВерсияКонфигурации)");
            Запрос.УстановитьПараметр("ВерсияКонфигурации", ПараметрВерсияКонфигурация.Значение);
        Иначе
            Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ИнформацияИстория.ВерсияКонфигурации = &ВерсияКонфигурации}", "");
        КонецЕсли;
    Иначе
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ИнформацияИстория.ВерсияКонфигурации = &ВерсияКонфигурации}", "");
	КонецЕсли;
	
	Если ПараметрСтатус.Использование Тогда 
        Если ТипЗнч(ПараметрСтатус.Значение) = Тип("ПеречислениеСсылка.СтатусыИнформационнойБазы") Тогда
            Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И СтатусИнформационнойБазы.Статус = &Статус}", "И СтатусИнформационнойБазы.Статус = &Статус");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ ДопУсловия","ГДЕ НЕ СтатусИнформационнойБазы.Статус ЕСТЬ NULL");
            Запрос.УстановитьПараметр("Статус", ПараметрСтатус.Значение); 
        ИначеЕсли ТипЗнч(ПараметрСтатус.Значение) = Тип("СписокЗначений") Тогда
            Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И СтатусИнформационнойБазы.Статус = &Статус}", "И СтатусИнформационнойБазы.Статус В (&Статус)");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ГДЕ ДопУсловия","ГДЕ НЕ СтатусИнформационнойБазы.Статус ЕСТЬ NULL");
            Запрос.УстановитьПараметр("Статус", ПараметрСтатус.Значение);
        Иначе
            Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И СтатусИнформационнойБазы.Статус = &Статус}", "");
        КонецЕсли;
    Иначе
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И СтатусИнформационнойБазы.Статус = &Статус}", "");
	КонецЕсли;
	
	Если ПараметрРежимРаботыКонфигурации.Использование Тогда
		Если ТипЗнч(ПараметрРежимРаботыКонфигурации.Значение) = Тип("ПеречислениеСсылка.РежимРаботыКонфигурации") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ИнформацияИстория.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "И ИнформацияИстория.РежимРаботыКонфигурации = &РежимРаботыКонфигурации");
			Запрос.УстановитьПараметр("РежимРаботыКонфигурации", ПараметрРежимРаботыКонфигурации.Значение); 
		ИначеЕсли ТипЗнч(ПараметрРежимРаботыКонфигурации.Значение) = Тип("СписокЗначений") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ИнформацияИстория.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "И ИнформацияИстория.РежимРаботыКонфигурации В (&РежимРаботыКонфигурации)");
			Запрос.УстановитьПараметр("РежимРаботыКонфигурации", ПараметрРежимРаботыКонфигурации.Значение);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ИнформацияИстория.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "");
		КонецЕсли;
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ИнформацияИстория.РежимРаботыКонфигурации = &РежимРаботыКонфигурации}", "");
	КонецЕсли;
    
    Если ПараметрЕстьПрофиль.Использование Тогда
        Если ПараметрЕстьПрофиль.Значение Тогда
            Запрос.Текст = СтрЗаменить(Запрос.Текст, "{ГДЕ
            |   ВЫБОР
            |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА ЛОЖЬ
            |       ИНАЧЕ Истина
            |   КОНЕЦ = &ЕстьКлючеваяОперация}", "ГДЕ
            |   ВЫБОР
            |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА ЛОЖЬ
            |       ИНАЧЕ Истина
            |   КОНЕЦ = ИСТИНА");
        Иначе
            Запрос.Текст = СтрЗаменить(Запрос.Текст, "{ГДЕ
            |   ВЫБОР
            |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА ЛОЖЬ
            |       ИНАЧЕ Истина
            |   КОНЕЦ = &ЕстьКлючеваяОперация}", "ГДЕ
            |   ВЫБОР
            |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА ЛОЖЬ
            |       ИНАЧЕ Истина
            |   КОНЕЦ = ЛОЖЬ");
        КонецЕсли;
    Иначе
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{ГДЕ
        |   ВЫБОР
        |       КОГДА КлючевыеОперации.КлючеваяОперация IS NULL ТОГДА ЛОЖЬ
        |       ИНАЧЕ Истина
        |   КОНЕЦ = &ЕстьКлючеваяОперация}", "");
    КонецЕсли;
    
    Если ПараметрМинимальноеКоличествоЗамеров.Использование Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{ИМЕЮЩИЕ
        |   СУММА(ВсеЗамерыВыборка.КоличествоОпераций) >= &МинимальноеКоличествоЗамеров}", "ИМЕЮЩИЕ
        |   СУММА(ВсеЗамерыВыборка.КоличествоОпераций) >= &МинимальноеКоличествоЗамеров");
        Запрос.УстановитьПараметр("МинимальноеКоличествоЗамеров", ПараметрМинимальноеКоличествоЗамеров.Значение); 
    Иначе
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{ИМЕЮЩИЕ
        |   СУММА(ВсеЗамерыВыборка.КоличествоОпераций) >= &МинимальноеКоличествоЗамеров}", "");
    КонецЕсли;
         
    Результат = Запрос.Выполнить();
     
    Если Результат.Пустой() Тогда
        МаксимальнаяВерсияКонфигурации = 0;
    Иначе
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        МаксимальнаяВерсияКонфигурации = Выборка.Версия;
    КонецЕсли;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   Конфигурация КАК Конфигурация,
    |   МИНИМУМ(ЛучшееСреднееВремя) КАК ЛучшееСреднееВремя
    |ПОМЕСТИТЬ
    |       КонфигурацияНеМаксимальнаяВерсия
    |ИЗ
    |   (ВЫБРАТЬ
    |       ВсеЗамеры.Конфигурация КАК Конфигурация,
    |       ВсеЗамеры.ВерсияКонфигурации КАК ВерсияКонфигурации,
    |       СУММА(ВсеЗамеры.СуммаВремяВыполнения)/СУММА(ВсеЗамеры.ВсегоЗамеров) КАК ЛучшееСреднееВремя
    |   ИЗ
    |       ВсеЗамеры КАК ВсеЗамеры
    |   ГДЕ
    |       ВсеЗамеры.ВерсияКонфигурацииЧисло <> &МаксимальнаяВерсияКонфигурации
    |   СГРУППИРОВАТЬ ПО
    |       ВсеЗамеры.Конфигурация,
    |       ВсеЗамеры.ВерсияКонфигурации 
    |   ) КАК Выборка
    |СГРУППИРОВАТЬ ПО
    |   Конфигурация
    |;
    |ВЫБРАТЬ
    |   Выборка.Конфигурация КАК Конфигурация,
    |   Выборка.КлючеваяОперацияПредставление КАК КлючеваяОперацияПредставление,
    |   МИНИМУМ(СреднееВремя) КАК ЛучшееСреднееВремяНеМаксимальноВерсии
    |ПОМЕСТИТЬ
    |   КлючевыеОперацииНеМаксимальнаяВерсия
    |ИЗ
    |   (ВЫБРАТЬ
    |       ВсеЗамеры.Конфигурация КАК Конфигурация,
    |       ВсеЗамеры.КлючеваяОперацияПредставление КАК КлючеваяОперацияПредставление,
    |       СУММА(ВсеЗамеры.СуммаВремяВыполнения)/СУММА(ВсеЗамеры.ВсегоЗамеров) КАК СреднееВремя
    |   ИЗ
    |       ВсеЗамеры КАК ВсеЗамеры
    |   ГДЕ
    |       ВсеЗамеры.ВерсияКонфигурацииЧисло <> &МаксимальнаяВерсияКонфигурации
    |   СГРУППИРОВАТЬ ПО
    |       ВсеЗамеры.Конфигурация,
	|       ВсеЗамеры.ВерсияКонфигурации,
    |       ВсеЗамеры.КлючеваяОперацияПредставление 
    |   ) КАК Выборка
    |СГРУППИРОВАТЬ ПО
    |   Выборка.Конфигурация,
    |   Выборка.КлючеваяОперацияПредставление
    |ИНДЕКСИРОВАТЬ ПО
    |   Конфигурация,
    |   КлючеваяОперацияПредставление
    |;
    |ВЫБРАТЬ
    |   ВсеЗамеры.Конфигурация КАК Конфигурация,
    |   ВсеЗамеры.ВерсияКонфигурации КАК ВерсияКонфигурации,
	|   ВсеЗамеры.РежимРаботыКонфигурации КАК РежимРаботыКонфигурации,
    |   ВсеЗамеры.ВерсияКонфигурацииЧисло КАК ВерсияКонфигурацииЧисло,
    |   ВЫБОР
    |       КОГДА ВсеЗамеры.ВерсияКонфигурацииЧисло = &МаксимальнаяВерсияКонфигурации ТОГДА Истина
    |       ИНАЧЕ Ложь
    |   КОНЕЦ КАК ЭтоМаксимальнаяВерсияКонфигурации,
    |   ВсеЗамеры.КлючеваяОперацияПредставление КАК КлючеваяОперация,
    |   ВсеЗамеры.ЦелевоеВремя КАК ЦелевоеВремя,
    |   ВсеЗамеры.ЕстьПрофиль КАК ЕстьПрофиль,
    |   ВсеЗамеры.Ответственный КАК Ответственный,
    |   ВсеЗамеры.Важность КАК Важность,
    |   ВсеЗамеры.МинимальноеВремяВыполнения КАК МинимальноеВремяВыполнения,
	|   ВсеЗамеры.СуммаВремяВыполнения КАК СуммаВремяВыполнения,
    |   ВсеЗамеры.СреднееВремяВыполнения КАК СреднееВремяВыполнения,
    |   ВсеЗамеры.МаксимальноеВремяВыполнения КАК МаксимальноеВремяВыполнения,
    |   ВсеЗамеры.ВсегоЗамеров КАК ВсегоЗамеров,
    |   ВЫБОР
    |       КОГДА ВсеЗамеры.ВерсияКонфигурацииЧисло = &МаксимальнаяВерсияКонфигурации ТОГДА ВсеЗамеры.СреднееВремяВыполнения
    |       ИНАЧЕ 0
    |   КОНЕЦ КАК СреднееВремяМаксимальнойВерсии,
    |   КлючевыеОперацииНеМаксимальнаяВерсия.ЛучшееСреднееВремяНеМаксимальноВерсии КАК ЛучшееСреднееВремяНеМаксимальноВерсии,
    |   ВсеЗамеры.СреднееВремяВыполнения - КлючевыеОперацииНеМаксимальнаяВерсия.ЛучшееСреднееВремяНеМаксимальноВерсии КАК ДельтаСреднееВремяВыполненияОтЛучшего,
    |   КонфигурацияНеМаксимальнаяВерсия.ЛучшееСреднееВремя КАК ЛучшееСреднееВремяКонфигурации,
    |   ВЫБОР
    |       КОГДА ВсеЗамеры.ВерсияКонфигурацииЧисло = &МаксимальнаяВерсияКонфигурации ТОГДА ВсеЗамеры.СреднееВремяВыполнения - КлючевыеОперацииНеМаксимальнаяВерсия.ЛучшееСреднееВремяНеМаксимальноВерсии
    |       ИНАЧЕ 0
    |   КОНЕЦ КАК ДельтаСреднееВремяВыполненияОтЛучшегоМаксимальнаяВерсия
    |ИЗ
    |   ВсеЗамеры КАК ВсеЗамеры
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   КлючевыеОперацииНеМаксимальнаяВерсия КАК КлючевыеОперацииНеМаксимальнаяВерсия
    |ПО
    |   КлючевыеОперацииНеМаксимальнаяВерсия.Конфигурация = ВсеЗамеры.Конфигурация
    |   И КлючевыеОперацииНеМаксимальнаяВерсия.КлючеваяОперацияПредставление = ВсеЗамеры.КлючеваяОперацияПредставление
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   КонфигурацияНеМаксимальнаяВерсия КАК КонфигурацияНеМаксимальнаяВерсия
    |ПО
    |   КонфигурацияНеМаксимальнаяВерсия.Конфигурация = ВсеЗамеры.Конфигурация
    |;";
    
    
    Запрос.УстановитьПараметр("МаксимальнаяВерсияКонфигурации", МаксимальнаяВерсияКонфигурации);
    Результат = Запрос.Выполнить();
           
    Возврат Результат;
    
КонецФункции

Функция СформироватьТекстПериодов(ДатаНачала, ДатаОкончания)
    
    КоличествоТочек = ((ДатаОкончания + 1) - ДатаНачала)/86400;
    ПорядокТочек = СтрДлина(Формат(КоличествоТочек, "ЧГ=0")) - 1;
    
    ТекстТаблицаПериодов = "
    |ВЫБРАТЬ 0 КАК Число
    |ПОМЕСТИТЬ Цифры
    |ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ 1
    |ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ 2
    |ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ 3
    |ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ 4
    |ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ 5
    |ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ 6
    |ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ 7
    |ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ 8
    |ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ 9
    |;
    |ВЫБРАТЬ
    |   ";
    
    ПоляЗапроса = "";
    ИсточникДанных = "";
    Пока ПорядокТочек >= 0 Цикл
        ИмяТаблицы = Формат(ПорядокТочек, "ЧН=0; ЧГ=0");
        ПоляЗапроса = ПоляЗапроса + "Т" + ИмяТаблицы + ".Число * " + Формат(Pow(10, ПорядокТочек), "ЧГ=0") + " + ";
        ИсточникДанных = ИсточникДанных + Символы.Таб + "Цифры КАК Т" + ИмяТаблицы + "," + Символы.ПС;
        ПорядокТочек = ПорядокТочек - 1;
    КонецЦикла;
    
    ТекстТаблицаПериодов = ТекстТаблицаПериодов + Лев(ПоляЗапроса, СтрДлина(ПоляЗапроса) - 3) + " КАК Число
    |ПОМЕСТИТЬ
    |   НаборЧисел
    |ИЗ
    |   ";
    
    ТекстТаблицаПериодов = ТекстТаблицаПериодов + Лев(ИсточникДанных, СтрДлина(ИсточникДанных) - 2) + "
    |;
    |ВЫБРАТЬ
    |   ДОБАВИТЬКДАТЕ(&ДатаНачала, ДЕНЬ, НаборЧисел.Число) КАК Период
    |ПОМЕСТИТЬ
    |   Периоды
    |ИЗ
    |   НаборЧисел КАК НаборЧисел
    |ГДЕ
    |   ДОБАВИТЬКДАТЕ(&ДатаНачала, ДЕНЬ, НаборЧисел.Число) МЕЖДУ &ДатаНачала И &ДатаОкончания";
    
    Возврат ТекстТаблицаПериодов; 
    
КонецФункции

#КонецОбласти

#КонецЕсли
