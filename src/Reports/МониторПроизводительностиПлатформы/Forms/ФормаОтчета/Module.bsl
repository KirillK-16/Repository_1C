&НаКлиенте
Перем РезультатЗапуска, ДанныеДляВывода;

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    ЭтотОбъект.КлючУникальности = Новый УникальныйИдентификатор;
    
    Если НЕ ЗначениеЗаполнено(Отчет.ТипАнализа) Тогда
        Отчет.ТипАнализа = "Среднее время";
    КонецЕсли;
        
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
    
    ПараметрыФормирования = Новый Структура("Период, ПрофильКлючевыхОпераций, ТолькоКлючевыеОперацииПрофиля, ТипАнализа, УникальныйИдентификаторФормы,
	|ТолькоРелизныеПлатформы, ТолькоРелизныеВерсииКонфигураций, СтатусыИнформационнойБазы");
    ПараметрыФормирования.Период = Отчет.Период;
    ПараметрыФормирования.ПрофильКлючевыхОпераций = Отчет.ПрофильКлючевыхОпераций;
    ПараметрыФормирования.ТолькоКлючевыеОперацииПрофиля = Отчет.ТолькоКлючевыеОперацииПрофиля;
    ПараметрыФормирования.ТипАнализа = Отчет.ТипАнализа;
    ПараметрыФормирования.УникальныйИдентификаторФормы = ЭтотОбъект.УникальныйИдентификатор;
	ПараметрыФормирования.ТолькоРелизныеПлатформы = Отчет.ТолькоРелизныеПлатформы;
	ПараметрыФормирования.ТолькоРелизныеВерсииКонфигураций = Отчет.ТолькоРелизныеВерсииКонфигураций;
	ПараметрыФормирования.СтатусыИнформационнойБазы = Отчет.СтатусыИнформационнойБазы.ВыгрузитьЗначения();
    
    РезультатЗапуска = СформироватьНаСервере(ПараметрыФормирования);
    
    ДанныеДляВывода = Новый Структура;
    
    ПодключитьОбработчикОжидания("ПроверкаФормированияДанных", 1, Истина);
    
    
    ЭтотОбъект.Элементы.ФормаСформировать.Доступность = Ложь;
    ЭтотОбъект.Элементы.ФормаНастройки.Доступность = Ложь;
    
    ЭтотОбъект.ДиаграммаПроизводительностьПлатформы.Очистить();
    ЭтотОбъект.ДиаграммаПроизводительностьПлатформы.ОбластьЗаголовка.Текст = "Получение данных...";
    
    ЭтотОбъект.ДиаграммаАктивныхСборок.Очистить();
    ЭтотОбъект.ДиаграммаАктивныхСборок.ОбластьЗаголовка.Текст = "Получение данных...";
    
    ЭтотОбъект.ДиаграммаЧислоАктивныхПоВерсиям.Очистить();
    ЭтотОбъект.ДиаграммаЧислоАктивныхПоВерсиям.ОбластьЗаголовка.Текст = "Получение данных...";
    
    ЭтотОбъект.ДиаграммаЧислоАктивныхПоКонфигурациям.Очистить();
    ЭтотОбъект.ДиаграммаЧислоАктивныхПоКонфигурациям.ОбластьЗаголовка.Текст = "Получение данных...";
    
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
    
    ПараметрыОткрытия = Новый Структура;
    ПараметрыОткрытия.Вставить("Период", Отчет.Период);
    ПараметрыОткрытия.Вставить("ПрофильКлючевыхОпераций", Отчет.ПрофильКлючевыхОпераций);
    ПараметрыОткрытия.Вставить("ТолькоКлючевыеОперацииПрофиля", Отчет.ТолькоКлючевыеОперацииПрофиля);
    ПараметрыОткрытия.Вставить("ИспользоватьБазовоеЗначение", Отчет.ИспользоватьБазовоеЗначение);
    ПараметрыОткрытия.Вставить("МинимальноеКоличествоБазДляРаспределения", Отчет.МинимальноеКоличествоБазДляРаспределения);
    ПараметрыОткрытия.Вставить("ТипАнализа", Отчет.ТипАнализа);
	ПараметрыОткрытия.Вставить("ТолькоРелизныеПлатформы", Отчет.ТолькоРелизныеПлатформы);
	ПараметрыОткрытия.Вставить("ТолькоРелизныеВерсииКонфигураций", Отчет.ТолькоРелизныеВерсииКонфигураций);
	ПараметрыОткрытия.Вставить("СтатусыИнформационнойБазы", Отчет.СтатусыИнформационнойБазы.ВыгрузитьЗначения());
    
    ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаЗакрытияНастроек", ЭтотОбъект);
    ОткрытьФорму("Отчет.МониторПроизводительностиПлатформы.Форма.ФормаНастройкиОтчета", ПараметрыОткрытия, ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаЗакрытияНастроек(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
    
    Если ТипЗнч(РезультатЗакрытия) = Тип("Структура") Тогда
        
        Отчет.Период = РезультатЗакрытия.Период;
        Отчет.ПрофильКлючевыхОпераций = РезультатЗакрытия.ПрофильКлючевыхОпераций;
        Отчет.ТолькоКлючевыеОперацииПрофиля = РезультатЗакрытия.ТолькоКлючевыеОперацииПрофиля;
        Отчет.ИспользоватьБазовоеЗначение = РезультатЗакрытия.ИспользоватьБазовоеЗначение;
        Отчет.МинимальноеКоличествоБазДляРаспределения = РезультатЗакрытия.МинимальноеКоличествоБазДляРаспределения;
        Отчет.ТипАнализа = РезультатЗакрытия.ТипАнализа;
		Отчет.ТолькоРелизныеПлатформы = РезультатЗакрытия.ТолькоРелизныеПлатформы;
		Отчет.ТолькоРелизныеВерсииКонфигураций = РезультатЗакрытия.ТолькоРелизныеВерсииКонфигураций;
		Отчет.СтатусыИнформационнойБазы.ЗагрузитьЗначения(РезультатЗакрытия.СтатусыИнформационнойБазы);
                
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаФормированияДанных()
    
    РезультатПроверки = ПроверкаФормированияДанныхНаСервере(РезультатЗапуска);
    
    Если ТипЗнч(РезультатПроверки.ДиаграммаПроизводительностьПлатформы) = Тип("Структура") Тогда
                
        ДанныеДляВывода.Вставить("ДиаграммаПроизводительностьПлатформы", РезультатПроверки.ДиаграммаПроизводительностьПлатформы);
                
        РезультатЗапуска.Удалить("ФзПроизводительностьПлатформы");
        РезультатЗапуска.Удалить("АдресХранилищаДиаграммаПроизводительностьПлатформы");
        
    КонецЕсли;
    
    Если ТипЗнч(РезультатПроверки.ДиаграммаАктивныхСборок) = Тип("Структура") Тогда
                
        ДанныеДляВывода.Вставить("ДиаграммаАктивныхСборок", РезультатПроверки.ДиаграммаАктивныхСборок);
                
        РезультатЗапуска.Удалить("ФзАктивныхСборок");
        РезультатЗапуска.Удалить("АдресХранилищаДиаграммаАктивныхСборок");
        
    КонецЕсли;
    
    Если ТипЗнч(РезультатПроверки.ДиаграммаЧислоАктивныхПоВерсиям) = Тип("Структура") Тогда
        
        ДанныеДляВывода.Вставить("ДиаграммаЧислоАктивныхПоВерсиям", РезультатПроверки.ДиаграммаЧислоАктивныхПоВерсиям);
                
        РезультатЗапуска.Удалить("ФзАктивныеСборкиПоВерсиямПлатформы");
        РезультатЗапуска.Удалить("АдресХранилищаДиаграммаЧислоАктивныхПоВерсиям");

    КонецЕсли;
    
    Если ТипЗнч(РезультатПроверки.ДиаграммаЧислоАктивныхПоКонфигурациям) = Тип("Структура") Тогда
        
        ДанныеДляВывода.Вставить("ДиаграммаЧислоАктивныхПоКонфигурациям", РезультатПроверки.ДиаграммаЧислоАктивныхПоКонфигурациям);
                
        РезультатЗапуска.Удалить("ФзАктивныеСборкиПоВерсиямКонфигурации");
        РезультатЗапуска.Удалить("АдресХранилищаДиаграммаЧислоАктивныхПоКонфигурациям");

    КонецЕсли;
        
    Если РезультатЗапуска.Количество() > 0 Тогда
        ПодключитьОбработчикОжидания("ПроверкаФормированияДанных", 1, Истина);
    Иначе
        ЗавершитьВывод();
    КонецЕсли;
            
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВывод()
    
    ВывестиПроизводительностьПлатформы(ДанныеДляВывода.ДиаграммаПроизводительностьПлатформы.ПроизводительностьПлатформы);
    ВывестиАктивныеСборки(ДанныеДляВывода.ДиаграммаАктивныхСборок.АктивныхСборок);
    ВывестиАктивныеСборкиПоВерсиямПлатформы(ДанныеДляВывода.ДиаграммаЧислоАктивныхПоВерсиям.АктивныеСборкиПоВерсиямПлатформы);
    ВывестиАктивныеСборкиПоВерсиямКонфигурации(ДанныеДляВывода.ДиаграммаЧислоАктивныхПоКонфигурациям.АктивныеСборкиПоВерсиямКонфигурации);
    
    ЭтотОбъект.Элементы.ФормаСформировать.Доступность = Истина;
    ЭтотОбъект.Элементы.ФормаНастройки.Доступность = Истина;
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверкаФормированияДанныхНаСервере(РезультатЗапуска)
    
    РезультатПроверки = Новый Структура("ДиаграммаПроизводительностьПлатформы, ДиаграммаАктивныхСборок, ДиаграммаЧислоАктивныхПоВерсиям, ДиаграммаЧислоАктивныхПоКонфигурациям");
    
    Если РезультатЗапуска["ФзПроизводительностьПлатформы"] <> Неопределено Тогда
        ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(РезультатЗапуска["ФзПроизводительностьПлатформы"]);
        Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы = Неопределено;
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы = ПолучитьИзВременногоХранилища(РезультатЗапуска["АдресХранилищаДиаграммаПроизводительностьПлатформы"]);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы = ПодробноеПредставлениеОшибки(ФЗ.ИнформацияОбОшибке);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
            РезультатПроверки.ДиаграммаПроизводительностьПлатформы = "Отменено";
        КонецЕсли;
    КонецЕсли;
    
    Если РезультатЗапуска["ФзАктивныхСборок"] <> Неопределено Тогда
        ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(РезультатЗапуска["ФзАктивныхСборок"]);
        Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
            РезультатПроверки.ДиаграммаАктивныхСборок = Неопределено;
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
            РезультатПроверки.ДиаграммаАктивныхСборок = ПолучитьИзВременногоХранилища(РезультатЗапуска["АдресХранилищаДиаграммаАктивныхСборок"]);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
            РезультатПроверки.ДиаграммаАктивныхСборок = ПодробноеПредставлениеОшибки(ФЗ.ИнформацияОбОшибке);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
            РезультатПроверки.ДиаграммаАктивныхСборок = "Отменено";
        КонецЕсли;
    КонецЕсли;
    
    Если РезультатЗапуска["ФзАктивныеСборкиПоВерсиямПлатформы"] <> Неопределено Тогда
        ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(РезультатЗапуска["ФзАктивныеСборкиПоВерсиямПлатформы"]);
        Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
            РезультатПроверки.ДиаграммаЧислоАктивныхПоВерсиям = Неопределено;
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
            РезультатПроверки.ДиаграммаЧислоАктивныхПоВерсиям = ПолучитьИзВременногоХранилища(РезультатЗапуска["АдресХранилищаДиаграммаЧислоАктивныхПоВерсиям"]);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
            РезультатПроверки.ДиаграммаЧислоАктивныхПоВерсиям = ПодробноеПредставлениеОшибки(ФЗ.ИнформацияОбОшибке);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
            РезультатПроверки.ДиаграммаЧислоАктивныхПоВерсиям = "Отменено";
        КонецЕсли;
    КонецЕсли;
    
    Если РезультатЗапуска["ФзАктивныеСборкиПоВерсиямКонфигурации"] <> Неопределено Тогда
        ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(РезультатЗапуска["ФзАктивныеСборкиПоВерсиямКонфигурации"]);
        Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
            РезультатПроверки.ДиаграммаЧислоАктивныхПоКонфигурациям = Неопределено;
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
            РезультатПроверки.ДиаграммаЧислоАктивныхПоКонфигурациям = ПолучитьИзВременногоХранилища(РезультатЗапуска["АдресХранилищаДиаграммаЧислоАктивныхПоКонфигурациям"]);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
            РезультатПроверки.ДиаграммаЧислоАктивныхПоКонфигурациям = ПодробноеПредставлениеОшибки(ФЗ.ИнформацияОбОшибке);
        ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
            РезультатПроверки.ДиаграммаЧислоАктивныхПоКонфигурациям = "Отменено";
        КонецЕсли;
    КонецЕсли;
    
    Возврат РезультатПроверки;
    
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьНаСервере(Параметры)
    
    АдресХранилищаДиаграммаПроизводительностьПлатформы = ПоместитьВоВременноеХранилище(Неопределено, Параметры.УникальныйИдентификаторФормы);
    АдресХранилищаДиаграммаАктивныхСборок = ПоместитьВоВременноеХранилище(Неопределено, Параметры.УникальныйИдентификаторФормы);
    АдресХранилищаДиаграммаЧислоАктивныхПоВерсиям = ПоместитьВоВременноеХранилище(Неопределено, Параметры.УникальныйИдентификаторФормы);
    АдресХранилищаДиаграммаЧислоАктивныхПоКонфигурациям = ПоместитьВоВременноеХранилище(Неопределено, Параметры.УникальныйИдентификаторФормы);
    
    Параметры.Вставить("АдресХранилищаДиаграммаПроизводительностьПлатформы", АдресХранилищаДиаграммаПроизводительностьПлатформы);
    Параметры.Вставить("АдресХранилищаДиаграммаАктивныхСборок", АдресХранилищаДиаграммаАктивныхСборок);
    Параметры.Вставить("АдресХранилищаДиаграммаЧислоАктивныхПоВерсиям", АдресХранилищаДиаграммаЧислоАктивныхПоВерсиям);
    Параметры.Вставить("АдресХранилищаДиаграммаЧислоАктивныхПоКонфигурациям", АдресХранилищаДиаграммаЧислоАктивныхПоКонфигурациям);
    
    ПараметрыФоновогоЗадания = Новый Массив;
    ПараметрыФоновогоЗадания.Добавить(Параметры);
    
    Наименование = "Отчет МониторПроизводительностиПлатформы: ПолучитьПроизводительностьПлатформы";
    ФзПроизводительностьПлатформы = ФоновыеЗадания.Выполнить("ЦентрМониторингаИмпортСлужебный.ПолучитьПроизводительностьПлатформы", ПараметрыФоновогоЗадания,,Наименование);
    
    Наименование = "Отчет МониторПроизводительностиПлатформы: ПолучитьЧислоАктивныхСборок";
    ФзАктивныхСборок = ФоновыеЗадания.Выполнить("ЦентрМониторингаИмпортСлужебный.ПолучитьЧислоАктивныхСборок", ПараметрыФоновогоЗадания,,Наименование);
    
    Наименование = "Отчет МониторПроизводительностиПлатформы: АктивныеСборкиПоВерсиямПлатформы";
    ФзАктивныеСборкиПоВерсиямПлатформы = ФоновыеЗадания.Выполнить("ЦентрМониторингаИмпортСлужебный.ПолучитьЧислоАктивныхПоВерсияПлатформы", ПараметрыФоновогоЗадания,,Наименование);
    
    Наименование = "Отчет МониторПроизводительностиПлатформы: АктивныеСборкиПоВерсиямКонфигурации";
    ФзАктивныеСборкиПоВерсиямКонфигурации = ФоновыеЗадания.Выполнить("ЦентрМониторингаИмпортСлужебный.ПолучитьЧислоАктивныхПоВерсиямКонфигурации", ПараметрыФоновогоЗадания,,Наименование);
    
    РезультатЗапуска = Новый Соответствие;
    
    РезультатЗапуска.Вставить("ФзПроизводительностьПлатформы", ФзПроизводительностьПлатформы.УникальныйИдентификатор);
    РезультатЗапуска.Вставить("АдресХранилищаДиаграммаПроизводительностьПлатформы", АдресХранилищаДиаграммаПроизводительностьПлатформы);
    
    РезультатЗапуска.Вставить("ФзАктивныхСборок", ФзАктивныхСборок.УникальныйИдентификатор);
    РезультатЗапуска.Вставить("АдресХранилищаДиаграммаАктивныхСборок", АдресХранилищаДиаграммаАктивныхСборок);
    
    РезультатЗапуска.Вставить("ФзАктивныеСборкиПоВерсиямПлатформы", ФзАктивныеСборкиПоВерсиямПлатформы.УникальныйИдентификатор);
    РезультатЗапуска.Вставить("АдресХранилищаДиаграммаЧислоАктивныхПоВерсиям", АдресХранилищаДиаграммаЧислоАктивныхПоВерсиям);
    
    РезультатЗапуска.Вставить("ФзАктивныеСборкиПоВерсиямКонфигурации", ФзАктивныеСборкиПоВерсиямКонфигурации.УникальныйИдентификатор);
    РезультатЗапуска.Вставить("АдресХранилищаДиаграммаЧислоАктивныхПоКонфигурациям", АдресХранилищаДиаграммаЧислоАктивныхПоКонфигурациям);
    
    Возврат РезультатЗапуска;
    
КонецФункции

&НаКлиенте
Процедура ВывестиПроизводительностьПлатформы(ПроизводительностьПлатформы)
    
    Диаграмма = ЭтотОбъект.ДиаграммаПроизводительностьПлатформы;
    Если Отчет.ТипАнализа = "APDEX" Тогда
        Диаграмма.ОбластьЗаголовка.Текст = "APDEX по версиям платформы";
    ИначеЕсли Отчет.ТипАнализа = "Среднее время" Тогда
        Диаграмма.ОбластьЗаголовка.Текст = "Среднее время операции по версиям платформы, сек";
    КонецЕсли;
        
    Диаграмма.Обновление = Ложь;
    Диаграмма.Очистить();
    
    СерииДляВывода = Новый Соответствие;
    ТочкиДляВывода = Новый Соответствие;
    
    МинимальноеЗначение = 9999999999;
    
    Для Каждого ТекЗапись Из ПроизводительностьПлатформы Цикл
        
        Если СерииДляВывода[ТекЗапись.РежимРаботыКонфигурации] = Неопределено Тогда
            Серия = Диаграмма.Серии.Добавить();
            Серия.Текст = ТекЗапись.РежимРаботыКонфигурации;
            СерииДляВывода.Вставить(ТекЗапись.РежимРаботыКонфигурации, Серия);
        КонецЕсли;
        
        Если ТочкиДляВывода[ТекЗапись.СборкаСтрока] = Неопределено Тогда
            Точка = Диаграмма.Точки.Добавить();
            Точка.Текст = ТекЗапись.СборкаСтрока;
            ТочкиДляВывода.Вставить(ТекЗапись.СборкаСтрока, Точка);
        КонецЕсли;
        
        Диаграмма.УстановитьЗначение(ТочкиДляВывода[ТекЗапись.СборкаСтрока], СерииДляВывода[ТекЗапись.РежимРаботыКонфигурации], ТекЗапись.Значение);
        
        Если МинимальноеЗначение > ТекЗапись.Значение Тогда
            МинимальноеЗначение = ТекЗапись.Значение;
        КонецЕсли;
        
    КонецЦикла;
    
    Если Отчет.ТипАнализа = "APDEX" И Отчет.ИспользоватьБазовоеЗначение Тогда
        Диаграмма.БазовоеЗначение = (ЦЕЛ(МинимальноеЗначение * 10) - 1)/10;
    Иначе
        Диаграмма.БазовоеЗначение = 0;
    КонецЕсли;
    
    Диаграмма.Обновление = Истина;
    
КонецПроцедуры

&НаКлиенте
Процедура ВывестиАктивныеСборки(АктивныеСборки)
    
    Диаграмма = ЭтотОбъект.ДиаграммаАктивныхСборок;
    Диаграмма.ОбластьЗаголовка.Текст = "Активных информационных баз";
    Диаграмма.ОбластьПостроения.ФорматШкалыЗначений = "ЧРГ=' '";
    
    Диаграмма.Обновление = Ложь;
    Диаграмма.Очистить();
    
    СерииДляВывода = Новый Соответствие;
    ТочкиДляВывода = Новый Соответствие;
    
    СЗнСерии = Новый СписокЗначений;
        
    Для Каждого ТекЗапись Из АктивныеСборки Цикл
        Если СерииДляВывода[ТекЗапись.СборкаСтрока] = Неопределено Тогда
            СерииДляВывода.Вставить(ТекЗапись.СборкаСтрока, Истина);
            СЗнСерии.Добавить(ТекЗапись.СборкаЧисло, ТекЗапись.СборкаСтрока);
        КонецЕсли;
    КонецЦикла;
    
    СерииДляВывода.Очистить();
    СЗнСерии.СортироватьПоЗначению(НаправлениеСортировки.Возр);
    Для Каждого ТекЭлемент Из СЗнСерии Цикл
        Серия = Диаграмма.Серии.Добавить(ТекЭлемент.Представление);
        Серия.Текст = ТекЭлемент.Представление;
        СерииДляВывода.Вставить(ТекЭлемент.Представление, Серия);
    КонецЦикла;
        
    
    Для Каждого ТекЗапись Из АктивныеСборки Цикл
       
        Если ТочкиДляВывода[ТекЗапись.Период] = Неопределено Тогда
            Точка = Диаграмма.Точки.Добавить(ТекЗапись.Период);
            Точка.Текст = Формат(ТекЗапись.Период, "ДЛФ=D");
            ТочкиДляВывода.Вставить(ТекЗапись.Период, Точка);
        КонецЕсли;
        
        Диаграмма.УстановитьЗначение(ТочкиДляВывода[ТекЗапись.Период], СерииДляВывода[ТекЗапись.СборкаСтрока], ТекЗапись.КоличествоИБ);
        
    КонецЦикла;
    
    
    Диаграмма.Обновление = Истина;
    
КонецПроцедуры

&НаКлиенте
Процедура ВывестиАктивныеСборкиПоВерсиямПлатформы(АктивныеСборкиПоВерсиямПлатформы)
    
    Диаграмма = ЭтотОбъект.ДиаграммаЧислоАктивныхПоВерсиям;
    Диаграмма.ОбластьЗаголовка.Текст = "Активных информационных баз по сборкам";
    Диаграмма.ОбластьПостроения.ФорматШкалыЗначений = "ЧРГ=' '";
    
    Диаграмма.Обновление = Ложь;
    Диаграмма.Очистить();
    
    СерииДляВывода = Новый Соответствие;
    ТочкиДляВывода = Новый Соответствие;
    
    ВерсииДляВывода = Новый Соответствие;
    Если Отчет.МинимальноеКоличествоБазДляРаспределения <> 0 Тогда
        
        Для Каждого ТекЗапись Из АктивныеСборкиПоВерсиямПлатформы Цикл
            Если ВерсииДляВывода[ТекЗапись.ВерсияПлатформы] = Неопределено Тогда
                ВерсииДляВывода.Вставить(ТекЗапись.ВерсияПлатформы, 0);
            КонецЕсли;
            ВерсииДляВывода[ТекЗапись.ВерсияПлатформы] = ВерсииДляВывода[ТекЗапись.ВерсияПлатформы] + ТекЗапись.КоличествоИБ;
        КонецЦикла;
        
        ВерсииСортировка = Новый СписокЗначений;
        Для Каждого ТекВерсия Из ВерсииДляВывода Цикл
            ВерсииСортировка.Добавить(ТекВерсия.Значение, ТекВерсия.Ключ);
        КонецЦикла;
        ВерсииСортировка.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
        
        ВерсииДляВывода.Очистить();
        
        ПорогВхождения = Неопределено;
        Для Каждого ТекЗначение Из ВерсииСортировка Цикл
            
            Если ПорогВхождения = Неопределено Тогда
                ПорогВхождения = ЦЕЛ((ТекЗначение.Значение/100) * Отчет.МинимальноеКоличествоБазДляРаспределения);
            КонецЕсли;
            
            Если ТекЗначение.Значение >= ПорогВхождения Тогда
                ВерсииДляВывода.Вставить(ТекЗначение.Представление, Истина);
            КонецЕсли;
                        
        КонецЦикла;
        
                
    КонецЕсли;
    
    Для Каждого ТекЗапись Из АктивныеСборкиПоВерсиямПлатформы Цикл
        
        Если Отчет.МинимальноеКоличествоБазДляРаспределения <> 0 И ВерсииДляВывода[Строка(ТекЗапись.ВерсияПлатформы)] = Неопределено Тогда
            Продолжить;
        КонецЕсли;
                
        Если СерииДляВывода[ТекЗапись.РежимРаботыКонфигурации] = Неопределено Тогда
            Серия = Диаграмма.Серии.Добавить();
            Серия.Текст = ТекЗапись.РежимРаботыКонфигурации;
            СерииДляВывода.Вставить(ТекЗапись.РежимРаботыКонфигурации, Серия);
        КонецЕсли;
        
        Если ТочкиДляВывода[ТекЗапись.ВерсияПлатформы] = Неопределено Тогда
            Точка = Диаграмма.Точки.Добавить();
            Точка.Текст = ТекЗапись.ВерсияПлатформы;
            ТочкиДляВывода.Вставить(ТекЗапись.ВерсияПлатформы, Точка);
        КонецЕсли;
        
        Диаграмма.УстановитьЗначение(ТочкиДляВывода[ТекЗапись.ВерсияПлатформы], СерииДляВывода[ТекЗапись.РежимРаботыКонфигурации], ТекЗапись.КоличествоИБ);
        
    КонецЦикла;
    
    
    Диаграмма.Обновление = Истина;
    
КонецПроцедуры

&НаКлиенте
Процедура ВывестиАктивныеСборкиПоВерсиямКонфигурации(АктивныеСборкиПоВерсиямКонфигурации)
    
    Диаграмма = ЭтотОбъект.ДиаграммаЧислоАктивныхПоКонфигурациям;
    Диаграмма.ОбластьЗаголовка.Текст = "Активных информационных баз по конфигурациям";
    Диаграмма.ФорматЗначенийВПодписях = "ЧРГ = ' '";
    
    Диаграмма.Обновление = Ложь;
    Диаграмма.Очистить();
    
    СерииДляВывода = Новый Соответствие;
    ТочкиДляВывода = Новый Соответствие;
    
    Точка = Диаграмма.Точки.Добавить();
    Точка.Текст = "";
    
    Всего = 0;
    Для Каждого ТекЗапись Из АктивныеСборкиПоВерсиямКонфигурации Цикл
        Всего = Всего + ТекЗапись.КоличествоИБ;
    КонецЦикла;
        
    Прочие = 0;
    Для Каждого ТекЗапись Из АктивныеСборкиПоВерсиямКонфигурации Цикл
        
        Если СерииДляВывода.Количество() < 9 Тогда
            ТекКонфигурация = ТекЗапись.Конфигурация;
        Иначе
            ТекКонфигурация = "Прочие";
        КонецЕсли;
                
        Если СерииДляВывода[ТекКонфигурация] = Неопределено Тогда
            Серия = Диаграмма.Серии.Добавить();
            Серия.Текст = СтроковыеФункцииКлиентСервер.РазложитьСтрокуПоСловам(Строка(ТекКонфигурация));
            СерииДляВывода.Вставить(ТекКонфигурация, Серия);
        КонецЕсли;
        
        Если ТекКонфигурация <> "Прочие" Тогда
            Процент = Формат((100 * ТекЗапись.КоличествоИБ)/Всего, "ЧДЦ=2") + "%";
            Подсказка = СтроковыеФункцииКлиентСервер.РазложитьСтрокуПоСловам(Строка(ТекКонфигурация)) + " " + Формат(ТекЗапись.КоличествоИБ, "ЧРГ=' '") + ", " + Процент;
            Диаграмма.УстановитьЗначение(Точка, СерииДляВывода[ТекЗапись.Конфигурация], ТекЗапись.КоличествоИБ,, Подсказка);
        Иначе
            Прочие = Прочие + ТекЗапись.КоличествоИБ;
        КонецЕсли;
                
    КонецЦикла;
	
	Если СерииДляВывода["Прочие"] <> Неопределено Тогда
	    Процент = Формат((100 * Прочие)/Всего, "ЧДЦ=2") + "%";
	    Подсказка = Строка(ТекКонфигурация) + " " + Формат(Прочие, "ЧРГ=' '") + ", " + Процент;
	    Диаграмма.УстановитьЗначение(Точка, СерииДляВывода["Прочие"], Прочие,,Подсказка);
	КонецЕсли;    
    
    Диаграмма.Обновление = Истина;
    
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьРазмерОбластиДиаграммы(ОбластьДиаграммы, Верх, Лево, Низ, Право)
    
    ОбластьДиаграммы.Верх = Верх;
    ОбластьДиаграммы.Лево = Лево;
    ОбластьДиаграммы.Низ = Низ;
    ОбластьДиаграммы.Право = Право;
    
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Диаграмма = ЭтотОбъект.ДиаграммаПроизводительностьПлатформы;
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка,0,0,0.1,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения,0.1,0,0.9,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды,0.9,0.07,1,0.5);
    
    Диаграмма = ЭтотОбъект.ДиаграммаАктивныхСборок;
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка,0,0,0.1,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения,0.1,0,0.9,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды,0.9,0.07,1,0.5);
    
    Диаграмма = ЭтотОбъект.ДиаграммаЧислоАктивныхПоВерсиям;
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка,0,0,0.1,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения,0.1,0,0.9,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды,0.9,0.07,1,0.5);
    
    Диаграмма = ЭтотОбъект.ДиаграммаЧислоАктивныхПоКонфигурациям;
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЗаголовка,0,0,0.1,1);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьПостроения,0.1,0,1,0.65);
    УстановитьРазмерОбластиДиаграммы(Диаграмма.ОбластьЛегенды,0.1,0.65,1,1);
    
КонецПроцедуры

#КонецОбласти
