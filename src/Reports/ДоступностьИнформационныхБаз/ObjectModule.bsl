#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	// Отключаем стандартный вывод отчета - будем выводить программно 
	СтандартнаяОбработка = Ложь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();						// Получаем настройки отчета
	ПользовательскиеНастройки = КомпоновщикНастроек.ПользовательскиеНастройки;  // Получаем пользовательские настройки
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;				// Создаем данные расшифровки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;				// Создаем компоновщик макета 
	
	// Инициализируем макет компоновки используя схему компоновки данных 
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ТЗнДанные = ПолучитьДанныеДляВывода(Настройки, ПользовательскиеНастройки);
	
	// Скомпонуем результат
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПараметрыПроцессораКомпоновки = Новый Структура("НаборДанныхДоступность", ТЗнДанные);
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ПараметрыПроцессораКомпоновки, ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	
	//Проверим - есть ли автообновление
	ПараметрАвтообновление = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Автообновление"));
	ЭлементАвтообновление = ПользовательскиеНастройки.Элементы.Найти(ПараметрАвтообновление.ИдентификаторПользовательскойНастройки);	
	
	Если ЭлементАвтообновление.Значение Тогда
		Область = ДокументРезультат.Область("R7:R10");
		Автообновление = 1;
	Иначе
		Область = ДокументРезультат.Область("R7:R11");
		Автообновление = 0;
	КонецЕсли;
	ДокументРезультат.УдалитьОбласть(Область, ТипСмещенияТабличногоДокумента.ПоВертикали); 

	ДокументРезультат.ФиксацияСверху = 8 + Автообновление + КоличествоЭлементовОтбор(Настройки.Отбор);
	ДокументРезультат.ФиксацияСлева = 3;
КонецПроцедуры

Функция КоличествоЭлементовОтбор(Отбор)
	Количество = 0;
	Для Каждого ТекЭлемент Из Отбор.Элементы Цикл
		Если ТекЭлемент.Использование Тогда
			Количество = Количество + 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Количество;
КонецФункции

Функция ПолучитьДанныеДляВывода(Настройки, ПользовательскиеНастройки)
	UP = "UP";
	DOWN = "DOWN";
	UNKNOWN = "UNKNOWN";
	
	ПараметрПериодАнализа = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодАнализа"));
	ПараметрДатаНачала = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНачала"));
	ПараметрДатаОкончания = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаОкончания"));
	ПараметрНачалоРабочегоДня = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоРабочегоДня"));
	ПараметрОкончаниеРабочегоДня = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОкончаниеРабочегоДня"));
	ПараметрСтатусИнформационнойБазы = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СтатусИнформационнойБазы"));
	
	ЭлементПериодАнализа = ПользовательскиеНастройки.Элементы.Найти(ПараметрПериодАнализа.ИдентификаторПользовательскойНастройки);
	ЭлементДатаНачала = ПользовательскиеНастройки.Элементы.Найти(ПараметрДатаНачала.ИдентификаторПользовательскойНастройки);
	ЭлементДатаОкончания = ПользовательскиеНастройки.Элементы.Найти(ПараметрДатаОкончания.ИдентификаторПользовательскойНастройки);
	ЭлементНачалоРабочегоДня = ПользовательскиеНастройки.Элементы.Найти(ПараметрНачалоРабочегоДня.ИдентификаторПользовательскойНастройки);
	ЭлементОкончаниеРабочегоДня = ПользовательскиеНастройки.Элементы.Найти(ПараметрОкончаниеРабочегоДня.ИдентификаторПользовательскойНастройки);
	ЭлементСтатусИнформационнойБазы = ПользовательскиеНастройки.Элементы.Найти(ПараметрСтатусИнформационнойБазы.ИдентификаторПользовательскойНастройки);
		
	ДатаОкончания = Дата(ЭлементДатаОкончания.Значение);
	ДатаНачала = Дата(ЭлементДатаНачала.Значение);
	НачалоРабочегоДня = Дата(ЭлементНачалоРабочегоДня.Значение);
	ОкончаниеРабочегоДня = Дата(ЭлементОкончаниеРабочегоДня.Значение);
	ИнформационнаяБаза = Неопределено;
	
	#Область Запрос
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//Начало выборки во временную таблицу Доступность
	|ВЫБРАТЬ
	|	&ДатаНачала КАК Период,
	|	РегСвПараметрыИБ.Кластер КАК Кластер,
	|	ВыборкаНачальная.ИнформационнаяБаза КАК ИнформационнаяБаза,
	|	ВЫБОР РегСвДоступностьИБ.Доступность
	|		КОГДА 0 ТОГДА &UP
	|		КОГДА 1 ТОГДА &DOWN
	|		ИНАЧЕ ВЫБОР РегСвДоступностьИБ_До.Доступность
	|			КОГДА 0 ТОГДА &DOWN
	|			КОГДА 1 ТОГДА &UP
	|		КОНЕЦ
	|	КОНЕЦ КАК Доступность
	|ПОМЕСТИТЬ
	|	ДоступностьВрТ
	|ИЗ
	|	(ВЫБРАТЬ
	|		СпрКП.ОбъектКонтроля КАК ИнформационнаяБаза,
	|		РегДоступность.Период КАК Период
	|	ИЗ
	|		Справочник.КонтрольныеПроцедуры КАК СпрКП
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		(ВЫБРАТЬ
	|			ИнформационнаяБаза КАК ИнформационнаяБаза,
	|			МИНИМУМ(ПЕРИОД) КАК Период
	|		ИЗ
	|			РегистрСведений.ДоступностьИнформационныхБаз
	|		ГДЕ
	|			Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		СГРУППИРОВАТЬ ПО
	|			ИнформационнаяБаза
	|		) КАК РегДоступность
	|	ПО
	|		РегДоступность.ИнформационнаяБаза = СпрКП.ОбъектКонтроля
	|	ГДЕ
	|		СпрКП.Владелец = &КонтрольПодключений
	|		{И СпрКП.Выполнять = ИСТИНА}
	|	) КАК ВыборкаНачальная
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ
	|		СпрКП.ОбъектКонтроля КАК ИнформационнаяБаза,
	|		РегДоступность.Период КАК Период
	|	ИЗ
	|		Справочник.КонтрольныеПроцедуры КАК СпрКП
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		(ВЫБРАТЬ
	|			ИнформационнаяБаза КАК ИнформационнаяБаза,
	|			МАКСИМУМ(ПЕРИОД) КАК Период
	|		ИЗ
	|			РегистрСведений.ДоступностьИнформационныхБаз
	|		ГДЕ
	|			Период <= &ДатаОкончания
	|		СГРУППИРОВАТЬ ПО
	|			ИнформационнаяБаза
	|		) КАК РегДоступность
	|	ПО
	|		РегДоступность.ИнформационнаяБаза = СпрКП.ОбъектКонтроля
	|	ГДЕ
	|		СпрКП.Владелец = &КонтрольПодключений
	|		{И СпрКП.Выполнять = ИСТИНА}
	|	) КАК ВыборкаДоНачальная
	|ПО
	|	ВыборкаДоНачальная.ИнформационнаяБаза = ВыборкаНачальная.ИнформационнаяБаза
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ДоступностьИнформационныхБаз КАК РегСвДоступностьИБ
	|ПО
	|	РегСвДоступностьИБ.ИнформационнаяБаза = ВыборкаНачальная.ИнформационнаяБаза
	|	И РегСвДоступностьИБ.Период = ВыборкаНачальная.Период
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ДоступностьИнформационныхБаз КАК РегСвДоступностьИБ_До
	|ПО
	|	РегСвДоступностьИБ_До.ИнформационнаяБаза = ВыборкаДоНачальная.ИнформационнаяБаза
	|	И РегСвДоступностьИБ_До.Период = ВыборкаДоНачальная.Период
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ПараметрыИнформационныхБаз КАК РегСвПараметрыИБ
	|ПО
	|	РегСвПараметрыИБ.ОбъектКонтроля = ВыборкаНачальная.ИнформационнаяБаза
	|
	|ОБЪЕДИНИТЬ ВСЕ	
	|
	|ВЫБРАТЬ
	|	РегСвДоступностьИБ.Период,
	|	РегСвПараметрыИБ.Кластер,
	|	РегСвДоступностьИБ.ИнформационнаяБаза,
	|	ВЫБОР РегСвДоступностьИБ.Доступность
	|		КОГДА 1 ТОГДА &UP
	|		КОГДА 0 ТОГДА &DOWN
	|	КОНЕЦ КАК Доступность
	|ИЗ
	|	РегистрСведений.ДоступностьИнформационныхБаз КАК РегСвДоступностьИБ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ПараметрыИнформационныхБаз КАК РегСвПараметрыИБ
	|ПО
	|	РегСвПараметрыИБ.ОбъектКонтроля = РегСвДоступностьИБ.ИнформационнаяБаза	
	|ГДЕ
	|	РегСвДоступностьИБ.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|{ГДЕ
	|	РегСвДоступностьИБ.ИнформационнаяБаза = &ИнформационнаяБаза}
	|;
	//Конец выборки во временную таблицу Доступность
	//==============================================
	//Начало выборки во временную таблицу ТекущееСостояние
	|ВЫБРАТЬ
	|	ИнформационнаяБаза КАК ИнформационнаяБаза,
	|	ВЫБОР
	|		КОГДА РАЗНОСТЬДАТ(ДатаОкончания, &ТекущаяДата, СЕКУНДА) >= &ГлубинаВыборки ТОГДА &UNKNOWN
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА РезультатПодключения ТОГДА &UP
	|				КОГДА НЕ РезультатПодключения И РАЗНОСТЬДАТ(ДатаНачала, ДатаОкончания, СЕКУНДА) < &ГлубинаВыборки ТОГДА &UP
	|				ИНАЧЕ &DOWN
	|			КОНЕЦ
	|	КОНЕЦ КАК ДоступностьТекущееСостояние
	|ПОМЕСТИТЬ
	|	ТекущееСостояние
	|ИЗ
	|	РегистрСведений.КонтрольПодключенийТекущееСостояние
	|{ГДЕ
	|	ИнформационнаяБаза = &ИнформационнаяБаза}
	|;
	//Конец выборки во временную таблицу ТекущееСостояние
	//========================================================
	//Начало выборки во временную таблицу КрайняяНедоступность
	|ВЫБРАТЬ
	|	ИнформационнаяБаза КАК ИнформационнаяБаза,
	|	МАКСИМУМ(Период) КАК ДатаКрайняяНедоступность
	|ПОМЕСТИТЬ
	|	КрайняяНедоступность
	|ИЗ
	|	РегистрСведений.ДоступностьИнформационныхБаз
	|ГДЕ
	|	Доступность = 0
	|	И Период <= &ДатаОкончания
	|{ГДЕ
	|	ИнформационнаяБаза = &ИнформационнаяБаза}
	|СГРУППИРОВАТЬ ПО
	|	ИнформационнаяБаза
	|;
	//Конец выборки во временную таблицу КрайняяНедоступность
	//=========================================================================
	//Начало выборки во временную таблицу КоличествоСеансовКрайняяНедоступность
	|ВЫБРАТЬ
	|	МАКСИМУМ(РегСвМониторингСеансов.Время) КАК ВремяКрайнегоСеанса,
	|	РегСвМониторингСеансов.Кластер КАК Кластер,
	|	РегСвМониторингСеансов.База КАК	База
	|ПОМЕСТИТЬ
	|	КрайнииСеансы
	|ИЗ
	|	(ВЫБРАТЬ
	|		РегСвПараметрыИБ.Кластер КАК Кластер,
	|		СпрОбъектыКонтроля.Наименование КАК ИнформационнаяБаза,
	|		МАКСИМУМ(РегСвДоступностьИБ.Период) КАК ПериодКрайняяНедоступность
	|	ИЗ
	|		РегистрСведений.ДоступностьИнформационныхБаз КАК РегСвДоступностьИБ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ПараметрыИнформационныхБаз КАК РегСвПараметрыИБ
	|	ПО
	|		РегСвПараметрыИБ.ОбъектКонтроля = РегСвДоступностьИБ.ИнформационнаяБаза
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ОбъектыКонтроля КАК СпрОбъектыКонтроля
	|	ПО
	|		СпрОбъектыКонтроля.Ссылка = ИнформационнаяБаза
	|	ГДЕ
	|		Доступность = 0
	|		И РегСвДоступностьИБ.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	СГРУППИРОВАТЬ ПО
	|		РегСвПараметрыИБ.Кластер,
	|		СпрОбъектыКонтроля.Наименование
	|	) КАК КрайняяНедоступность
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.МониторингСеансов КАК РегСвМониторингСеансов
	|ПО
	|	РегСвМониторингСеансов.Время МЕЖДУ ДОБАВИТЬКДАТЕ(ПериодКрайняяНедоступность, ЧАС, -1) И ПериодКрайняяНедоступность
	|	И РегСвМониторингСеансов.Кластер = КрайняяНедоступность.Кластер
	|	И РегСвМониторингСеансов.База = КрайняяНедоступность.ИнформационнаяБаза
	|СГРУППИРОВАТЬ ПО
	|	РегСвМониторингСеансов.Кластер,
	|	РегСвМониторингСеансов.База	
	|;
	|ВЫБРАТЬ
	|	СпрОбъектыКонтроля.Ссылка КАК ИнформационнаяБаза,
	|	КОЛИЧЕСТВО(РегСвМониторингСеансов.Сеанс) КАК КоличествоСеансовНедоступность
	|ПОМЕСТИТЬ
	|	КоличествоСеансовКрайняяНедоступность
	|ИЗ
	|	КрайнииСеансы
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.ОбъектыКонтроля КАК СпрОбъектыКонтроля
	|ПО
	|	СпрОбъектыКонтроля.Наименование = КрайнииСеансы.База
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.МониторингСеансов КАК РегСвМониторингСеансов
	|ПО
	|	РегСвМониторингСеансов.Время = КрайнииСеансы.ВремяКрайнегоСеанса
	|	И РегСвМониторингСеансов.Кластер = КрайнииСеансы.Кластер
	|	И РегСвМониторингСеансов.База = КрайнииСеансы.База
	|СГРУППИРОВАТЬ ПО
	|	СпрОбъектыКонтроля.Ссылка
	|;
	//Конец выборки во временную таблицу КоличествоСеансовКрайняяНедоступность
	//========================================================================
	//Начало выборки во временную таблицу ВремяПодключения
    |ВЫБРАТЬ
	|   СпрОбъектыКонтроля.Ссылка КАК ИнформационнаяБаза,
	|   СпрГруппыСчетчиков.Ссылка КАК Счетчик
    |ПОМЕСТИТЬ
	|	СчетчикиИнформационнойБазы
    |ИЗ
	|   Справочник.ОбъектыКонтроля КАК СпрОбъектыКонтроля
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|   Справочник.ГруппыСчетчиков КАК СпрГруппыСчетчиков
    |ПО
	|   СпрГруппыСчетчиков.ПолныйКодДляПоиска = ""Длительность подключения/Контроль подключений/"" + СпрОбъектыКонтроля.Наименование + "", мс.""
    |ГДЕ
	|   СпрОбъектыКонтроля.Владелец = &ИнфБаза
	|;
	|ВЫБРАТЬ
	|	ИнформационнаяБаза,
    |   ВЫБОР
    |       КОГДА СУММА(ЧислоЗначений) = 0 ТОГДА 0
    |       ИНАЧЕ СУММА(СуммаЗначений)/СУММА(ЧислоЗначений)
    |   КОНЕЦ КАК ВремяПодключенияСреднее,
	|	МАКСИМУМ(Значение) КАК ВремяПодключенияМаксимальное
	|ПОМЕСТИТЬ
	|	ВремяПодключения
	|ИЗ
	|	(ВЫБРАТЬ
	|		СчетчикиИнформационнойБазы.ИнформационнаяБаза КАК ИнформационнаяБаза,
	|		РегСвСтатистикаНеделя.СреднееЗначение * РегСвСтатистикаНеделя.ЧислоСрабатываний КАК СуммаЗначений,
	|		РегСвСтатистикаНеделя.ЧислоСрабатываний КАК ЧислоЗначений,
	|		РегСвСтатистикаНеделя.СреднееЗначение КАК Значение
	|	ИЗ
	|		РегистрСведений.СтатистикаНеделя КАК РегСвСтатистикаНеделя
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетчикиИнформационнойБазы
	|	ПО
	|		СчетчикиИнформационнойБазы.Счетчик = РегСвСтатистикаНеделя.Событие
	|	ГДЕ
	|		РегСвСтатистикаНеделя.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|   ВЫБРАТЬ
	|		СчетчикиИнформационнойБазы.ИнформационнаяБаза КАК ИнформационнаяБаза,
	|		РегСвСтатистикаМесяц.СреднееЗначение * РегСвСтатистикаМесяц.ЧислоСрабатываний КАК СуммаЗначений,
	|		РегСвСтатистикаМесяц.ЧислоСрабатываний КАК ЧислоЗначений,
	|		РегСвСтатистикаМесяц.СреднееЗначение КАК Значение
	|	ИЗ
	|		РегистрСведений.СтатистикаМесяц КАК РегСвСтатистикаМесяц
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетчикиИнформационнойБазы
	|	ПО
	|		СчетчикиИнформационнойБазы.Счетчик = РегСвСтатистикаМесяц.Событие
	|	ГДЕ
	|		РегСвСтатистикаМесяц.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|   ВЫБРАТЬ
	|		СчетчикиИнформационнойБазы.ИнформационнаяБаза КАК ИнформационнаяБаза,
	|		РегСвСтатистикаПолный.СреднееЗначение * РегСвСтатистикаПолный.ЧислоСрабатываний КАК СуммаЗначений,
	|		РегСвСтатистикаПолный.ЧислоСрабатываний КАК ЧислоЗначений,
	|		РегСвСтатистикаПолный.СреднееЗначение КАК Значение
	|	ИЗ
	|		РегистрСведений.СтатистикаПолный КАК РегСвСтатистикаПолный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетчикиИнформационнойБазы
	|	ПО
	|		СчетчикиИнформационнойБазы.Счетчик = РегСвСтатистикаПолный.Событие
	|	ГДЕ
	|		РегСвСтатистикаПолный.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	) КАК ВыборкаВремяПодключения
	|СГРУППИРОВАТЬ ПО
	|	ИнформационнаяБаза
	|;
	//Конец выборки во временную таблицу ВремяПодключения
	//===================================================
	//Начало выборки в набор данных
	|ВЫБРАТЬ
	|	ДоступностьВрТ.Период КАК Период,
	|	ДоступностьВрТ.Кластер КАК Кластер,
	|	ДоступностьВрТ.ИнформационнаяБаза КАК ИнформационнаяБаза,
	|	ДоступностьВрТ.Доступность КАК Доступность,
	|	ТекущееСостояниеВрТ.ДоступностьТекущееСостояние КАК ДоступностьТекущееСостояние,
	|	ДОБАВИТЬКДАТЕ(ДАТАВРЕМЯ(1,1,1), СЕКУНДА, РАЗНОСТЬДАТ(ISNULL(КрайняяНедоступностьВрТ.ДатаКрайняяНедоступность, &ДатаОкончания), &ДатаОкончания, СЕКУНДА)) КАК ДатаКрайняяНедоступность,
	|	ISNULL(КрайняяНедоступностьВрТ.ДатаКрайняяНедоступность, ДАТАВРЕМЯ(1,1,1)) КАК МоментКрайняяНедоступность,
	|	ISNULL(КоличествоСеансовКрайняяНедоступностьВрТ.КоличествоСеансовНедоступность,0) КАК КоличествоСеансовНедоступность,
	|	ISNULL(ВремяПодключенияВрТ.ВремяПодключенияСреднее,0) КАК ВремяПодключенияСреднее,
	|	ISNULL(ВремяПодключенияВрТ.ВремяПодключенияМаксимальное,0) КАК ВремяПодключенияМаксимальное
	|ИЗ
	|	ДоступностьВрТ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ТекущееСостояние КАК ТекущееСостояниеВрТ
	|ПО
	|	ТекущееСостояниеВрТ.ИнформационнаяБаза = ДоступностьВрТ.ИнформационнаяБаза
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	КрайняяНедоступность КАК КрайняяНедоступностьВрТ
	|ПО
	|	КрайняяНедоступностьВрТ.ИнформационнаяБаза = ДоступностьВрТ.ИнформационнаяБаза
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	КоличествоСеансовКрайняяНедоступность КАК КоличествоСеансовКрайняяНедоступностьВрТ
	|ПО
	|	КоличествоСеансовКрайняяНедоступностьВрТ.ИнформационнаяБаза = ДоступностьВрТ.ИнформационнаяБаза
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВремяПодключения КАК ВремяПодключенияВрТ
	|ПО
	|	ВремяПодключенияВрТ.ИнформационнаяБаза = ДоступностьВрТ.ИнформационнаяБаза
	|УПОРЯДОЧИТЬ ПО
	|	ДоступностьВрТ.Кластер,
	|	ДоступностьВрТ.ИнформационнаяБаза,
	|   ДоступностьВрТ.Период
	|;
	|";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("ИнфБаза", Справочники.ВидыОбъектовКонтроля.ИнформационнаяБаза);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ГлубинаВыборки", Константы.КонтрольПодключенийДопустимаяНедоступность.Получить());
	Запрос.УстановитьПараметр("КонтрольПодключений", Справочники.ВидыКонтрольныхПроцедур.НайтиПоНаименованию("Контроль подключений"));
	Запрос.УстановитьПараметр("UP", UP);
	Запрос.УстановитьПараметр("DOWN", DOWN);
	Запрос.УстановитьПараметр("UNKNOWN", UNKNOWN);
	
	Если ЭлементСтатусИнформационнойБазы.Значение = "Активная" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И СпрКП.Выполнять = ИСТИНА}", "И СпрКП.Выполнять = ИСТИНА");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И СпрКП.Выполнять = ИСТИНА}", "");
	КонецЕсли;
	
	#КонецОбласти
	
	Результат = Запрос.Выполнить();
	ТЗнДанные = Результат.Выгрузить();
	Результат = Неопределено;
	
	ТЗнДанные.Колонки.Добавить("ВремяДоступности", Новый ОписаниеТипов(,,,Новый КвалификаторыЧисла(10, 0)));
	ТЗнДанные.Колонки.Добавить("ВремяНеДоступности", Новый ОписаниеТипов(,,,Новый КвалификаторыЧисла(10, 0)));
	ТЗнДанные.Колонки.Добавить("ВремяДоступностиРабочее", Новый ОписаниеТипов(,,,Новый КвалификаторыЧисла(10, 0)));
	ТЗнДанные.Колонки.Добавить("ВремяНеДоступностиРабочее", Новый ОписаниеТипов(,,,Новый КвалификаторыЧисла(10, 0)));
	ТЗнДанные.Колонки.Добавить("ОбщаяДлительностьРабочегоВремени", Новый ОписаниеТипов(,,,Новый КвалификаторыЧисла(15, 0)));
	ТЗнДанные.Колонки.Добавить("РазНедоступен", Новый ОписаниеТипов(,,,Новый КвалификаторыЧисла(10, 0)));
	ТЗнДанные.Колонки.Добавить("РазНедоступенРабочее", Новый ОписаниеТипов(,,,Новый КвалификаторыЧисла(10, 0)));
	
	
	ОбщаяДлительностьРабочегоВремени = ПолучитьДлительностьРабочегоВремени(ДатаНачала, ДатаОкончания, НачалоРабочегоДня, ОкончаниеРабочегоДня); 
	
	МаксИндекс = ТЗнДанные.Количество() - 1;
	Для ИндексСтроки = 0  По МаксИндекс Цикл
		ТекСтрока = ТЗнДанные[ИндексСтроки];
		ТекСтрока.ОбщаяДлительностьРабочегоВремени = ОбщаяДлительностьРабочегоВремени;
		
		ДлительностьПериода = 0;
		Если ИндексСтроки < МаксИндекс Тогда
			СледСтрока = ТЗнДанные[ИндексСтроки + 1];
			
			Если СледСтрока.ИнформационнаяБаза <> ТекСтрока.ИнформационнаяБаза Тогда
				ДлительностьПериода = (ДатаОкончания - ТекСтрока.Период);
			Иначе
				ДлительностьПериода = (СледСтрока.Период - ТекСтрока.Период);
			КонецЕсли;
		Иначе
			ДлительностьПериода = (ДатаОкончания - ТекСтрока.Период) * ?(ТекСтрока.Доступность = UP,1,0);
		КонецЕсли;
		
		ДлительностьПериодаРабочий = ПолучитьДлительностьРабочегоВремени(ТекСтрока.Период, ТекСтрока.Период + ДлительностьПериода, НачалоРабочегоДня, ОкончаниеРабочегоДня);
		
		Если ТекСтрока.Доступность <> UP Тогда
			ТекСтрока.ВремяДоступности = 0;
			ТекСтрока.ВремяНеДоступности = ДлительностьПериода;
			
			ТекСтрока.ВремяДоступностиРабочее = 0;
			ТекСтрока.ВремяНеДоступностиРабочее = ДлительностьПериодаРабочий;
			
			ТекСтрока.РазНедоступен = 1;
			Если ТекСтрока.ВремяНеДоступностиРабочее > 0 Тогда
				ТекСтрока.РазНедоступенРабочее = 1;
			КонецЕсли;
		Иначе
			ТекСтрока.ВремяДоступности = ДлительностьПериода;
			ТекСтрока.ВремяНеДоступности = 0;
			
			ТекСтрока.ВремяДоступностиРабочее = ДлительностьПериодаРабочий;
			ТекСтрока.ВремяНеДоступностиРабочее = 0;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат ТЗнДанные;	
КонецФункции

Функция ПолучитьДлительностьРабочегоВремени(Знач НачалоПериода, Знач ОкончаниеПериода, Знач НачалоРабочегоДня, Знач ОкончаниеРабочегоДня)
	ДлительностьПериодаРабочий = 0;

	Пока НачалоПериода < ОкончаниеПериода Цикл
		НачалоПериодаУказатель = Дата(1,1,1) + (НачалоПериода - НачалоДня(НачалоПериода));
		
		СмещениеНаНачалоРабочегоДня = НачалоРабочегоДня - НачалоПериодаУказатель;
		СмещениеНаОкончаниеПериода = ОкончаниеПериода - НачалоПериода;
		Если СмещениеНаОкончаниеПериода <= СмещениеНаНачалоРабочегоДня Тогда
			 НачалоПериода = НачалоПериода + СмещениеНаОкончаниеПериода;
			 НачалоПериодаУказатель = Дата(1,1,1) + (НачалоПериода - НачалоДня(НачалоПериода));
			 Продолжить;
		 Иначе
			 Если СмещениеНаНачалоРабочегоДня > 0 Тогда
				 НачалоПериода = НачалоПериода + СмещениеНаНачалоРабочегоДня;
				 НачалоПериодаУказатель = Дата(1,1,1) + (НачалоПериода - НачалоДня(НачалоПериода));
			 КонецЕсли;
		КонецЕсли;
		
		СмещениеНаОкончаниеРабочегоДня = ОкончаниеРабочегоДня - НачалоПериодаУказатель;
		СмещениеНаОкончаниеПериода = ОкончаниеПериода - НачалоПериода;
		
		Если СмещениеНаОкончаниеПериода <= СмещениеНаОкончаниеРабочегоДня Тогда
			ДлительностьПериодаРабочий = ДлительностьПериодаРабочий + СмещениеНаОкончаниеПериода;
			НачалоПериода = НачалоПериода + СмещениеНаОкончаниеПериода;
			НачалоПериодаУказатель = Дата(1,1,1) + (НачалоПериода - НачалоДня(НачалоПериода));
			Продолжить;
		Иначе
			Если СмещениеНаОкончаниеРабочегоДня > 0 Тогда
				ДлительностьПериодаРабочий = ДлительностьПериодаРабочий + СмещениеНаОкончаниеРабочегоДня;
				НачалоПериода = НачалоПериода + СмещениеНаОкончаниеРабочегоДня;
				НачалоПериодаУказатель = Дата(1,1,1) + (НачалоПериода - НачалоДня(НачалоПериода));
			КонецЕсли;
		КонецЕсли;
		
		СмещениеНаКонецДня = КонецДня(НачалоПериодаУказатель) - НачалоПериодаУказатель + 1;
		СмещениеНаОкончаниеПериода = ОкончаниеПериода - НачалоПериода;
		
		Если СмещениеНаКонецДня <= СмещениеНаОкончаниеПериода Тогда
			НачалоПериода = НачалоПериода + СмещениеНаКонецДня;
			НачалоПериодаУказатель = Дата(1,1,1) + (НачалоПериода - НачалоДня(НачалоПериода));
		Иначе
			НачалоПериода = НачалоПериода + СмещениеНаОкончаниеПериода;
			НачалоПериодаУказатель = Дата(1,1,1) + (НачалоПериода - НачалоДня(НачалоПериода));
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДлительностьПериодаРабочий;
КонецФункции

#КонецЕсли
