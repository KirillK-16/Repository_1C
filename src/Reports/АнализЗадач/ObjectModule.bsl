#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; // отключаем стандартный вывод отчета - будем выводить программно 
	
	// Получаем настрокий отчета
	Настройки = КомпоновщикНастроек.ПолучитьНастройки(); // Получаем настройки отчета 
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; // Создаем данные расшифровки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; // Создаем компоновщик макета 
	// Инициализируем макет компоновки используя схему компоновки данных 
	// и созданные ранее настройки и данные расшифровки
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, 
							Настройки, ДанныеРасшифровки);
	
	// Скомпонуем результат
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,
		// !!! Передаем таблицу в процессор компоновки !!!
		Новый Структура("НаборДанныхДляДиаграммы", ПолучитьДанныеДляНаборДанныхДляДиаграммы(Настройки)), 
		ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1);
	
КонецПроцедуры

Функция ПолучитьДанныеДляНаборДанныхДляДиаграммы(Настройки)
	
	МассивДат = Новый ТаблицаЗначений;
	МассивДат.Колонки.Добавить("ДатаДляДиаграммы", Новый ОписаниеТипов("Дата",,,,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	МассивДат.Колонки.Добавить("ДатаДляСоединения", Новый ОписаниеТипов("Дата",,,,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	
	ПериодДиаграммы = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодДиаграммы"));
	ДатаНачала = ПериодДиаграммы.Значение.ДатаНачала;
	ДатаОкончания = ПериодДиаграммы.Значение.ДатаОкончания;

	ДатаВЦикле = ДатаНачала; 
	
	Пока ДатаВЦикле <= ДатаОкончания Цикл  
		СтрокаМассиваДат = МассивДат.Добавить();
		СтрокаМассиваДат.ДатаДляДиаграммы = КонецДня(ДатаВЦикле);
		СтрокаМассиваДат.ДатаДляСоединения = НачалоДня(ДатаВЦикле);
		ДатаВЦикле = ДатаВЦикле + 86400;
	КонецЦикла;
	
	ПараметрСНакоплением = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СНакоплением"));
	СНакоплением = ПараметрСНакоплением.Значение;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МассивДат.ДатаДляДиаграммы,
	               |	МассивДат.ДатаДляСоединения КАК ДатаДляСоединения
	               |ПОМЕСТИТЬ МассивДат
	               |ИЗ
	               |	&МассивДат КАК МассивДат
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ДатаДляСоединения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(1) КАК Количество,
	               |	МассивДат.ДатаДляСоединения КАК ДатаДляДиаграммы
	               |ПОМЕСТИТЬ КоличествоОткрытыхЗадач
	               |ИЗ
	               |	Задача.ЗадачаОтветственному КАК ЗадачаОтветственному
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МассивДат КАК МассивДат
	               |		ПО ЗадачаОтветственному.Дата <= МассивДат.ДатаДляДиаграммы
	               |			И (&СтрокаСоединения)
	               |ГДЕ
	               |	ЗадачаОтветственному.Выполнена = ЛОЖЬ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МассивДат.ДатаДляДиаграммы,
	               |	МассивДат.ДатаДляСоединения
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ДатаДляДиаграммы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(1) КАК Количество,
	               |	МассивДат.ДатаДляСоединения КАК ДатаДляДиаграммы
	               |ПОМЕСТИТЬ КоличествоВыполненныхЗадач
	               |ИЗ
	               |	Задача.ЗадачаОтветственному КАК ЗадачаОтветственному
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МассивДат КАК МассивДат
	               |		ПО ЗадачаОтветственному.Дата <= МассивДат.ДатаДляДиаграммы
	               |			И (&СтрокаСоединения)
	               |ГДЕ
	               |	ЗадачаОтветственному.Выполнена = ИСТИНА
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МассивДат.ДатаДляДиаграммы,
	               |	МассивДат.ДатаДляСоединения
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ДатаДляДиаграммы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КоличествоВыполненныхЗадач.Количество КАК КоличествоВыполненныхЗадач,
	               |	КоличествоОткрытыхЗадач.Количество КАК КоличествоОткрытыхЗадач,
	               |	МассивДат.ДатаДляДиаграммы
	               |ИЗ
				   |	МассивДат КАК МассивДат
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоОткрытыхЗадач КАК КоличествоОткрытыхЗадач
	               |		ПО МассивДат.ДатаДляСоединения = КоличествоОткрытыхЗадач.ДатаДляДиаграммы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоВыполненныхЗадач КАК КоличествоВыполненныхЗадач
	               |		ПО МассивДат.ДатаДляСоединения = КоличествоВыполненныхЗадач.ДатаДляДиаграммы";
				   
	Если СНакоплением Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СтрокаСоединения", "ЗадачаОтветственному.Дата >= &ДатаНачала");
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СтрокаСоединения", "ЗадачаОтветственному.Дата >= МассивДат.ДатаДляСоединения");
	КонецЕсли;				
	
	Запрос.УстановитьПараметр("МассивДат", МассивДат);				   
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	
	Возврат Запрос.Выполнить().Выгрузить();
				   
КонецФункции

#КонецЕсли