
#Область ПеременныеНаКлиенте

&НаКлиенте
Перем БуферПериодов, ПериодПредыдущий, ОбновлятьПравку;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    ПрочитатьПараметры(Параметры);
    ИнициализироватьДиаграмму(Параметры);
    ВывестиСерии();    
        
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
    
    Если Автомасштаб Тогда
        Автомасштаб(Серии, Истина);
        ИзменитьМасштабСерий(Диаграмма, Серии);
    КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    БуферПериодов = Новый Массив;
    ОбновлятьПравку = Истина;
    ПериодПредыдущий = Новый Структура("ДатаНачала, ДатаОкончания", ДатаНачала, ДатаОкончания);
    
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
    
    Если ИмяСобытия = "c883da79-c41e-4e4e-9f40-454f6460819b" Тогда
        Палитра = Диаграмма.ПолучитьПалитру();
        ДобавитьСерию(Диаграмма, Серии, Параметр, Палитра);
    ИначеЕсли ИмяСобытия = "0deb911d-99fb-48bf-bcd2-1b1d72c0ad33" Тогда
        ИзменитьСерию(Параметр);
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
        
    Если ВыбранноеЗначение.Количество() > 0 Тогда
        
        Палитра = Диаграмма.ПолучитьПалитру();
        
        Для Каждого ТекЭлемент Из ВыбранноеЗначение Цикл
            ДобавитьСерию(Диаграмма, Серии, ТекЭлемент, Палитра);
        КонецЦикла;
        
        СформироватьПредставлениеСерий(ЭтотОбъект, Диаграмма, Серии);
        
        Обновить(Неопределено);
        
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДиаграммаПриАктивизации(Элемент)
    
    ВыделенныеЭлементы = Элемент.ПолучитьВыделенныеЭлементы();
    
    Если ВыделенныеЭлементы.Количество() > 0 Тогда
        
        Если ВыделенныеЭлементы.Количество() > 1 И ТипЗнч(ВыделенныеЭлементы[0]) = Тип("ТочкаДиаграммы") Тогда
            ДатаНачала = ВыделенныеЭлементы[0].Значение;
            ДатаОкончания = ВыделенныеЭлементы[ВыделенныеЭлементы.ВГраница()].Значение;
            Обновить(Неопределено);
        КонецЕсли;
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаВыбор(Элемент, ЗначениеДиаграммы, СтандартнаяОбработка)
    
    Если ТипЗнч(ЗначениеДиаграммы) = Тип("СерияДиаграммы") Тогда
        Если ЗначениеДиаграммы.ОтображатьГрафическоеПредставлениеДанныхВДиаграмме = ОтображениеВДиаграмме.Отображать Тогда
            ЗначениеДиаграммы.ОтображатьГрафическоеПредставлениеДанныхВДиаграмме = ОтображениеВДиаграмме.НеОтображать;
            ЗначениеДиаграммы.Линия = Новый Линия(ТипЛинииДиаграммы.НетЛинии, ЗначениеДиаграммы.Линия.Толщина);
        Иначе
            ЗначениеДиаграммы.ОтображатьГрафическоеПредставлениеДанныхВДиаграмме = ОтображениеВДиаграмме.Отображать;
            ЗначениеДиаграммы.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная, ЗначениеДиаграммы.Линия.Толщина);
        КонецЕсли;
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура АвтомасштабПриИзменении(Элемент)
    
    Если Автомасштаб Тогда
        Автомасштаб(Серии, Истина);
        ИзменитьМасштабСерий(Диаграмма, Серии);
    Иначе
        
        Для Каждого Серия Из Серии Цикл
            Серия.Масштаб = 1;
            Серия.МасштабСтрока = МасштабСтрока(Серия.Масштаб);
        КонецЦикла;
        ИзменитьМасштабСерий(Диаграмма, Серии);
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура СерииМасштабСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
    
    ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
    ТекущиеДанные.Масштаб = ТекущиеДанные.Масштаб * pow(10, Направление);
    
    Если ТекущиеДанные.Масштаб = 0 Тогда
        ТекущиеДанные.Масштаб = 1;
    КонецЕсли;
    
    Если ТекущиеДанные.Масштаб > 9999999999 Тогда
        ТекущиеДанные.Масштаб = 1;
    КонецЕсли;
    
    ТекущиеДанные.МасштабСтрока = МасштабСтрока(ТекущиеДанные.Масштаб);
    
    Автомасштаб = Ложь;
    
    ИзменитьМасштабСерии(Диаграмма, ТекущиеДанные.Серия, ТекущиеДанные.Масштаб, ТекущиеДанные.МасштабБыл);
    ТекущиеДанные.МасштабБыл = ТекущиеДанные.Масштаб;
        
    СтандартнаяОбработка = Ложь;
    
КонецПроцедуры

&НаКлиенте
Процедура СерииОтображатьВДиаграммеПриИзменении(Элемент)
    ИзменитьСерию(Элементы.Серии.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СерииТолщинаПриИзменении(Элемент)
    ИзменитьСерию(Элементы.Серии.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СерииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    Если Поле.Имя = "СерииСерияПредставление" Тогда
        
        ТекущиеДанные = Элемент.ТекущиеДанные;
        ТекущиеДанные.Выделенная = НЕ ТекущиеДанные.Выделенная;
        
        ВсегоВыделено = 0;
        Для Каждого ТекСтрока Из Серии Цикл
            Если ТекСтрока.Выделенная Тогда
                ВсегоВыделено = ВсегоВыделено + 1;
            КонецЕсли;
        КонецЦикла;
        
        Если ВсегоВыделено = 0 Тогда
            ТекущиеДанные.Выделенная = Истина;
        КонецЕсли;
        
        ИзменитьСерию(ТекущиеДанные);
        
        ИзменитьВыделениеСерий();
        
    ИначеЕсли Поле.Имя = "СерииЦветСтрока" Тогда
        
        ДиалогВыбораЦвета = Новый ДиалогВыбораЦвета;
        ДиалогВыбораЦвета.Цвет = Элементы.Серии.ТекущиеДанные.Цвет;
        ОписаниеОповещения = Новый ОписаниеОповещения("ВыборЦветаСерииЗавершение", ЭтотОбъект);
        ДиалогВыбораЦвета.Показать(ОписаниеОповещения);
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПодсветкаТекущейПриИзменении(Элемент)
    
    ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
    
    Если ТекущиеДанные <> Неопределено Тогда
        
        Для Каждого ТекСерия Из Серии Цикл
            ТекСерия.Выделенная = НЕ ПодсветкаТекущей;
        КонецЦикла;
        
        Если ПодсветкаТекущей Тогда
            ТекущиеДанные.Выделенная = Истина;
        КонецЕсли;
                
    КонецЕсли;
    
    ИзменитьВыделениеСерий();
        
КонецПроцедуры

&НаКлиенте
Процедура СерииПриАктивизацииСтроки(Элемент)
    
    Если ПодсветкаТекущей Тогда
        
        ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
        
        Если ТекущиеДанные <> Неопределено Тогда
            
            Для Каждого ТекСерия Из Серии Цикл
                ТекСерия.Выделенная = НЕ ПодсветкаТекущей;
            КонецЦикла;
            
            Если ПодсветкаТекущей Тогда
                ТекущиеДанные.Выделенная = Истина;
            КонецЕсли;
            
        КонецЕсли;
        
        ИзменитьВыделениеСерий();
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура СерииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
    
    Форма = ОткрытьФорму(ФормаВыбораДанных,,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    Отказ = Истина;
    
КонецПроцедуры

&НаКлиенте
Процедура СерииПередУдалением(Элемент, Отказ)
    
    ВыделенныеСтроки = Элементы.Серии.ВыделенныеСтроки;
    
    Для Каждого ИндексСтроки Из ВыделенныеСтроки Цикл
        Серия = Серии.НайтиПоИдентификатору(ИндексСтроки);
        СерияДиаграммы = Диаграмма.УстановитьСерию(Серия.Серия);
        Диаграмма.Серии.Удалить(Диаграмма.Серии.Индекс(СерияДиаграммы));
    КонецЦикла;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
    
    Если ОбновлятьПравку Тогда
        ДобавитьВПравку();
        ОбновитьПравку();
    КонецЕсли;
    
    Диаграмма.Обновление = Ложь;
    
    Если Команда <> Неопределено Тогда
        КомандаИмя = Команда.Имя;
    Иначе
        КомандаИмя = "";
    КонецЕсли;
    
    ОбновитьНаСервере(КомандаИмя);
    
    Диаграмма.Обновление = Истина;
    
    ИзменитьВыделениеСерий();
    
    Если ДатаНачала <> ПериодПредыдущий.ДатаНачала ИЛИ ДатаОкончания <> ПериодПредыдущий.ДатаОкончания Тогда
        
        ПериодПредыдущий.ДатаНачала = ДатаНачала;
        ПериодПредыдущий.ДатаОкончания = ДатаОкончания;
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьВсеСерии(Команда)
    
    Для Каждого ТекСерия Из Серии Цикл
        ТекСерия.ОтображатьВДиаграмме = Истина;
        ИзменитьСерию(ТекСерия);
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура СкрытьВсеСерии(Команда)
    
    Для Каждого ТекСерия Из Серии Цикл
        ТекСерия.ОтображатьВДиаграмме = Ложь;
        ИзменитьСерию(ТекСерия);
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура ТипДиаграммыПриИзменении(Элемент)
    Диаграмма.ТипДиаграммы = ТипДиаграммыТекущий;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройки(Команда)
    
    Настройка = Новый Структура;
    
    Настройка.Вставить("Наименование", ЭтотОбъект.ИмяНастройки);
    Настройка.Вставить("ФормаВыбораДанных", ЭтотОбъект.ФормаВыбораДанных);
    Настройка.Вставить("ФункцияПолученияДанных", ЭтотОбъект.ФункцияПолученияДанных);
    Настройка.Вставить("ТипДиаграммыТекущий", ЭтотОбъект.ТипДиаграммыТекущий);
    Настройка.Вставить("ФорматИмениТочки", ЭтотОбъект.ФорматИмениТочки);
    Настройка.Вставить("ФорматЗначенийВПодписях", Диаграмма.ФорматЗначенийВПодписях);
    Настройка.Вставить("ШкалаСерийФорматПодписей", Диаграмма.ОбластьПостроения.ШкалаСерий.ФорматПодписей);
    Настройка.Вставить("Ссылки",СерииВСсылки());
    
    ПараметрыОткрытия = Новый Структура("Настройка", Настройка);
    ОткрытьФорму("Обработка.ДиаграммаОбщая.Форма.Настройки", ПараметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    
КонецПроцедуры

&НаКлиенте
Функция СерииВСсылки()
    
    Ссылки = Новый Массив;
    Для Каждого Серия Из Диаграмма.Серии Цикл
        Ссылки.Добавить(Серия.Значение);
    КонецЦикла;
    
    Возврат Ссылки;
        
КонецФункции

&НаКлиенте
Процедура ОткрытьНастройки(Команда)
    
    ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОткрытьНастройкиЗакрытие", ЭтотОбъект);
    ОткрытьФорму("Обработка.ДиаграммаОбщая.Форма.Настройки",,,,,,ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    
КонецПроцедуры

#Область КомандыУвеличить

&НаКлиенте
Процедура УвеличитьОдинЧас(Команда)
    ДатаНачала = ДатаОкончания - 3600;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьДваЧаса(Команда)
    ДатаНачала = ДатаОкончания - 7200;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьТриЧаса(Команда)
    ДатаНачала = ДатаОкончания - 10800;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьШестьЧасов(Команда)
    ДатаНачала = ДатаОкончания - 21600;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьДвенадцатьЧасов(Команда)
    ДатаНачала = ДатаОкончания - 43200;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьОдинДень(Команда)
    ДатаНачала = ДатаОкончания - 86400;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьСемьДней(Команда)
    ДатаНачала = ДатаОкончания - 604800;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьЧетырнадцатьДней(Команда)
    ДатаНачала = ДатаОкончания - 1209600;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьОдинМесяц(Команда)
    ДатаНачала = ДобавитьМесяц(ДатаОкончания, -1);
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьВДваРаза(Команда)
    ПериодДобавить = (ДатаОкончания - ДатаНачала)/2;
    ДатаНачала = ДатаНачала - ПериодДобавить;
    ДатаОкончания = ДатаОкончания + ПериодДобавить;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьВМинусДваРаза(Команда)
    ПериодДобавить = (ДатаОкончания - ДатаНачала)/4;
    ДатаНачала = ДатаНачала + ПериодДобавить;
    ДатаОкончания = ДатаОкончания - ПериодДобавить;
    Обновить(Команда);
КонецПроцедуры

#КонецОбласти

#Область КомандыСдвинуть

&НаКлиенте
Процедура СдвигВлево(Команда)
    ПериодДобавить = ДатаОкончания - ДатаНачала;
    ДатаНачала = ДатаНачала - ПериодДобавить;
    ДатаОкончания = ДатаОкончания - ПериодДобавить;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоОдинМесяц(Команда)
    ДатаНачала = ДобавитьМесяц(ДатаНачала, -1);
    ДатаОкончания = ДобавитьМесяц(ДатаОкончания, -1);
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоЧетырнадцатьДней(Команда)
    ДатаНачала = ДатаНачала - 1209600;
    ДатаОкончания = ДатаОкончания - 1209600;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоСемьДней(Команда)
    ДатаНачала = ДатаНачала - 604800;
    ДатаОкончания = ДатаОкончания - 604800;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоОдинДень(Команда)
    ДатаНачала = ДатаНачала - 86400;
    ДатаОкончания = ДатаОкончания - 86400;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоДвенадцатьЧасов(Команда)
    ДатаНачала = ДатаНачала - 43200;
    ДатаОкончания = ДатаОкончания - 43200;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоШестьЧасов(Команда)
    ДатаНачала = ДатаНачала - 21600;
    ДатаОкончания = ДатаОкончания - 21600;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоТриЧаса(Команда)
    ДатаНачала = ДатаНачала - 10800;
    ДатаОкончания = ДатаОкончания - 10800;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоОдинЧас(Команда)
    ДатаНачала = ДатаНачала - 3600;
    ДатаОкончания = ДатаОкончания - 3600;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоОдинЧас(Команда)
    ДатаНачала = ДатаНачала + 3600;
    ДатаОкончания = ДатаОкончания + 3600;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоТриЧаса(Команда)
    ДатаНачала = ДатаНачала + 10800;
    ДатаОкончания = ДатаОкончания + 10800;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоШестьЧасов(Команда)
    ДатаНачала = ДатаНачала + 21600;
    ДатаОкончания = ДатаОкончания + 21600;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоДвенадцатьЧасов(Команда)
    ДатаНачала = ДатаНачала + 43200;
    ДатаОкончания = ДатаОкончания + 43200;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоОдинДень(Команда)
    ДатаНачала = ДатаНачала + 86400;
    ДатаОкончания = ДатаОкончания + 86400;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоСемьДней(Команда)
    ДатаНачала = ДатаНачала + 604800;
    ДатаОкончания = ДатаОкончания + 604800;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоЧетырнадцатьДней(Команда)
    ДатаНачала = ДатаНачала + 1209600;
    ДатаОкончания = ДатаОкончания + 1209600;
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоОдинМесяц(Команда)
    ДатаНачала = ДобавитьМесяц(ДатаНачала, 1);
    ДатаОкончания = ДобавитьМесяц(ДатаОкончания, 1);
    Обновить(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправо(Команда)
    ПериодДобавить = ДатаОкончания - ДатаНачала;
    ДатаНачала = ДатаНачала + ПериодДобавить;
    ДатаОкончания = ДатаОкончания + ПериодДобавить;
    Обновить(Команда);
КонецПроцедуры

#КонецОбласти

#Область КомандыПравка

&НаКлиенте
Процедура ПравкаШагНазад(Команда)
    ШаговНазад(1);
КонецПроцедуры

&НаКлиенте
Процедура Правка1(Команда)
    ШаговНазад(1);
КонецПроцедуры

&НаКлиенте
Процедура Правка2(Команда)
    ШаговНазад(2);
КонецПроцедуры

&НаКлиенте
Процедура Правка3(Команда)
    ШаговНазад(3);
КонецПроцедуры

&НаКлиенте
Процедура Правка4(Команда)
    ШаговНазад(4);
КонецПроцедуры

&НаКлиенте
Процедура Правка5(Команда)
    ШаговНазад(5);
КонецПроцедуры

&НаКлиенте
Процедура Правка6(Команда)
    ШаговНазад(6);
КонецПроцедуры

&НаКлиенте
Процедура Правка7(Команда)
    ШаговНазад(7);
КонецПроцедуры

&НаКлиенте
Процедура Правка8(Команда)
    ШаговНазад(8);
КонецПроцедуры

&НаКлиенте
Процедура Правка9(Команда)
    ШаговНазад(9);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнтерфейсСерий

&НаСервере
Функция ЗагрузитьДанные()
    
    Результат = Неопределено;
       
    ЗначенияОтбора = Серии.Выгрузить(,"Серия").ВыгрузитьКолонку("Серия");
            
    ПараметрыФункции = Новый Структура;
    ПараметрыФункции.Вставить("ДатаНачала", ДатаНачала);
    ПараметрыФункции.Вставить("ДатаОкончания", ДатаОкончания);
    ПараметрыФункции.Вставить("ЗначенияОтбора", ЗначенияОтбора);
    
    Выражение = Новый Массив;
    Выражение.Добавить("Результат = ");
    Выражение.Добавить(ФункцияПолученияДанных);
    Выражение.Добавить("(ПараметрыФункции)");
    Выражение = СтрСоединить(Выражение, "");
    
    Выполнить(Выражение);
    
    Если ТипЗнч(Результат) = Тип("РезультатЗапроса") Тогда
        Возврат Результат;
    КонецЕсли;    
    
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьСерию(Диаграмма, Серии, Серия, Палитра)
        
    ЦветИзПалитры = Палитра[Серии.Количество()%Палитра.Количество()];
    
    СерияДиаграммы = Диаграмма.Серии.Добавить(Строка(Серия));
    СерияДиаграммы.Значение = Серия;
    СерияДиаграммы.Маркер = ТипМаркераДиаграммы.Нет;
    СерияДиаграммы.Линия = Новый Линия(СерияДиаграммы.Линия.ТипЛинии, 1);
    СерияДиаграммы.ОтображатьГрафическоеПредставлениеДанныхВДиаграмме = ОтображениеВДиаграмме.Отображать;
    СерияДиаграммы.Цвет = ЦветИзПалитры;
    
    НоваяСерия = Серии.Добавить();
    НоваяСерия.Серия = Серия;
    НоваяСерия.СерияУникальныйИдентификатор = Строка(Серия.УникальныйИдентификатор());
    НоваяСерия.Цвет = ЦветИзПалитры;
    НоваяСерия.ЦветСтрока = "■■";
    НоваяСерия.Выделенная = Истина;
    НоваяСерия.Толщина = 1;
    НоваяСерия.ОтображатьВДиаграмме = Истина;
    НоваяСерия.ОтображатьВЛегенде = Истина;
    НоваяСерия.Масштаб = 1;
    НоваяСерия.МасштабБыл = 1;
    НоваяСерия.МасштабСтрока = МасштабСтрока(НоваяСерия.Масштаб);
    НоваяСерия.ФорматЗначения = Диаграмма.ФорматЗначенийВПодписях;
       
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьПредставлениеСерий(ЭтотОбъект, Диаграмма, Серии)
    
    СерииДиаграммыПредставление = Новый Соответствие;
    Для Каждого Серия Из Диаграмма.Серии Цикл
        СерииДиаграммыПредставление.Вставить(Серия, СтрРазделить(Серия.Текст, "/"));    
    КонецЦикла;
    
    ЗаголовокФормыМассив = ПреобразоватьИменаСерий(СерииДиаграммыПредставление);
    ЗаголовокФормы = СтрСоединить(ЗаголовокФормыМассив, "/");
    Если НЕ ЗначениеЗаполнено(ЗаголовокФормы) Тогда
        ЗаголовокФормы = "Диаграмма";
    КонецЕсли;
    ЭтотОбъект.Заголовок = ЗаголовокФормы; 
        
    Для Каждого Серия Из СерииДиаграммыПредставление Цикл
        
        Серия.Ключ.Текст = Серия.Значение;
        
        ПараметрыОтбора = Новый Структура("Серия", Серия.Ключ.Значение);
        СерииФормы = Серии.НайтиСтроки(ПараметрыОтбора);
        СерииФормы[0].СерияПредставление = Серия.Значение;
        
        Если НЕ ЗначениеЗаполнено(СерииФормы[0].СерияПредставление) Тогда
            Серия.Ключ.Текст = ЗаголовокФормы;
            СерииФормы[0].СерияПредставление = ЗаголовокФормы;
        КонецЕсли;
                
    КонецЦикла;
    
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПреобразоватьИменаСерий(СерииДиаграммыПредставление)
    
    УдаленныеЗначения = Новый Массив;
    
    Если СерииДиаграммыПредставление.Количество() = 1 Тогда
        
        Для Каждого ТекСерия Из СерииДиаграммыПредставление Цикл
            КолвоУдалить = ЦЕЛ(ТекСерия.Значение.Количество()/2);
            Для ТекИндекс = 1 По КолвоУдалить Цикл
                УдаленныеЗначения.Добавить(ТекСерия.Значение[0]);
                ТекСерия.Значение.Удалить(0);
            КонецЦикла;
            
            Представление = СтрСоединить(ТекСерия.Значение, "\");
            Представление = СтрЗаменить(Представление, "\\", "\");
            СерииДиаграммыПредставление[ТекСерия.Ключ] = Представление;    
        КонецЦикла;
        
    Иначе
        
        МаксимальныйИндекс = 999999;
        
        Для Каждого ТекСерия Из СерииДиаграммыПредставление Цикл
            ТекРазмер = ТекСерия.Значение.ВГраница();
            Если ТекРазмер < МаксимальныйИндекс Тогда
                МаксимальныйИндекс = ТекРазмер;
            КонецЕсли;
        КонецЦикла;
        
        КолвоУдалить = 0;
        Для ТекИндекс = 0 По МаксимальныйИндекс Цикл
            
            Значение = Неопределено;
            КолвоСовпадений = 0;
                        
            Для Каждого ТекСерия Из СерииДиаграммыПредставление Цикл
                
                Если Значение = Неопределено Тогда
                    Значение = ТекСерия.Значение[ТекИндекс];
                КонецЕсли;
                
                Если ТекСерия.Значение[ТекИндекс] = Значение Тогда
                    КолвоСовпадений = КолвоСовпадений + 1;
                КонецЕсли;
                
            КонецЦикла;
            
            Если КолвоСовпадений = СерииДиаграммыПредставление.Количество() Тогда
                КолвоУдалить = КолвоУдалить + 1;
            Иначе
                Прервать;
            КонецЕсли;
            
        КонецЦикла;
               
        НадоДобавить = Истина;
        
        Для Каждого ТекСерия Из СерииДиаграммыПредставление Цикл
            Для ТекИндекс = 1 По КолвоУдалить Цикл
                
                Если НадоДобавить Тогда
                    УдаленныеЗначения.Добавить(ТекСерия.Значение[0]);
                КонецЕсли;
                
                ТекСерия.Значение.Удалить(0);
                
            КонецЦикла;
            
            НадоДобавить = Ложь;
            Представление = СтрСоединить(ТекСерия.Значение, "\");
            Представление = СтрЗаменить(Представление, "\\", "\");
            СерииДиаграммыПредставление[ТекСерия.Ключ] = Представление;
            
        КонецЦикла;
                        
    КонецЕсли;
    
    Возврат УдаленныеЗначения;
    
КонецФункции

&НаСервере
Процедура РассчитатьАналитикуСерий(Результат)
    
    СерииАналитика = Новый Соответствие;
    
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        
        Если Выборка.Значение <> null Тогда
            
            ЗначенияСерии = СерииАналитика[Выборка.Серия];
            Если ЗначенияСерии = Неопределено Тогда
                ЗначенияСерии = Новый Массив;
                СерииАналитика.Вставить(Выборка.Серия, ЗначенияСерии);
            КонецЕсли;
            ЗначенияСерии.Добавить(Выборка.Значение);
            
        КонецЕсли;
        
    КонецЦикла;
    
    АнализДанных = Новый АнализДанных;
	АнализДанных.ТипАнализа = Тип("АнализДанныхОбщаяСтатистика");
        
    Для Каждого Серия Из Серии Цикл
        
        ЗначенияСерии = СерииАналитика[Серия.Серия];
        
        Если ЗначенияСерии <> Неопределено Тогда
            
            АнализДанных.ИсточникДанных = МассивВТаблицуЗначений(ЗначенияСерии);
            РезультатАнализа = АнализДанных.Выполнить();
            
            АналитикаЗначения = РезультатАнализа.НепрерывныеПоля.Значение;
            
            Серия.Минимум = АналитикаЗначения.Минимум;
            Серия.Максимум = АналитикаЗначения.Максимум;
            Серия.Среднее = АналитикаЗначения.Среднее;
            Серия.Медиана = АналитикаЗначения.Медиана;
            
        Иначе
            Серия.Минимум = 0;
            Серия.Максимум = 0;
            Серия.Среднее = 0;
            Серия.Медиана = 0;
        КонецЕсли;
        
    КонецЦикла;
        
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура Автомасштаб(Серии, ДляИзменения)
    
    Для Каждого Серия Из Серии Цикл
        
        Максимум = Серия.Максимум;
        Минимум = Серия.Минимум;
        Если Минимум < 0 Тогда
            Минимум = -Минимум;
            Если Минимум > Максимум Тогда
                Максимум = Минимум;
            КонецЕсли;
        КонецЕсли;
                
        Если Максимум >= 1 Тогда
            
            Порядок = СтрДлина(Формат(Цел(Максимум), "ЧН=0; ЧГ=0"));
            Серия.Масштаб = pow(10, 2 - Порядок);
            
        ИначеЕсли Максимум > 0 И Максимум < 1 Тогда
            
            Порядок = 0;
            Пока Максимум < 100 Цикл
                Порядок = Порядок + 1;
                Максимум = Максимум * 10;
            КонецЦикла;
            
            Серия.Масштаб = pow(10, Порядок - 1);
            
        КонецЕсли;
        
        Серия.МасштабСтрока = МасштабСтрока(Серия.Масштаб);
        
        Если НЕ ДляИзменения Тогда
            Серия.МасштабБыл = Серия.Масштаб;
        КонецЕсли;
        
    КонецЦикла;
    
КонецПроцедуры

&НаСервере
Функция МассивВТаблицуЗначений(Данные)
    
    ТЗн = Новый ТаблицаЗначений;
    ТЗн.Колонки.Добавить("Значение");
    Для Индекс = 0 По Данные.ВГраница() Цикл
        ТЗн.Добавить();
    КонецЦикла;
    
    ТЗн.ЗагрузитьКолонку(Данные, "Значение");
    
    Возврат ТЗн;
        
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СерииМасштаб(Серии)
    
    СерииМасштаб = Новый Соответствие;
    Для Каждого Серия Из Серии Цикл
        СвойстваСерии = Новый Структура("Масштаб, ФорматЗначения", Серия.Масштаб, Серия.ФорматЗначения);
        СерииМасштаб.Вставить(Серия.Серия, СвойстваСерии);
    КонецЦикла;
    
    Возврат СерииМасштаб;
       
КонецФункции

#КонецОбласти

&НаСервере
Функция УсловноеОформлениеСерии(Ссылка, Цвет)
    
    ЭлементОформления = УсловноеОформление.Элементы.Добавить();
    
    ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Серии.СерияУникальныйИдентификатор"); // имя поля
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; // либо задаем свой
    ЭлементОтбора.ПравоеЗначение = Строка(Ссылка.УникальныйИдентификатор());
    ЭлементОтбора.Использование = Истина;
    
    ЦветФона = ЭлементОформления.Оформление.Элементы.Найти("ЦветТекста");
    ЦветФона.Значение = Цвет;
    ЦветФона.Использование = Истина;
    
    ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
    ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("СерииЦветСтрока");
    ПолеОформления.Использование = Истина;
    
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция МасштабСтрока(Масштаб)
    
    Если Масштаб >= 1 Тогда
        Возврат " х" + Формат(Масштаб, "ЧДЦ=0");
    Иначе
        Возврат " х" + Формат(Масштаб, "ЧДЦ=" + Формат(СтрДлина(Формат(Масштаб, "ЧГ=0")) - 2, "ЧГ=0"));
    КонецЕсли;
    
КонецФункции

&НаСервере
Процедура ПрочитатьПараметры(ПараметрыДиаграммы)
    
    ФормаВыбораДанных = ПараметрыДиаграммы.ФормаВыбораДанных;
    ФункцияПолученияДанных = ПараметрыДиаграммы.ФункцияПолученияДанных;
    
    Если ПараметрыДиаграммы.Свойство("ТипДиаграммы") Тогда
        Диаграмма.ТипДиаграммы = ПараметрыДиаграммы.ТипДиаграммы;
        ТипДиаграммыТекущий = ПараметрыДиаграммы.ТипДиаграммы;
    Иначе
        ТипДиаграммыТекущий = ТипДиаграммы.График;
    КонецЕсли;
    
    Если ПараметрыДиаграммы.Свойство("ФорматИмениТочки") Тогда
        ФорматИмениТочки = ПараметрыДиаграммы.ФорматИмениТочки;
    КонецЕсли;
    
    Если ПараметрыДиаграммы.Свойство("ФорматЗначенийВПодписях") Тогда
        Диаграмма.ФорматЗначенийВПодписях = ПараметрыДиаграммы.ФорматЗначенийВПодписях;
        ФорматАналитики("ЧН=0;" + ПараметрыДиаграммы.ФорматЗначенийВПодписях);
    Иначе
        ФорматАналитики("ЧН=0;");
    КонецЕсли;
    
    Если ПараметрыДиаграммы.Свойство("ШкалаСерийФорматПодписей") Тогда
        Диаграмма.ОбластьПостроения.ШкалаСерий.ФорматПодписей = ПараметрыДиаграммы.ШкалаСерийФорматПодписей;
    КонецЕсли;

    Если ПараметрыДиаграммы.Свойство("ДатаНачала") И ПараметрыДиаграммы.Свойство("ДатаОкончания") Тогда
        ДатаНачала = ПараметрыДиаграммы.ДатаНачала;
        ДатаОкончания = ПараметрыДиаграммы.ДатаОкончания;
    Иначе
        ДатаНачала = ТекущаяДата() - 86400;
        ДатаОкончания = ТекущаяДата();
    КонецЕсли;
        
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьДиаграмму(Настройки)
    
    ЭтотОбъект.Серии.Очистить();
    
    Диаграмма.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Нет;
    Диаграмма.ЗаполнениеПодсказкиЗначений = ЗаполнениеПодсказкиЗначенийДиаграммы.ВсеЗначенияТочки;
    Диаграмма.ЗаполнениеПодсказкиЗначений = ЗаполнениеПодсказкиЗначенийДиаграммы.ОдноЗначение;
    Диаграмма.ОтображатьВсплывающуюИнформационнуюЛиниюТочек = ОтображатьВсплывающуюИнформационнуюЛиниюДиаграммы.Отображать;
    
    Если Настройки.Свойство("Ссылки") И Настройки.Ссылки.Количество() > 0 Тогда
        
        Палитра = Диаграмма.ПолучитьПалитру();
        Для Каждого Ссылка Из Настройки.Ссылки Цикл
            ДобавитьСерию(Диаграмма, Серии, Ссылка, Палитра);
        КонецЦикла;
        
    КонецЕсли;
    
    СформироватьПредставлениеСерий(ЭтотОбъект, Диаграмма, Серии);    
    
    Элементы.ТипДиаграммыТекущий.СписокВыбора.Добавить(ТипДиаграммы.График);
    Элементы.ТипДиаграммыТекущий.СписокВыбора.Добавить(ТипДиаграммы.ГрафикСНакоплением);
    Элементы.ТипДиаграммыТекущий.СписокВыбора.Добавить(ТипДиаграммы.ГрафикСОбластями);
    Элементы.ТипДиаграммыТекущий.СписокВыбора.Добавить(ТипДиаграммы.ГрафикСОбластямиИНакоплением);
       
КонецПроцедуры

&НаСервере
Процедура УсловноеОформлениеСерий()
    
    УсловноеОформление.Элементы.Очистить();
    
    ЭлементОформления = УсловноеОформление.Элементы.Добавить();
    
    ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Серии.Выделенная"); // имя поля
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; // либо задаем свой
    ЭлементОтбора.ПравоеЗначение = Ложь;
    ЭлементОтбора.Использование = Истина;
    
    ЦветФона = ЭлементОформления.Оформление.Элементы.Найти("ЦветТекста");
    ЦветФона.Значение = Новый Цвет(192, 192, 192);
    ЦветФона.Использование = Истина;
    
    ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
    ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("Серии");
    ПолеОформления.Использование = Истина;
    
    Для Каждого Серия Из Серии Цикл
        УсловноеОформлениеСерии(Серия.Серия, Серия.Цвет);
    КонецЦикла;
        
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСерию(Параметры)
    
    Серия = Диаграмма.УстановитьСерию(Параметры.Серия);
    
    Если Параметры.ОтображатьВДиаграмме Тогда
        Серия.ОтображатьГрафическоеПредставлениеДанныхВДиаграмме = ОтображениеВДиаграмме.Отображать;
        Серия.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная, Параметры.Толщина);
    Иначе
        Серия.ОтображатьГрафическоеПредставлениеДанныхВДиаграмме = ОтображениеВДиаграмме.НеОтображать;
        Серия.Линия = Новый Линия(ТипЛинииДиаграммы.НетЛинии, 1);
    КонецЕсли;
            
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделениеСерий()
    
    ВыделенныеЭлементы = Новый Массив;
    Для Каждого ТекСерия Из Серии Цикл
        Если ТекСерия.Выделенная Тогда
            ВыделенныеЭлементы.Добавить(Диаграмма.УстановитьСерию(ТекСерия.Серия));
        КонецЕсли;
    КонецЦикла;
    
    Элементы.Диаграмма.УстановитьВыделенныеЭлементы(ВыделенныеЭлементы);
    
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере(КомандаИмя = Неопределено)
    
    Данные = ЗагрузитьДанные();
    ВывестиДанные(Данные);
    УсловноеОформлениеСерий();    
    
    УстановитьШрифтУвеличить(КомандаИмя);
        
КонецПроцедуры

&НаСервере
Процедура ВывестиДанные(Результат)
    
    Диаграмма.Точки.Очистить();
    
    РассчитатьАналитикуСерий(Результат);
    
    Если Автомасштаб Тогда
        Автомасштаб(Серии, Ложь);
    КонецЕсли;
                
    СерииМасштаб = СерииМасштаб(Серии);
    
    ТочкиДиаграммы = Новый Соответствие;
    СерииДиаграммы = Новый Соответствие;
    ЕстьХотяБыОдноЗначение = Ложь;
    
    Выборка = Результат.Выбрать();
    ШрифтЗначения = Новый Шрифт(,,Истина);
    Пока Выборка.Следующий() Цикл
        
        ИндексТочкиДиаграммы = ТочкиДиаграммы[Выборка.Точка];
        Если ИндексТочкиДиаграммы = Неопределено Тогда
            
            Если ЗначениеЗаполнено(ФорматИмениТочки) Тогда
                ИмяТочки = Формат(Выборка.Точка, "ДФ='дд.ММ.гг ЧЧ:мм'");
            Иначе
                ИмяТочки = Строка(Выборка.Точка);
            КонецЕсли;
            
            ТочкаДиаграммы = Диаграмма.Точки.Добавить(ИмяТочки);
            ТочкаДиаграммы.Значение = Выборка.Точка;
            ИндексТочкиДиаграммы = Диаграмма.Точки.Индекс(ТочкаДиаграммы);
            ТочкиДиаграммы.Вставить(Выборка.Точка, ИндексТочкиДиаграммы);
            
        КонецЕсли;
        
        Если ЗначениеЗаполнено(Выборка.Серия) Тогда
            
            СвойствоСерии = СерииМасштаб[Выборка.Серия];
            
            СвойстваСерии = СерииДиаграммы[Выборка.Серия];
            Если СвойстваСерии = Неопределено Тогда
                
                СерияДиаграммы = Диаграмма.УстановитьСерию(Выборка.Серия);
                СвойстваСерии = Новый Структура("Индекс, Текст", Диаграмма.Серии.Индекс(СерияДиаграммы), СерияДиаграммы.Текст + "  ");
                
                СерииДиаграммы.Вставить(Выборка.Серия, СвойстваСерии);
                
            КонецЕсли;
            
            Подсказка = Подсказка(СвойстваСерии.Текст, Выборка.Значение, ШрифтЗначения, СвойствоСерии.ФорматЗначения);
            Диаграмма.УстановитьЗначение(ИндексТочкиДиаграммы, СвойстваСерии.Индекс, Выборка.Значение * СвойствоСерии.Масштаб,,Подсказка);
            ЕстьХотяБыОдноЗначение = Истина;
            
        КонецЕсли;
        
    КонецЦикла;
    
    Если НЕ ЕстьХотяБыОдноЗначение Тогда
        Диаграмма.УстановитьЗначение(Диаграмма.Точки[0], Диаграмма.Серии[0], Неопределено);
    КонецЕсли;
        
КонецПроцедуры

&НаСервере
Функция Подсказка(ИмяСерии, Значение, Шрифт, ФорматЗначения)
    
    ФорматированнаяСтрокаЗначение = Новый ФорматированнаяСтрока(Формат(Значение, ФорматЗначения), Шрифт);
    
    Возврат Новый ФорматированнаяСтрока(ИмяСерии, ФорматированнаяСтрокаЗначение);
    
КонецФункции

&НаСервере
Процедура УстановитьШрифтУвеличить(КомандаИмя)
    
    ГруппыЭлементов = Новый Массив;
    ГруппыЭлементов.Добавить(Элементы.ГруппаШапкаВерх);
    ГруппыЭлементов.Добавить(Элементы.ГруппаШапкаНиз);
    
    Для Каждого ТекГруппа Из ГруппыЭлементов Цикл
        Для Каждого Элемент Из ТекГруппа.ПодчиненныеЭлементы Цикл
            Если ТипЗнч(Элемент) = Тип("КнопкаФормы") Тогда
                Если КомандаИмя <> Неопределено И Элемент.ИмяКоманды = КомандаИмя Тогда
                    Элемент.Шрифт = Новый Шрифт(Элемент.Шрифт,,,Истина);
                Иначе
                    Элемент.Шрифт = Новый Шрифт(Элемент.Шрифт,,,Ложь);
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;
    КонецЦикла;
        
КонецПроцедуры

&НаСервере
Процедура ФорматАналитики(ФорматнаяСтрока)
    Элементы.СерииМинимум.Формат = ФорматнаяСтрока;
    Элементы.СерииМаксимум.Формат = ФорматнаяСтрока;
    Элементы.СерииСреднее.Формат = ФорматнаяСтрока;
    Элементы.СерииМедиана.Формат = ФорматнаяСтрока;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьМасштабСерий(Диаграмма, Серии)
    
    Для Каждого Строка Из Серии Цикл
        Если Строка.Масштаб <> Строка.МасштабБыл Тогда
            ИзменитьМасштабСерии(Диаграмма, Строка.Серия, Строка.Масштаб, Строка.МасштабБыл);
            Строка.МасштабБыл = Строка.Масштаб;
        КонецЕсли;
    КонецЦикла;
    
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьМасштабСерии(Диаграмма, Серия, Масштаб, МасштабБыл)
    
    СерияДиаграммы = Диаграмма.УстановитьСерию(Серия);
    
    Для Каждого ТочкаДиаграммы Из Диаграмма.Точки Цикл
        
        ЗначениеДиаграммы = Диаграмма.ПолучитьЗначение(ТочкаДиаграммы, СерияДиаграммы);
        
        Если ЗначениеДиаграммы.Значение <> Неопределено Тогда
            Диаграмма.УстановитьЗначение(ТочкаДиаграммы, СерияДиаграммы, (ЗначениеДиаграммы.Значение/МасштабБыл)*Масштаб,,ЗначениеДиаграммы.Подсказка);
        КонецЕсли;
        
    КонецЦикла;
        
КонецПроцедуры

&НаКлиенте
Процедура ВыборЦветаСерииЗавершение(Цвет, ДополнительныеПараметры) Экспорт
    
    Если Цвет <> Неопределено Тогда
        ТекДанные = Элементы.Серии.ТекущиеДанные;
        СерияДиаграммы = Диаграмма.УстановитьСерию(ТекДанные.Серия);
        СерияДиаграммы.Цвет = Цвет;
        ИзменитьУсловноеОформлениеСерии(ТекДанные.Серия, Цвет);
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура ИзменитьУсловноеОформлениеСерии(Ссылка, Цвет)
    
    Для Каждого ЭлементУсловногоОформления Из УсловноеОформление.Элементы Цикл
        
        Для Каждого ЭлементОтбора Из ЭлементУсловногоОформления.Отбор.Элементы Цикл
            Если ЭлементОтбора.ПравоеЗначение = Строка(Ссылка.УникальныйИдентификатор()) Тогда
                ЦветФона = ЭлементУсловногоОформления.Оформление.Элементы.Найти("ЦветТекста");
                ЦветФона.Значение = Цвет;
                Возврат;
            КонецЕсли;
        КонецЦикла;
                
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВПравку()
    
    ПериодПравки = Новый ФиксированнаяСтруктура(ПериодПредыдущий);
    БуферПериодов.Добавить(ПериодПравки);
    
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПравку()
    
    ИндексБуфер = БуферПериодов.ВГраница();
    КоличествоПравок = ?(ИндексБуфер > 8, 8, ИндексБуфер);
    
    Для ШагПравки = 0 По КоличествоПравок Цикл
        
        ПериодПравки = БуферПериодов[ИндексБуфер - ШагПравки];
        
        ШагПравкиЭлемент = Элементы["Правка" + (ШагПравки + 1)];
        ШагПравкиЭлемент.Заголовок = Строка(ПериодПравки.ДатаНачала) + " - " + ПериодПравки.ДатаОкончания;
        ШагПравкиЭлемент.Видимость = Истина;
        
    КонецЦикла;
    
    Для ШагПравкиВидимостьЛожь = ШагПравки По 8 Цикл
        Элементы["Правка" + (ШагПравкиВидимостьЛожь +1)].Видимость = Ложь;
    КонецЦикла;    
    
    Если БуферПериодов.Количество() > 0 Тогда
        Элементы.ПравкаШагНазад.Доступность = Истина;
    Иначе
        Элементы.ПравкаШагНазад.Доступность = Ложь;
    КонецЕсли;
            
КонецПроцедуры

&НаКлиенте
Процедура ШаговНазад(Шагов)
    
    ПериодУстановить = Неопределено;
    
    Для Индекс = 0 По Шагов - 1 Цикл
        ПериодОбновить = БуферПериодов[БуферПериодов.ВГраница()];
        БуферПериодов.Удалить(БуферПериодов.ВГраница());
    КонецЦикла;
    
    ОбновитьПравку();
    
    ОбновлятьПравку = Ложь;
    ДатаНачала = ПериодОбновить.ДатаНачала;
    ДатаОкончания = ПериодОбновить.ДатаОкончания;
    Обновить(Неопределено);
    ОбновлятьПравку = Истина;
    
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиЗакрытие(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
    
    Если РезультатЗакрытия <> Неопределено Тогда
        ЭтотОбъект.Диаграмма.Очистить();
        ЭтотОбъект.Диаграмма.Серии.Очистить();
        ЭтотОбъект.Диаграмма.Точки.Очистить();
        
        ЭтотОбъект.ИмяНастройки = РезультатЗакрытия.Наименование;
        ЗагрузитьНастройки(РезультатЗакрытия.Настройка);    
        
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки(Настройки)
    
    
    ПрочитатьПараметры(Настройки);
    ИнициализироватьДиаграмму(Настройки);
    ВывестиСерии();
    
КонецПроцедуры

&НаСервере
Процедура ВывестиСерии()
    
    Если Серии.Количество() > 0 Тогда
        Данные = ЗагрузитьДанные();
        ВывестиДанные(Данные);
        УсловноеОформлениеСерий();
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти
