&НаКлиенте
Перем НачалоМониторинга, БуферДампы, СерияРегистрация, СерияАрхивирование, СерияЭкспортАрхива;

&НаКлиенте
Перем ПорядокТочек, ИндексДерева;

&НаСервереБезКонтекста
Функция РезультатЗапросаВМассив(Результат)
	РезультатМассив = Новый Массив;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеСтроки = Новый Структура;
		
		Для Каждого ТекКолонка Из Результат.Колонки Цикл
			ДанныеСтроки.Вставить(ТекКолонка.Имя, Выборка[ТекКолонка.Имя]);
		КонецЦикла;
		
		РезультатМассив.Добавить(ДанныеСтроки);
	КонецЦикла;	
	
	Возврат РезультатМассив;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСостоянияДампов(ДатаСостояния, ВсеСостояния)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.Дампы
	|ГДЕ
	|	(ДатаЗавершенияОбработки >= &ДатаРегистрации
    |	ИЛИ ДатаЗавершенияОбработки = ДАТАВРЕМЯ(1, 1, 1))
    |   И ВариантДампа <> &ДляЗавершенияБезОбразованияДампа
	|	%УслДампУдаленБезОбработки 
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|";
	
	Если ВсеСостояния Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УслДампУдаленБезОбработки", "");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УслДампУдаленБезОбработки", "И СостояниеОбработкиДампа НЕ В (&ДампыНеОтображать)");
		ДампыНеОтображать = Новый Массив;
		ДампыНеОтображать.Добавить(Перечисления.СостоянияОбработкиДампа.ДампУдаленБезОбработки);
		ДампыНеОтображать.Добавить(Перечисления.СостоянияОбработкиДампа.ДампОбработанПользователем);
		
		Запрос.УстановитьПараметр("ДампыНеОтображать", ДампыНеОтображать);
	КонецЕсли;
    
    Запрос.УстановитьПараметр("ДляЗавершенияБезОбразованияДампа", Справочники.ВариантыДампов.ДляЗавершенияБезОбразованияДампа);
	Запрос.УстановитьПараметр("ДатаРегистрации", ДатаСостояния);
	Результат = Запрос.Выполнить();
	
	Данные = РезультатЗапросаВМассив(Результат);
	
	Возврат Данные;
КонецФункции

&НаСервереБезКонтекста
Процедура ИнициализироватьБуферДампов(БуферДампы, ПорядокТочек, ДатаСостояния)
	
	БуферДампы = Новый Соответствие;
	ПорядокТочек = Новый Массив;
		
	ДанныеДампов = ПолучитьСостоянияДампов(ДатаСостояния, Ложь);
	Для Каждого ТекДамп Из ДанныеДампов Цикл
		ИндексДампа =
			Формат(ТекДамп.Период - Дата(1,1,1), "ЧГ=0") + "_" +
			Строка(ТекДамп.ОбъектКонтроля.УникальныйИдентификатор()) + "_" +
			Строка(ТекДамп.ВариантДампа.УникальныйИдентификатор()) + "_" +
			Строка(ТекДамп.ИмяФайлаДампа) + "_" +
			Формат(ТекДамп.НомерДампа, "ЧГ=0");
			
		БуферДампы.Вставить(ИндексДампа, ТекДамп);
		ПорядокТочек.Добавить(ИндексДампа);
	КонецЦикла;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьБуферДампов(БуферДампы, ПорядокТочек, ДатаСостояния)
	
	ИндексыДамповУдаленныхБезОбработки = Новый Массив;
	
	ДампыНеОтображать = Новый Соответствие;
	ДампыНеОтображать.Вставить(Перечисления.СостоянияОбработкиДампа.ДампУдаленБезОбработки, Истина);
	ДампыНеОтображать.Вставить(Перечисления.СостоянияОбработкиДампа.ДампОбработанПользователем, Истина);
		
	ДанныеДампов = ПолучитьСостоянияДампов(ДатаСостояния, Истина);
	ИндексыДляОтображения = Новый Соответствие;
	Для Каждого ТекДамп Из ДанныеДампов Цикл
		ИндексДампа =
			Формат(ТекДамп.Период - Дата(1,1,1), "ЧГ=0") + "_" +
			Строка(ТекДамп.ОбъектКонтроля.УникальныйИдентификатор()) + "_" +
			Строка(ТекДамп.ВариантДампа.УникальныйИдентификатор()) + "_" +
			Строка(ТекДамп.ИмяФайлаДампа) + "_" +
			Формат(ТекДамп.НомерДампа, "ЧГ=0");
			
		ИндексыДляОтображения.Вставить(ИндексДампа, Истина);
		
		Если БуферДампы[ИндексДампа] = Неопределено Тогда
			БуферДампы.Вставить(ИндексДампа, ТекДамп);
			ПорядокТочек.Добавить(ИндексДампа);
		Иначе
			БуферДампы[ИндексДампа] = ТекДамп;
		КонецЕсли;
		
		Если ДампыНеОтображать[ТекДамп.СостояниеОбработкиДампа] <> Неопределено Тогда
			ИндексТочки = ПорядокТочек.Найти(ИндексДампа);
			Если ИндексТочки <> Неопределено Тогда
				ПорядокТочек.Удалить(ИндексТочки);
			КонецЕсли;
			
			ИндексыДамповУдаленныхБезОбработки.Добавить(ИндексДампа);
		КонецЕсли;
	КонецЦикла;
	
	// Найдем дампы, которые обработаны, но уже не должны отображаться на диаграмме
	// Время обработки ушло за левый край диаграммы
	ТочкаНаУдаление = Новый Массив;
	Для Каждого ТекДамп Из БуферДампы Цикл
		ИндексДампа = ТекДамп.Ключ;
		
		Если ИндексыДляОтображения[ИндексДампа] = Неопределено Тогда
			ТочкаНаУдаление.Добавить(ИндексДампа);
			
			ИндексТочки = ПорядокТочек.Найти(ИндексДампа);
			Если ИндексТочки <> Неопределено Тогда
				ПорядокТочек.Удалить(ИндексТочки);
			КонецЕсли;
			
			ИндексыДамповУдаленныхБезОбработки.Добавить(ИндексДампа);
		КонецЕсли;
	КонецЦикла;
		
	Возврат ИндексыДамповУдаленныхБезОбработки;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтотОбъект.ДиаграммаГантаДампов.АвтоОпределениеПолногоИнтервала = Ложь;
	ЭтотОбъект.ДиаграммаГантаДампов.ОтображатьПустыеЗначения = Ложь;
	ТекДата = ТекущаяДата();
	ЭтотОбъект.ДиаграммаГантаДампов.УстановитьПолныйИнтервал(ТекДата - 7200, ТекДата + 600);

	ЭтотОбъект.ДиаграммаГантаДампов.ОбластьПостроения.ШкалаВремени.Элементы[0].Видимость = Ложь;
	
	МеткаЧас = ЭтотОбъект.ДиаграммаГантаДампов.ОбластьПостроения.ШкалаВремени.Элементы.Добавить();
	МеткаЧас.Единица = ТипЕдиницыШкалыВремени.Час;
	МеткаЧас.Формат = "ДФ = 'дд.ММ.гг ЧЧ:мм'";
	
	МеткаМинута = ЭтотОбъект.ДиаграммаГантаДампов.ОбластьПостроения.ШкалаВремени.Элементы.Добавить();
	МеткаМинута.Единица = ТипЕдиницыШкалыВремени.Минута;
	МеткаМинута.Кратность = 10;
	
	Корень = ЭтотОбъект.ФайлыДампов.ПолучитьЭлементы();
	ВсегоОбрабатывается = Корень.Добавить();
	ВсегоОбрабатывается.ПредставлениеДампа = "Всего обрабатывается";
	
	ДопПараметрыОткрытия = Новый Структура;
	НачалоМониторинга = ТекущаяДата() - 7200;
	БуферДампы = "";
	ПорядокТочек = "";
	ИнициализироватьБуферДампов(БуферДампы, ПорядокТочек, НачалоМониторинга);
	ДопПараметрыОткрытия.Вставить("БуферДампы", БуферДампы);
	ДопПараметрыОткрытия.Вставить("ПорядокТочек", ПорядокТочек);
	
	ЭтотОбъект.Параметры.ДопПараметрыОткрытия = ДопПараметрыОткрытия;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиДампНаДиаграммуГанта(Дампы, ТекТочка, ТекДата)
	ТекДамп = Дампы[ТекТочка];
	ТочкаДиаграммы = ЭтотОбъект.ДиаграммаГантаДампов.УстановитьТочку(ТекТочка);
	
	ТочкаДиаграммы.Текст =
	Строка(ТекДамп.ВариантДампа) + " " +
	ТекДамп.ОбъектКонтроля + " " + 
	Формат(ТекДамп.РазмерФайла/1024/1024, "ЧДЦ=") + "МБ";
	
	Попытка
		Регистрация = ЭтотОбъект.ДиаграммаГантаДампов.ПолучитьЗначение(ТочкаДиаграммы, СерияРегистрация);
		РегистрацияИнтервал = Регистрация.Добавить();
		РегистрацияИнтервал.Начало = ТекДамп.Период;
		РегистрацияИнтервал.Конец = ТекДамп.Период + 60;
		
		Если ТекДамп.ДатаНачалаАрхивирования <> Дата(1,1,1) Тогда
			Архивирование = ЭтотОбъект.ДиаграммаГантаДампов.ПолучитьЗначение(ТочкаДиаграммы, СерияАрхивирование);
			АрхивированиеИнтервал = Архивирование.Добавить();
			АрхивированиеИнтервал.Начало = ТекДамп.ДатаНачалаАрхивирования;
			
			Если ТекДамп.ДатаЗавершенияАрхивирования <> Дата(1,1,1) Тогда
				АрхивированиеИнтервал.Конец = ТекДамп.ДатаЗавершенияАрхивирования;
			Иначе
				АрхивированиеИнтервал.Конец = ТекДата;
			КонецЕсли;
			Если АрхивированиеИнтервал.Конец - АрхивированиеИнтервал.Начало < 60 Тогда
				АрхивированиеИнтервал.Конец = АрхивированиеИнтервал.Начало + 60;
			КонецЕсли;
			
			Связь = РегистрацияИнтервал.Добавить(АрхивированиеИнтервал);
			Связь.ТипСвязи = ТипСвязиДиаграммыГанта.КонецНачало;
			Связь.Цвет = WebЦвета.Синий;
			
			Если ТекДамп.ДатаНачалаЭкспорта <> Дата(1,1,1) Тогда
				ЭкспортАрхива = ЭтотОбъект.ДиаграммаГантаДампов.ПолучитьЗначение(ТочкаДиаграммы, СерияЭкспортАрхива);
				ЭкспортАрхиваИнтервал = ЭкспортАрхива.Добавить();
				ЭкспортАрхиваИнтервал.Начало = ТекДамп.ДатаНачалаЭкспорта;
				Если ТекДамп.ДатаЗавершенияЭкспорта <> Дата(1,1,1) Тогда
					ЭкспортАрхиваИнтервал.Конец = ТекДамп.ДатаЗавершенияЭкспорта;
				Иначе
					ЭкспортАрхиваИнтервал.Конец = ТекДата;
				КонецЕсли;
				Если ЭкспортАрхиваИнтервал.Конец - ЭкспортАрхиваИнтервал.Начало < 60 Тогда
					ЭкспортАрхиваИнтервал.Конец = ЭкспортАрхиваИнтервал.Начало + 60;
				КонецЕсли;
				
				Связь = АрхивированиеИнтервал.Добавить(ЭкспортАрхиваИнтервал);
				Связь.ТипСвязи = ТипСвязиДиаграммыГанта.КонецНачало;
				Связь.Цвет = WebЦвета.Синий;
			КонецЕсли;
		КонецЕсли;
		
		Если ТекДамп.СостояниеОбработкиДампа = ПредопределенноеЗначение("Перечисление.СостоянияОбработкиДампа.ЗарегистрированоСозданиеДампа") Тогда
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.ДлительнаяОперацияЧасы;
		ИначеЕсли ТекДамп.СостояниеОбработкиДампа = ПредопределенноеЗначение("Перечисление.СостоянияОбработкиДампа.Архивируется") Тогда
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.ХранилищеНастроек;
		ИначеЕсли ТекДамп.СостояниеОбработкиДампа = ПредопределенноеЗначение("Перечисление.СостоянияОбработкиДампа.ЗавершеноАрхивирование") Тогда
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.ДлительнаяОперацияЧасы;
		ИначеЕсли ТекДамп.СостояниеОбработкиДампа = ПредопределенноеЗначение("Перечисление.СостоянияОбработкиДампа.ЗавершеноАрхивированиеДампУдален") Тогда
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.ДлительнаяОперацияЧасы;
		ИначеЕсли ТекДамп.СостояниеОбработкиДампа = ПредопределенноеЗначение("Перечисление.СостоянияОбработкиДампа.КопируетсяАрхив") Тогда
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.СохранитьНастройкиОтчета;
		ИначеЕсли ТекДамп.СостояниеОбработкиДампа = ПредопределенноеЗначение("Перечисление.СостоянияОбработкиДампа.ДампОбработанУспешно") Тогда
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.СинтаксическийКонтроль;
		ИначеЕсли ТекДамп.СостояниеОбработкиДампа = ПредопределенноеЗначение("Перечисление.СостоянияОбработкиДампа.ОшибкаПопыткиАрхивирования") Тогда
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.Предупреждение;
		ИначеЕсли ТекДамп.СостояниеОбработкиДампа = ПредопределенноеЗначение("Перечисление.СостоянияОбработкиДампа.ОшибкаПопыткиЭкспорта") Тогда
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.Предупреждение;
		ИначеЕсли ТекДамп.СостояниеОбработкиДампа = ПредопределенноеЗначение("Перечисление.СостоянияОбработкиДампа.ОшибкаАрхивирования") Тогда
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.Остановить;
		ИначеЕсли ТекДамп.СостояниеОбработкиДампа = ПредопределенноеЗначение("Перечисление.СостоянияОбработкиДампа.ОшибкаЭкспорта") Тогда
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.Остановить;
		ИначеЕсли ТекДамп.СостояниеОбработкиДампа = ПредопределенноеЗначение("Перечисление.СостоянияОбработкиДампа.ОшибкаУдаленияДампа") Тогда
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.Остановить;
		Иначе
			ТочкаДиаграммы.Картинка = БиблиотекаКартинок.ДлительнаяОперацияЧасы;
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ВывестиДампВДереве(Дампы, ТекТочка, ТекДата, ОбъектКонтроляВсегоОбрабатывается)
	ТекДамп = Дампы[ТекТочка];
	
	Если ИндексДерева[ТекДамп.ОбъектКонтроля] = Неопределено Тогда
		КореньЭлементы = ЭтотОбъект.ФайлыДампов.ПолучитьЭлементы()[0].ПолучитьЭлементы();
		ОбъектКонтроля = КореньЭлементы.Добавить();
		ИндексДерева.Вставить(ТекДамп.ОбъектКонтроля, ОбъектКонтроля.ПолучитьИдентификатор());
		
		ОбъектКонтроля.ПредставлениеДампа = ТекДамп.ОбъектКонтроля;
	Иначе
		ОбъектКонтроля = ЭтотОбъект.ФайлыДампов.НайтиПоИдентификатору(ИндексДерева[ТекДамп.ОбъектКонтроля]);
	КонецЕсли;
		
	Если ИндексДерева[ТекТочка] = Неопределено Тогда
		ОбъектКонтроляЭлементы = ОбъектКонтроля.ПолучитьЭлементы();
		ФайлДампа = ОбъектКонтроляЭлементы.Добавить();
		ИндексДерева.Вставить(ТекТочка, ФайлДампа.ПолучитьИдентификатор());
		
		ФайлДампа.ПредставлениеДампа = ТекДамп.ИмяФайлаДампа;
		ФайлДампа.Зарегистрирован = ТекДамп.Период;
	Иначе
		ФайлДампа = ЭтотОбъект.ФайлыДампов.НайтиПоИдентификатору(ИндексДерева[ТекТочка]);
	КонецЕсли;
	
	Если ОбъектКонтроляВсегоОбрабатывается[ТекДамп.ОбъектКонтроля] = Неопределено Тогда
		ОбъектКонтроляВсегоОбрабатывается.Вставить(ТекДамп.ОбъектКонтроля, 0);
	КонецЕсли;
	ОбъектКонтроляВсегоОбрабатывается[ТекДамп.ОбъектКонтроля] = ОбъектКонтроляВсегоОбрабатывается[ТекДамп.ОбъектКонтроля] + ТекДамп.РазмерФайла;	
	
	ФайлДампа.РазмерДампа = ТекДамп.РазмерФайла/1024/1024;
	ФайлДампа.СтатусОбработки = ТекДамп.СостояниеОбработкиДампа;
	
	ФайлДампа.НачалоАрхивирования = ТекДамп.ДатаНачалаАрхивирования;
	ФайлДампа.НачалоЭкспорта = ТекДамп.ДатаНачалаЭкспорта;
	
	ДатаНачала = ?(ТекДамп.ДатаНачалаАрхивирования = Дата(1,1,1), ТекДата, ТекДамп.ДатаНачалаАрхивирования);
	ДатаЗавершения = ?(ТекДамп.ДатаЗавершенияАрхивирования = Дата(1,1,1), ТекДата, ТекДамп.ДатаЗавершенияАрхивирования);
	ДлительностьАрхивирования = ДатаЗавершения - ДатаНачала;
	Если ДлительностьАрхивирования < 86400 Тогда
		ФайлДампа.ДлительностьАрхивирования = Формат(Дата(1, 1, 1) + ДлительностьАрхивирования, "ДФ = 'ЧЧ'' ч '' мм'' мин'' сс'' сек'''");
	Иначе
		ФайлДампа.ДлительностьАрхивирования = Формат(Дата(1, 1, 1) + ДлительностьАрхивирования - 86400, "ДФ = 'дд '' день'' ЧЧ'' ч '' мм'' мин'' сс'' сек'''")
	КонецЕсли;
	
	ДатаНачала = ?(ТекДамп.ДатаНачалаЭкспорта = Дата(1,1,1), ТекДата, ТекДамп.ДатаНачалаЭкспорта);
	ДатаЗавершения = ?(ТекДамп.ДатаЗавершенияЭкспорта = Дата(1,1,1), ТекДата, ТекДамп.ДатаЗавершенияЭкспорта);
	ДлительностьЭкспорта = ДатаЗавершения - ДатаНачала;
	Если ДлительностьАрхивирования < 86400 Тогда
		ФайлДампа.ДлительностьЭкспорта = Формат(Дата(1, 1, 1) + ДлительностьЭкспорта, "ДФ = 'ЧЧ'' ч '' мм'' мин'' сс'' сек'''");
	Иначе
		ФайлДампа.ДлительностьЭкспорта = Формат(Дата(1, 1, 1) + ДлительностьЭкспорта - 86400, "ДФ = 'дд '' день'' ЧЧ'' ч '' мм'' мин'' сс'' сек'''")
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиИтоги(ОбъектКонтроляВсегоОбрабатывается)
	ВсегоПоОбъектам = 0;
	Для Каждого ТекОбъект Из ОбъектКонтроляВсегоОбрабатывается Цикл
		ВсегоПоОбъектам = ВсегоПоОбъектам + ТекОбъект.Значение;
		
		ОбъектКонтроля = ЭтотОбъект.ФайлыДампов.НайтиПоИдентификатору(ИндексДерева[ТекОбъект.Ключ]);
		ОбъектКонтроля.РазмерДампа = ТекОбъект.Значение/1024/1024;
	КонецЦикла;
	
	Корень = ЭтотОбъект.ФайлыДампов.ПолучитьЭлементы()[0];	
	Корень.РазмерДампа = ВсегоПоОбъектам/1024/1024;
КонецПроцедуры

&НаКлиенте
Процедура ВывестиДампы(Дампы, ПорядокТочек, ИндексыДамповУдаленныхБезОбработки)
	ЭтотОбъект.ДиаграммаГантаДампов.Обновление = Ложь;
	
	ЭтотОбъект.ДиаграммаГантаДампов.Точки.Очистить();
	ТекДата = ТекущаяДата();
	
	
	ОбъектКонтроляВсегоОбрабатывается = Новый Соответствие;
	
	Для Каждого ТекТочка Из ПорядокТочек Цикл
		ВывестиДампНаДиаграммуГанта(Дампы, ТекТочка, ТекДата);
		ВывестиДампВДереве(Дампы, ТекТочка, ТекДата, ОбъектКонтроляВсегоОбрабатывается);
	КонецЦикла;
	
	ВывестиИтоги(ОбъектКонтроляВсегоОбрабатывается);
	
	Для Каждого ТекИндекс Из ИндексыДамповУдаленныхБезОбработки Цикл
		ИдентификаторДерева = ИндексДерева[ТекИндекс];
		Если ИдентификаторДерева <> Неопределено Тогда
			ЭлементДерева = ЭтотОбъект.ФайлыДампов.НайтиПоИдентификатору(ИдентификаторДерева);
			Если ЭлементДерева <> Неопределено Тогда
				РодительЭлемента = ЭлементДерева.ПолучитьРодителя();
				ЭлементыРодителя = РодительЭлемента.ПолучитьЭлементы();
				ЭлементыРодителя.Удалить(ЭлементыРодителя.Индекс(ЭлементДерева));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
			
	ЭтотОбъект.ДиаграммаГантаДампов.Обновление = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИндексДерева = Новый Соответствие;
		
	БуферДампы = ЭтотОбъект.Параметры.ДопПараметрыОткрытия.БуферДампы;
	ПорядокТочек = ЭтотОбъект.Параметры.ДопПараметрыОткрытия.ПорядокТочек;
	ВывестиДампы(БуферДампы, ПорядокТочек, Новый Массив);
	
	СерияРегистрация = ЭтотОбъект.ДиаграммаГантаДампов.УстановитьСерию("Регистрация");
	СерияАрхивирование = ЭтотОбъект.ДиаграммаГантаДампов.УстановитьСерию("Архивирование");
	СерияЭкспортАрхива =  ЭтотОбъект.ДиаграммаГантаДампов.УстановитьСерию("Экспорт");
	
	ПодключитьОбработчикОжидания("Онлайн", 5);
	
КонецПроцедуры

&НаКлиенте
Процедура Онлайн()
	ЭтотОбъект.ДиаграммаГантаДампов.Обновление = Ложь;
	
	ТекДата = ТекущаяДата();
	ЭтотОбъект.ДиаграммаГантаДампов.УстановитьПолныйИнтервал(ТекДата - 7200, ТекДата + 600);
	НачалоМониторинга = ТекДата - 7200;
	ИндексыДамповУдаленныхБезОбработки = ОбновитьБуферДампов(БуферДампы, ПорядокТочек, НачалоМониторинга);
	ВывестиДампы(БуферДампы, ПорядокТочек, ИндексыДамповУдаленныхБезОбработки);
	
	ЭтотОбъект.ДиаграммаГантаДампов.Обновление = Истина;
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьКлючДампа(Дамп)
	ЗначениеКлюча = Новый Структура("Период, ОбъектКонтроля, ВариантДампа, ИмяФайлаДампа, НомерДампа");
	ЗначениеКлюча.Период = Дамп.Период;
	ЗначениеКлюча.ОбъектКонтроля = Дамп.ОбъектКонтроля;
	ЗначениеКлюча.ВариантДампа = Дамп.ВариантДампа;
	ЗначениеКлюча.ИмяФайлаДампа = Дамп.ИмяФайлаДампа;
	ЗначениеКлюча.НомерДампа = Дамп.НомерДампа;
	
	КлючЗаписи = РегистрыСведений.Дампы.СоздатьКлючЗаписи(ЗначениеКлюча);
	
	Возврат КлючЗаписи;
КонецФункции

&НаСервереБезКонтекста
Процедура ЗакрытьОбработкуДампа(Дамп)
	
	МенеджерЗаписи = РегистрыСведений.Дампы.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = Дамп.Период;
	МенеджерЗаписи.ОбъектКонтроля = Дамп.ОбъектКонтроля;
	МенеджерЗаписи.ВариантДампа = Дамп.ВариантДампа;
	МенеджерЗаписи.ИмяФайлаДампа = Дамп.ИмяФайлаДампа;
	МенеджерЗаписи.НомерДампа = Дамп.НомерДампа;
	
	МенеджерЗаписи.Прочитать();
	
	МенеджерЗаписи.Обрабатывается = Ложь;
	МенеджерЗаписи.СостояниеОбработкиДампа = Перечисления.СостоянияОбработкиДампа.ДампОбработанПользователем;
	МенеджерЗаписи.ДатаЗавершенияОбработки = ТекущаяДата();
	
	МенеджерЗаписи.Записать(Истина);
	
	Дамп.СостояниеОбработкиДампа = Перечисления.СостоянияОбработкиДампа.ДампОбработанПользователем;
КонецПроцедуры


&НаКлиенте
Процедура ЗакрытьОбработкуДампаПользователем(Команда)
	Для Каждого ТекСтрока Из ИндексДерева Цикл
		Если ТекСтрока.Значение = ЭтотОбъект.Элементы.ФайлыДампов.ТекущаяСтрока Тогда
			Дамп = БуферДампы[ТекСтрока.Ключ];
			ЗакрытьОбработкуДампа(Дамп);
			БуферДампы[ТекСтрока.Ключ] = Дамп;
			Онлайн();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДамп(Команда)
	Для Каждого ТекСтрока Из ИндексДерева Цикл
		Если ТекСтрока.Значение = ЭтотОбъект.Элементы.ФайлыДампов.ТекущаяСтрока Тогда
			Дамп = БуферДампы[ТекСтрока.Ключ];
			
			КлючЗаписи = ПолучитьКлючДампа(Дамп);
			ПараметрыОткрытия = Новый Структура("ТекущаяСтрока", КлючЗаписи);
			ОткрытьФорму("РегистрСведений.Дампы.ФормаСписка", ПараметрыОткрытия,,Новый УникальныйИдентификатор());
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

