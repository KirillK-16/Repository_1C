#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Перем МасивДляПеретаскивания;
&НаКлиенте
Перем ТекущаяКолонка;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ОбъектыЗаполненияПараметров") Тогда
		ОбъектыЗаполненияПараметров.Загрузить(Параметры.ОбъектыЗаполненияПараметров.Выгрузить());
	КонецЕсли;	
	
	Если Параметры.Свойство("СопоставлениеШаблоновОборудования") Тогда
		СопоставлениеШаблоновОборудования.Загрузить(Параметры.СопоставлениеШаблоновОборудования.Выгрузить());
	КонецЕсли;	
	
	Если Параметры.Свойство("ЗаготовкиЭкземпляровСценариев") Тогда
		ЗаготовкиЭкземпляровСценариев.Загрузить(Параметры.ЗаготовкиЭкземпляровСценариев.Выгрузить());
	КонецЕсли;	
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	Таб.ИмяШаблона КАК ИмяШаблона
	                      |ПОМЕСТИТЬ ВременнаяТаблицаДляВыбора1
	                      |ИЗ
	                      |	&ОбъектыЗаполненияПараметров КАК Таб
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Таб.Шаблон КАК ИмяШаблона
	                      |ПОМЕСТИТЬ ВременнаяТаблицаДляВыбора2
	                      |ИЗ
	                      |	&СопоставлениеШаблоновОборудования КАК Таб
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
						  |	Истина КАК Пометка,
						  |	0 КАК ИндексКартинки,
	                      |	ВременнаяТаблицаДляВыбора1.ИмяШаблона КАК ИмяШаблона
	                      |ИЗ
	                      |	ВременнаяТаблицаДляВыбора1 КАК ВременнаяТаблицаДляВыбора1
	                      |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ
	                      |	Истина,
						  |	1,
						  |	ВременнаяТаблицаДляВыбора2.ИмяШаблона
	                      |ИЗ
	                      |	ВременнаяТаблицаДляВыбора2 КАК ВременнаяТаблицаДляВыбора2
						  |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ
	                      |	Истина,
						  |	2,
						  |	""# Все машины""
						  |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ ВременнаяТаблицаДляВыбора1
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ ВременнаяТаблицаДляВыбора2");
	
	Запрос.УстановитьПараметр("ОбъектыЗаполненияПараметров", ОбъектыЗаполненияПараметров.Выгрузить());
	Запрос.УстановитьПараметр("СопоставлениеШаблоновОборудования", СопоставлениеШаблоновОборудования.Выгрузить());
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	КолонкиРеквизиты = ЗаготовкиЭкземпляровСценариев.Выгрузить().Колонки;
	
	Для Каждого Колонка Из КолонкиРеквизиты Цикл
		Если Колонка.Имя <> "УникальныйИдентификатор"
			И Колонка.Имя <> "ПорядковыйНомер"
			И Колонка.Имя <> "Изменен" Тогда
			СтрокаРеквизита = ТаблицаРезультат.Добавить();
			СтрокаРеквизита.ИндексКартинки = 3;
			СтрокаРеквизита.ИмяШаблона = Колонка.Имя;
			СтрокаРеквизита.Пометка = Истина;
		КонецЕсли;	
	КонецЦикла;	
	ТаблицаРезультат.Сортировать("ИндексКартинки УБЫВ, ИмяШаблона");
	
	СписокПараметровДляЗаполнения.Загрузить(ТаблицаРезультат);
КонецПроцедуры

&НаКлиенте
Процедура СПервойСтраницы(Команда)
	Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.ГруппаСтраницаПодбора;
	Элементы.СписокПараметровДляЗаполненияВыбранные.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Пометка", Истина));
КонецПроцедуры

&НаКлиенте
Процедура СписокПараметровДляЗаполненияВыбранныеПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.СписокПараметровДляЗаполненияВыбранные.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.ИндексКартинки = 0 Тогда
			Элементы.ГруппаПриемникиДанных.ТекущаяСтраница = Элементы.ГруппаШаблоныПараметров;
			Элементы.ОбъектыЗаполненияПараметров.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("ИмяШаблона", ТекущиеДанные.ИмяШаблона));
		ИначеЕсли ТекущиеДанные.ИндексКартинки = 1 Или ТекущиеДанные.ИндексКартинки = 2 Тогда
			Элементы.ГруппаПриемникиДанных.ТекущаяСтраница = Элементы.ГруппаШаблоныОборудования;
			Если ТекущиеДанные.ИндексКартинки = 1 Тогда
				Элементы.СопоставлениеШаблоновОборудования.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Шаблон", ТекущиеДанные.ИмяШаблона));
			Иначе
				Элементы.СопоставлениеШаблоновОборудования.ОтборСтрок = Неопределено;
			КонецЕсли;	
		Иначе	
			Элементы.ГруппаПриемникиДанных.ТекущаяСтраница = Элементы.ГруппаЗначенияРеквизитов;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Для каждого Строка Из СписокПараметровДляЗаполнения Цикл
		Строка.Пометка = Истина;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура НеВыбратьВсе(Команда)
	Для каждого Строка Из СписокПараметровДляЗаполнения Цикл
		Строка.Пометка = Ложь;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуСПараметрами(Команда)
	ПараметрыЗакрытия = Новый Структура("ОбъектыЗаполненияПараметров, СопоставлениеШаблоновОборудования, ЗаготовкиЭкземпляровСценариев", ОбъектыЗаполненияПараметров, СопоставлениеШаблоновОборудования, ЗаготовкиЭкземпляровСценариев);
	Закрыть(ПараметрыЗакрытия);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРедактированияЗначения(СпособЗаполнения)
	РаботаСоСценариямиАвтоматизацииКлиент.УстановитьРежимРедактированияЗначения(СпособЗаполнения, Элементы.ОбъектыЗаполненияПараметровОтносительнаяСсылкаНаМетаданные, Элементы.ОбъектыЗаполненияПараметровОбъект); 
КонецПроцедуры	

&НаКлиенте
Процедура ОбъектыЗаполненияПараметровПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.ОбъектыЗаполненияПараметров.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		УстановитьРежимРедактированияЗначения(ТекДанные.СпособЗаполнения);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыЗаполненияПараметровСпособЗаполненияПриИзменении(Элемент)
	ПриИзмененииПриродыШаблона();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыЗаполненияПараметровОтносительнаяСсылкаНаМетаданныеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	РаботаСоСценариямиАвтоматизацииКлиент.ОбъектыЗаполненияПараметровОтносительнаяСсылкаНаМетаданныеНачалоВыбора(ЭталонныйСценарий, Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыЗаполненияПараметровРеквизитПриИзменении(Элемент)
	ТекущиеДанныеСтроки = Элементы.ОбъектыЗаполненияПараметров.ТекущиеДанные;
	Если ТекущиеДанныеСтроки <> Неопределено Тогда
		РаботаСоСценариямиАвтоматизацииКлиент.ЗаполнитьЗначениеПараметраПоДаннымОбъекта(ТекущиеДанныеСтроки);
		ТекущиеДанныеСтроки.Изменен = Истина;
		
		ШаблоныЭтогоЭкземпляра = ОбъектыЗаполненияПараметров.НайтиСтроки(Новый Структура("УникальныйИдентификатор", ТекущиеДанныеСтроки.УникальныйИдентификатор));
		
		РаботаСоСценариямиАвтоматизацииКлиент.ВыполнитьПересчетСоставныхПараметров(ТекущиеДанныеСтроки, ШаблоныЭтогоЭкземпляра);
		Для каждого Строка Из ШаблоныЭтогоЭкземпляра Цикл
			Если Строка.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.РучнойВвод") 
				И СтрНайти(Строка.Объект, ТекущиеДанныеСтроки.ИмяШаблона) <> 0 Тогда
				РаботаСоСценариямиАвтоматизацииКлиент.ВыполнитьПересчетСоставныхПараметров(Строка, ШаблоныЭтогоЭкземпляра);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПриродыШаблона()
	ТекДанные = Элементы.ОбъектыЗаполненияПараметров.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ШаблоныЭтогоЭкземпляра = ОбъектыЗаполненияПараметров.НайтиСтроки(Новый Структура("УникальныйИдентификатор", ТекДанные.УникальныйИдентификатор));
		
		РаботаСоСценариямиАвтоматизацииКлиент.ПриИзмененииПриродыШаблона(ТекДанные, ШаблоныЭтогоЭкземпляра);
		УстановитьРежимРедактированияЗначения(ТекДанные.СпособЗаполнения);
		
		Модифицированность = Истина;
		ТекДанные.Изменен = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВводСписком(Команда)  
	ТекПараметр = Элементы.СписокПараметровДляЗаполненияВыбранные.ТекущиеДанные;

	Если ТекПараметр <> Неопределено Тогда
		Оповещение = Новый ОписаниеОповещения("ОбработатьРезультатВыбораПараметров", ЭтотОбъект);
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ИмяШаблона", ТекПараметр.ИмяШаблона);
		ПараметрыОткрытия.Вставить("ОбъектыЗаполненияПараметров", ОбъектыЗаполненияПараметров);
		ПараметрыОткрытия.Вставить("ЗаготовкиЭкземпляровСценариев",  ЗаготовкиЭкземпляровСценариев);

		ОткрытьФорму("Обработка.МастерСозданияЭкземпляровСценария.Форма.ФормаВводаСписком", ПараметрыОткрытия, ЭтотОбъект,,,,Оповещение);
	КонецЕсли;	
КонецПроцедуры

&НаСервере                                                                                               
Процедура ОбработатьРезультатВыбораПараметров(ВозвращенныеПараметры, ДополнительныеПараметры) Экспорт
	Если ВозвращенныеПараметры <> Неопределено Тогда
		Если ВозвращенныеПараметры.ПараметрыСписком.Количество() <> 0 Тогда
			ПараметрыДляЗаполнения = ВозвращенныеПараметры.ПараметрыСписком.ВыгрузитьЗначения();
		Иначе	
			ПараметрыДляЗаполнения = СтрРазделить(СтрЗаменить(ВозвращенныеПараметры.ПараметрыСтрокой, " ", ""),",");
		КонецЕсли;
	
		// надо выбирать что-то одно...
		ИмяШаблона = ВозвращенныеПараметры.ИмяШаблона;
		КолВоПараметров = ПараметрыДляЗаполнения.Количество();
		Если ИмяШаблона = "# Все машины" Тогда
			Если КолВоПараметров = 1 Или КолВоПараметров =  ЗаготовкиЭкземпляровСценариев.Количество() Тогда
				Итератор = 0;
				Для каждого Строка Из ЗаготовкиЭкземпляровСценариев Цикл
					НайденныеСтроки = СопоставлениеШаблоновОборудования.НайтиСтроки(Новый Структура("УникальныйИдентификатор", Строка.УникальныйИдентификатор));
					ТаблицаДляЗаполнения = СопоставлениеШаблоновОборудования.Выгрузить(НайденныеСтроки);
					Если КолВоПараметров = 1 Тогда
						РаботаСоСценариямиАвтоматизацииМассовоеСоздание.ВыполнитьСопоставлениеОборудованияПоГруппировочнойЕдинице(ПараметрыДляЗаполнения[0].СоставГруппы, ТаблицаДляЗаполнения);
					Иначе
						РаботаСоСценариямиАвтоматизацииМассовоеСоздание.ВыполнитьСопоставлениеОборудованияПоГруппировочнойЕдинице(ПараметрыДляЗаполнения[Итератор].СоставГруппы, ТаблицаДляЗаполнения);
						Итератор = Итератор + 1;
					КонецЕсли;
					Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
						НайденнаяСтрока.РеальноеЗначение = ТаблицаДляЗаполнения.Найти(НайденнаяСтрока.Шаблон).РеальноеЗначение;
					КонецЦикла;	
				КонецЦикла;	
			Иначе
				// бросить исключение
			КонецЕсли; 	
		ИначеЕсли ТипЗнч(ИмяШаблона) <> Тип("СправочникСсылка.ШаблоныЕдиницАвтоматизации") Тогда
			НайденныеСтроки = ОбъектыЗаполненияПараметров.НайтиСтроки(Новый Структура("ИмяШаблона", ИмяШаблона));
			Если НайденныеСтроки.Количество() > 0 Тогда
				Если КолВоПараметров = 1 Или КолВоПараметров = НайденныеСтроки.Количество() Тогда
					Итератор = 0;
					Для Каждого Строка Из НайденныеСтроки Цикл
						Если КолВоПараметров = 1 Тогда
							Строка.Объект = ПараметрыДляЗаполнения[0];
						Иначе
							Строка.Объект = ПараметрыДляЗаполнения[Итератор];
							Итератор = Итератор + 1;
						КонецЕсли;
						РаботаСоСценариямиАвтоматизацииСервер.ЗаполнитьЗначениеПараметраПоДаннымОбъекта(Строка);
					КонецЦикла;	
					Для Каждого Строка Из НайденныеСтроки Цикл
						Строка.Значение = РаботаСоСценариямиАвтоматизацииКлиентСервер.ТрансляцияСоставногоПараметра(Строка.Объект, НайденныеСтроки);
					КонецЦикла;	
				Иначе
					// бросить исключение
				КонецЕсли; 
			Иначе //это заполняется реквизит
				Если КолВоПараметров = 1 Или КолВоПараметров = ЗаготовкиЭкземпляровСценариев.Количество() Тогда
					Итератор = 0;
					Для Каждого Строка Из ЗаготовкиЭкземпляровСценариев Цикл
						Если КолВоПараметров = 1 Тогда
							Строка[ИмяШаблона] = ПараметрыДляЗаполнения[0];
						Иначе
							Строка[ИмяШаблона] = ПараметрыДляЗаполнения[Итератор];
							Итератор = Итератор + 1;
						КонецЕсли;
					КонецЦикла;
				Иначе
					// бросить исключение
				КонецЕсли;	
			КонецЕсли; 
		Иначе
			НайденныеСтроки = СопоставлениеШаблоновОборудования.НайтиСтроки(Новый Структура("Шаблон", ИмяШаблона));
			
			Если КолВоПараметров = 1 Или КолВоПараметров = НайденныеСтроки.Количество() Тогда
				Итератор = 0;
				Для Каждого Строка Из НайденныеСтроки Цикл
					Если КолВоПараметров = 1 Тогда
						Строка.РеальноеЗначение = ПараметрыДляЗаполнения[0];
					Иначе
						Строка.РеальноеЗначение = ПараметрыДляЗаполнения[Итератор];
						Итератор = Итератор + 1;
					КонецЕсли;
				КонецЦикла;	
			Иначе
				// бросить исключение
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СПервойСтраницы(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаФормыОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	Для Каждого ЭлементМассива Из МасивДляПеретаскивания Цикл
		Если ЭтотОбъект[Элемент.Имя][ЭлементМассива][ТекущаяКолонка] <> ПараметрыПеретаскивания.Значение[0][ТекущаяКолонка] Тогда
			ЭтотОбъект[Элемент.Имя][ЭлементМассива][ТекущаяКолонка] = ПараметрыПеретаскивания.Значение[0][ТекущаяКолонка];
			ЭтотОбъект[Элемент.Имя][ЭлементМассива].Изменен = Истина;
			Если Элемент.Имя = "ОбъектыЗаполненияПараметров" Тогда
				РаботаСоСценариямиАвтоматизацииКлиент.ЗаполнитьЗначениеПараметраПоДаннымОбъекта(ЭтотОбъект[Элемент.Имя][ЭлементМассива]);
				ШаблоныЭтогоЭкземпляра = ОбъектыЗаполненияПараметров.НайтиСтроки(Новый Структура("УникальныйИдентификатор", ЭтотОбъект[Элемент.Имя][ЭлементМассива].УникальныйИдентификатор));
				
				РаботаСоСценариямиАвтоматизацииКлиент.ВыполнитьПересчетСоставныхПараметров(ЭтотОбъект[Элемент.Имя][ЭлементМассива], ШаблоныЭтогоЭкземпляра);
				Для каждого Строка Из ШаблоныЭтогоЭкземпляра Цикл
					Если Строка.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.РучнойВвод") 
						И СтрНайти(Строка.Объект, ЭтотОбъект[Элемент.Имя][ЭлементМассива].ИмяШаблона) <> 0 Тогда
						РаботаСоСценариямиАвтоматизацииКлиент.ВыполнитьПересчетСоставныхПараметров(Строка, ШаблоныЭтогоЭкземпляра);
					КонецЕсли;	
				КонецЦикла;	
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаФормыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Элемент = МасивДляПеретаскивания.Найти(Строка);
	Если Элемент = Неопределено Тогда
		МасивДляПеретаскивания.Добавить(Строка);
	Иначе
		МасивДляПеретаскивания.Удалить(Элемент);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция  ТаблицаФормыНачалоПеретаскиванияНаСервере(ИмяЭлемента)
	Возврат Элементы[ИмяЭлемента].ТекущийЭлемент.ПутьКДанным;
КонецФункции

&НаКлиенте
Процедура ТаблицаФормыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	Если Не Элемент.ТекущийЭлемент.ТолькоПросмотр Тогда
		МасивДляПеретаскивания = Новый Массив;
		ТекущаяКолонка = ТаблицаФормыНачалоПеретаскиванияНаСервере(Элемент.Имя);
		ТекущаяКолонка = СтрЗаменить(ТекущаяКолонка, Элемент.Имя + ".", "");
	Иначе
		Выполнение = Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеШаблоновОборудованияРеальноеЗначениеПриИзменении(Элемент)
	ТекДанные = Элементы.СопоставлениеШаблоновОборудования.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ТекДанные.Изменен = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗаготовкиЭкземпляровСценариевРеквизитПриИзменении(Элемент)
	ТекДанные = Элементы.ЗаготовкиЭкземпляровСценариев.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ТекДанные.Изменен = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыЗаполненияПараметровОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекДанные = Элементы.ОбъектыЗаполненияПараметров.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ТекДанные.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.РучнойВвод") Тогда
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ОбработатьРезультатРедактированияВыражения", ЭтотОбъект);
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("СписокШаблонов", Новый СписокЗначений);
		ПараметрыОткрытия.Вставить("ТекущееЗначение", Элемент.ТекстРедактирования);
		
		ДанныеВыбора = Элемент.ТекстРедактирования;
			
		Для Каждого Строка Из ОбъектыЗаполненияПараметров Цикл
			ПараметрыОткрытия.СписокШаблонов.Добавить(Строка.ИмяШаблона);
		КонецЦикла;	
		
		ОткрытьФорму("ОбщаяФорма.ФормированиеСоставногоПараметраСценария", ПараметрыОткрытия, ЭтотОбъект,,,,Оповещение);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатРедактированияВыражения(ВозвращенныеПараметры, ДополнительныеПараметры) Экспорт
	Если ВозвращенныеПараметры <> Неопределено И ВозвращенныеПараметры.Свойство("РезультирующееВыражение") Тогда
		ТекДанные = Элементы.ОбъектыЗаполненияПараметров.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			ТекДанные.Объект = ВозвращенныеПараметры.РезультирующееВыражение;
			ТекДанные.Значение = РаботаСоСценариямиАвтоматизацииКлиентСервер.ТрансляцияСоставногоПараметра(Строка(ТекДанные.Объект), ОбъектыЗаполненияПараметров);
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ТаблицаФормыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти