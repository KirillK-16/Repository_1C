&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    Если Объект.ПроверятьТекущееСостояние Тогда
		ПодключитьОбработчикОжидания("ПолучитьТекущееСостояние", 1);
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТекущееСостояние()
	ТекущееСостояние = ПолучитьТекущееСостояниеНаСервере();
	
	Если ТекущееСостояние <> Неопределено Тогда
		Объект.ТекущееЗначение = ТекущееСостояние.ТекущееЗначение;
		Объект.ХодВыполнения = ТекущееСостояние.Комментарий;
		
		Если ТекущееСостояние.ВерсияЧисло <> Неопределено Тогда
			Если ТекущееСостояние.ТекущееЗначение = ТекущееСостояние.МаксимальноеЗначение Тогда
                Если ТекущееСостояние.Версия = Объект.КрайняяВерсияОбновления Тогда
                    Если ТекущееСостояние.ЗавершеноОбновление Тогда
                        Объект.ТекущаяИнформация = НСтр("ru = 'Информационная база успешно обновлена до версии '") + ТекущееСостояние.Версия;
                    Иначе
                        Объект.ТекущаяИнформация = НСтр("ru = 'Идет обновление информационной базы до версии '") + ТекущееСостояние.Версия;
                    КонецЕсли;
                    Объект.ЭтоПервыйЗапуск = Ложь;
                Иначе
                    Объект.ТекущаяИнформация = НСтр("ru = 'Обновление информационной базы не началось!
					|Возможно установлена блокировка выполнения регламентных заданий!'");
                    Объект.ХодВыполнения = "";
				КонецЕсли;
			Иначе
				Если ТекущееСостояние.ВерсияЧисло <> 0 Тогда
					Объект.ТекущаяИнформация = НСтр("ru = 'Идет обновлении информационной базы до версии '") + Объект.КрайняяВерсияОбновления;
				Иначе
					Объект.ТекущаяИнформация = НСтр("ru = 'Обновление информационной базы не началось!
					|Возможно установлена блокировка выполнения регламентных заданий!'");
                    Объект.ХодВыполнения = "";
				КонецЕсли;
			КонецЕсли;
		Иначе
			Объект.ПроверятьТекущееСостояние = Истина;
			Объект.ТекущаяИнформация = НСтр("ru = 'Обновление информационной базы не началось!
			|Возможно установлена блокировка выполнения регламентных заданий!'");
            Объект.ХодВыполнения = "";
			ЭтотОбъект.Элементы.ТекущееЗначение.Видимость = Ложь;
		КонецЕсли;
	Иначе
		ОтключитьОбработчикОжидания("ПолучитьТекущееСостояние");
		Объект.ПроверятьТекущееСостояние = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущееСостояниеНаСервере()
	Результат = Новый Структура("ВерсияЧисло, Версия, ПроцедураОбновления, СообщатьДлительность, ТекущееЗначение, МаксимальноеЗначение, Комментарий, ЗавершеноОбновление");
	
	Если Общий.ВерсияЦКК() <> Общий.СохраненнаяВерсия() Тогда
		ЗавершеноОбновление = Ложь;
	Иначе
		ЗавершеноОбновление = Истина;
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВерсииИнформационнойБазы.ВерсияЧисло КАК ВерсияЧисло,
	|	ВерсииИнформационнойБазы.Версия КАК Версия,
	|	ВерсииИнформационнойБазы.ПроцедураОбновления КАК ПроцедураОбновления,
	|	ВерсииИнформационнойБазы.СообщатьДлительность КАК СообщатьДлительность,
	|	ВерсииИнформационнойБазы.ТекущееЗначение КАК ТекущееЗначение,
	|	ВерсииИнформационнойБазы.МаксимальноеЗначение КАК МаксимальноеЗначение,
	|	ВерсииИнформационнойБазы.Комментарий КАК Комментарий,
    |	ВерсииИнформационнойБазы.ЗавершеноОбновление КАК ЗавершеноОбновление
	|ИЗ
	|	РегистрСведений.ВерсииИнформационнойБазы КАК ВерсииИнформационнойБазы
	|ГДЕ
	|	ВерсииИнформационнойБазы.ВерсияЧисло В
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(МинимальнаяВерсия.ВерсияЧисло)
	|			ИЗ
	|				РегистрСведений.ВерсииИнформационнойБазы КАК МинимальнаяВерсия
	|			)
	|";
	
	Запрос.УстановитьПараметр("ЗавершеноОбновление", ЗавершеноОбновление);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТекущиеДанные = РезультатЗапроса.Выгрузить()[0];
		Результат.ВерсияЧисло = ТекущиеДанные.ВерсияЧисло;
		Результат.Версия = ТекущиеДанные.Версия;
		Результат.ПроцедураОбновления = ТекущиеДанные.ПроцедураОбновления;
		Результат.СообщатьДлительность = ТекущиеДанные.СообщатьДлительность;
		Результат.ТекущееЗначение = ТекущиеДанные.ТекущееЗначение;
		Результат.МаксимальноеЗначение = ТекущиеДанные.МаксимальноеЗначение;
		Результат.Комментарий = ТекущиеДанные.Комментарий;
        Результат.ЗавершеноОбновление = ТекущиеДанные.ЗавершеноОбновление;
	Иначе
		Результат.ВерсияЧисло = Общий.ВерсияВЧисло(Общий.СохраненнаяВерсия());
		Результат.Версия = Общий.СохраненнаяВерсия();
		Результат.ПроцедураОбновления = "";
		Результат.СообщатьДлительность = Истина;
		Результат.ТекущееЗначение = 0;
		Результат.МаксимальноеЗначение = 100;
		Результат.Комментарий = "";
        Результат.ЗавершеноОбновление = Ложь;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ЧислоПотоковОбновленияИБ = Константы.ЧислоПотоковОбновленияИБ.Получить();
	
	Объект.КрайняяВерсияОбновления = Общий.ВерсияЦКК();
	
	Если Общий.НачалосьОбновление() Тогда
		Если Общий.ИдетОбновление() Тогда
			Если Общий.СохраненнаяВерсия() = "" Тогда
				Объект.ЭтоПервыйЗапуск = Истина;
				ТекущееСостояние = ПолучитьТекущееСостояниеНаСервере();
				Если ТекущееСостояние <> Неопределено Тогда
					Объект.ТекущееЗначение = ТекущееСостояние.ТекущееЗначение;
					Объект.ТекущаяИнформация = НСтр("ru = 'Центр Контроля Качества '") + ТекущееСостояние.Версия + ". Первоначальное заполнение данных.";
					Объект.ХодВыполнения = ТекущееСостояние.Комментарий;
					Объект.ПроверятьТекущееСостояние = Истина;
				КонецЕсли;
			Иначе
				Объект.ЭтоПервыйЗапуск = Ложь;
				ТекущееСостояние = ПолучитьТекущееСостояниеНаСервере();
				Если ТекущееСостояние <> Неопределено Тогда
					Объект.ТекущееЗначение = ТекущееСостояние.ТекущееЗначение;
					Объект.ТекущаяИнформация = НСтр("ru = 'Идет обновлении информационной базы до версии '") + Объект.КрайняяВерсияОбновления;
					Объект.ХодВыполнения = ТекущееСостояние.Комментарий;
					Объект.ПроверятьТекущееСостояние = Истина;
				КонецЕсли;
			КонецЕсли;
		Иначе
			
			Объект.ЭтоПервыйЗапуск = Ложь;
			ТекущееСостояние = ПолучитьТекущееСостояниеНаСервере();
			Если ТекущееСостояние <> Неопределено Тогда
				Объект.ПроверятьТекущееСостояние = Ложь;
				
				Объект.ТекущаяИнформация = НСтр("ru = 'Информационная база успешно обновлена до версии '") + ТекущееСостояние.Версия;
				Объект.ХодВыполнения = ТекущееСостояние.Комментарий;
				
				ЭтотОбъект.Элементы.ТекущееЗначение.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Объект.ПроверятьТекущееСостояние = Истина;
		Объект.ТекущаяИнформация = НСтр("ru = 'Обновление информационной базы не началось!
		|Возможно установлена блокировка выполнения регламентных заданий!'");
		ЭтотОбъект.Элементы.ТекущееЗначение.Видимость = Ложь;
		ЭтотОбъект.Элементы.ЧислоПотоковОбновленияИБ.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
    
    Если Объект.ЭтоПервыйЗапуск Тогда
        ЗавершитьРаботуСистемы(Ложь);
	КонецЕсли;
	
	Если ОбщийВызовСервера.ВерсияЦКК() <> ОбщийВызовСервера.СохраненнаяВерсия() Тогда
        ЗавершитьРаботуСистемы(Ложь);
    Иначе
        ФормаПослеОбновления = ФормаПослеОбновления();
        Если ЗначениеЗаполнено(ФормаПослеОбновления) Тогда
            ОткрытьФормуПослеОбновления();
        КонецЕсли;
    КонецЕсли;
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФормаПослеОбновления()
    Возврат Константы.ПоказатьФормуПослеОбновления.Получить();
КонецФункции

&НаКлиенте
Процедура ЧислоПотоковОбновленияИБПриИзменении(Элемент)
	ЧислоПотоковОбновленияИБПриИзмененииНаСервере(Объект.ЧислоПотоковОбновленияИБ);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЧислоПотоковОбновленияИБПриИзмененииНаСервере(Значение)
	Константы.ЧислоПотоковОбновленияИБ.Установить(Значение);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИБ(Команда)
    
    Объект.ТекущееЗначение = 0;
    ЭтотОбъект.Элементы.ТекущееЗначение.Видимость = Истина;
    ОбновлениеИнформационнойБазыНаСервере();	
    
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновлениеИнформационнойБазыНаСервере()
    
    ФоновыеЗадания.Выполнить("Общий.ОбновлениеИнформационнойБазы",,"6b08ab2e-4610-4456-b7ed-5ff33a97ec18", "Обновление информационной базы");
    
КонецПроцедуры


