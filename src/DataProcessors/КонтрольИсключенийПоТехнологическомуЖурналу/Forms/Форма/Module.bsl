
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗагрузитьНастройки();
	ОбновитьРейтинг();
КонецПроцедуры

&НаСервере
Процедура ОбновитьРейтинг()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ТехнологическийЖурнал.ТекстИсключенияХэш) КАК КоличествоИсключенийСДаннымТекстом,
	|	ТехнологическийЖурнал.ТекстИсключенияХэш КАК ТекстИсключенияХэш
	|ПОМЕСТИТЬ РейтингИсключений
	|ИЗ
	|	РегистрСведений.ТехнологическийЖурнал КАК ТехнологическийЖурнал
	|	%Фильтр
	|
	|СГРУППИРОВАТЬ ПО
	|	ТехнологическийЖурнал.ТекстИсключенияХэш;
	|
	|/////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТехнологическийЖурнал.ТекстИсключенияХэш,
	|	МАКСИМУМ(ТехнологическийЖурнал.УникальныйИдентификатор) КАК УникальныйИдентификатор
	|ПОМЕСТИТЬ ИдентификаторыЗаписей
	|ИЗ
	|	РейтингИсключений
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РегистрСведений.ТехнологическийЖурнал КАК ТехнологическийЖурнал
	|ПО 
	|	РейтингИсключений.ТекстИсключенияХэш = ТехнологическийЖурнал.ТекстИсключенияХэш
	|СГРУППИРОВАТЬ ПО
	|	ТехнологическийЖурнал.ТекстИсключенияХэш;
	|
	|/////////////////////////////////
	|
	|ВЫБРАТЬ
	|	РейтингИсключений.КоличествоИсключенийСДаннымТекстом КАК КоличествоИсключенийСДаннымТекстом,
	|	РейтингИсключений.ТекстИсключенияХэш КАК ТекстИсключенияХэш,
	|	ТехнологическийЖурнал.ТекстИсключения,
	|	ТехнологическийЖурнал.Контекст
	|ИЗ
	|	ИдентификаторыЗаписей
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РегистрСведений.ТехнологическийЖурнал КАК ТехнологическийЖурнал
	|ПО
	|	ИдентификаторыЗаписей.УникальныйИдентификатор = ТехнологическийЖурнал.УникальныйИдентификатор
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РейтингИсключений КАК РейтингИсключений
	|ПО 
	|	РейтингИсключений.ТекстИсключенияХэш = ИдентификаторыЗаписей.ТекстИсключенияХэш
	|
	|УПОРЯДОЧИТЬ ПО РейтингИсключений.КоличествоИсключенийСДаннымТекстом УБЫВ";
	
	Условия = Новый Массив;
	СтрокаПараметров = "ИмяРеквизита, ТекстУсловия";
	Условия.Добавить(Новый Структура(
		СтрокаПараметров,
		"КонецПериода", " ТехнологическийЖурнал.Дата <= &КонецПериода "
	));
	Условия.Добавить(Новый Структура(
		СтрокаПараметров,
		"НачалоПериода", " ТехнологическийЖурнал.Дата >= &НачалоПериода "
	));
	Условия.Добавить(Новый Структура(
		СтрокаПараметров,
		"Кластер", " ТехнологическийЖурнал.Кластер = &Кластер "
	));
	Условия.Добавить(Новый Структура(
		СтрокаПараметров,
		"РабочийСервер", " ТехнологическийЖурнал.РабочийСервер = &РабочийСервер "
	));
	
	Запрос = Новый Запрос;
	ПараметрыЗапроса = Новый Структура;
	
	Фильтр = " (ТехнологическийЖурнал.Тип = Значение(Перечисление.СобытияТЖ.ОшибкаВыполнения) ИЛИ ТехнологическийЖурнал.Тип = Значение(Перечисление.СобытияТЖ.ОшибкаБлокировки)) ";
	ХэшиИгнорируемыхОшибок = Новый Массив;
	Для Каждого СтрокаТаблицы Из ИгнорируемыеОшибки Цикл
		ХэшиИгнорируемыхОшибок.Добавить(СтрокаТаблицы.ТекстИсключенияХэш);
	КонецЦикла;
	
	Если ХэшиИгнорируемыхОшибок.Количество() > 0 Тогда
		Фильтр = Фильтр + " И ТехнологическийЖурнал.ТекстИсключенияХэш НЕ В (&ИгнорируемыеХэши) ";
		ПараметрыЗапроса.Вставить("ИгнорируемыеХэши", ХэшиИгнорируемыхОшибок);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ИнформационнаяБаза) Тогда
		Если ПустаяСтрока(ИмяБазыВКластере) Тогда
			ИмяБазыВКластере = РегистрыСведений.ПараметрыИнформационныхБаз.Получить(Новый Структура(
				"ОбъектКонтроля", Объект.ИнформационнаяБаза
			))["ИмяБазыВКластере"];
		КонецЕсли;
		Фильтр = Фильтр + " И ТехнологическийЖурнал.ИнформационнаяБазаВСтроку = &ИмяБазыВКластере ";
		ПараметрыЗапроса.Вставить("ИмяБазыВКластере", ИмяБазыВКластере);
	КонецЕсли;
	
	Для Каждого Условие Из Условия Цикл
		ИмяРеквизита = Условие.ИмяРеквизита;
		ЗначениеРеквизита = Объект[ИмяРеквизита];
		Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
			Если НЕ ПустаяСтрока(Фильтр) Тогда
				Фильтр = Фильтр + " И ";
			КонецЕсли;
			Фильтр = Фильтр + Условие.ТекстУсловия;
			ПараметрыЗапроса.Вставить(ИмяРеквизита, ЗначениеРеквизита);
			
		КонецЕсли;
		
	КонецЦикла;
	Если НЕ ПустаяСтрока(Фильтр) Тогда
		Фильтр = " ГДЕ " + Фильтр;
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Фильтр", Фильтр);
	
	Запрос.Текст = ТекстЗапроса;
	Для Каждого ПараметрЗапроса Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
	КонецЦикла;
	Выборка = Запрос.Выполнить().Выбрать();
	РейтингИсключений.Очистить();
	Пока Выборка.Следующий() Цикл
		СтрокаРейтинга = РейтингИсключений.Добавить();
		СтрокаРейтинга.КоличествоИсключенийСДаннымТекстом = Выборка.КоличествоИсключенийСДаннымТекстом;
		СтрокаРейтинга.ТекстИсключения = Выборка.ТекстИсключения;
		СтрокаРейтинга.Контекст = Выборка.Контекст;
		СтрокаРейтинга.ТекстИсключенияХэш = Выборка.ТекстИсключенияХэш;
	КонецЦикла;
	
	СохранитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	ОбновитьРейтинг();
	НачалоПериодаКопия = Объект.НачалоПериода;
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	ОбновитьРейтинг();
	КонецПериодаКопия = Объект.КонецПериода;
КонецПроцедуры

&НаКлиенте
Процедура КластерПриИзменении(Элемент)
	ОбновитьРейтинг();
КонецПроцедуры

&НаКлиенте
Процедура РабочийСерверПриИзменении(Элемент)
	ОбновитьРейтинг();
	РабочийСерверКопия = Объект.РабочийСервер;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция КлючНастроек()
	Возврат "НастройкиФормыКонтрольИсключенийПоТехнологическомуЖурналу";
КонецФункции

&НаСервере
Процедура СохранитьНастройки()
	КлючНастроек = КлючНастроек();
	ХранилищеНастроекДанныхФорм.Сохранить(КлючНастроек, "НачалоПериода", Объект.НачалоПериода);
	ХранилищеНастроекДанныхФорм.Сохранить(КлючНастроек, "КонецПериода", Объект.КонецПериода);
	ХранилищеНастроекДанныхФорм.Сохранить(КлючНастроек, "Кластер", Объект.Кластер);
	ХранилищеНастроекДанныхФорм.Сохранить(КлючНастроек, "РабочийСервер", Объект.РабочийСервер);
	
	ИгнорируемыеОшибкиЗначение = РеквизитФормыВЗначение("ИгнорируемыеОшибки");
	ХранилищеНастроекДанныхФорм.Сохранить(КлючНастроек, "ИгнорируемыеОшибки", ИгнорируемыеОшибкиЗначение);
КонецПроцедуры

&НаСервере
Функция ЗагрузитьНастройки()
	КлючНастроек = КлючНастроек();
	
	ДатаНачалаСохраненная = ХранилищеНастроекДанныхФорм.Загрузить(КлючНастроек, "НачалоПериода");
	Если НЕ ЗначениеЗаполнено(ДатаНачалаСохраненная) Тогда
		ДатаНачалаСохраненная = ТекущаяДатаСеанса() - 3600;
	КонецЕсли;
	Объект.НачалоПериода = ДатаНачалаСохраненная;
	
	ДатаОкончанияСохраненная = ХранилищеНастроекДанныхФорм.Загрузить(КлючНастроек, "КонецПериода");
	Если НЕ ЗначениеЗаполнено(ДатаОкончанияСохраненная) Тогда
		ДатаОкончанияСохраненная = ТекущаяДатаСеанса();
	КонецЕсли;
	Объект.КонецПериода = ДатаОкончанияСохраненная;
	
	Кластер = ХранилищеНастроекДанныхФорм.Загрузить(КлючНастроек, "Кластер");
	Если ЗначениеЗаполнено(Кластер) Тогда
		Объект.Кластер = Кластер;
	КонецЕсли;
	
	РабочийСервер = ХранилищеНастроекДанныхФорм.Загрузить(КлючНастроек, "РабочийСервер");
	Если ЗначениеЗаполнено(РабочийСервер) Тогда
		Объект.РабочийСервер = РабочийСервер;
	КонецЕсли;
	
	ИгнорируемыеОшибкиДанные = ХранилищеНастроекДанныхФорм.Загрузить(КлючНастроек, "ИгнорируемыеОшибки");
	Если ИгнорируемыеОшибкиДанные <> Неопределено Тогда
		ЗначениеВРеквизитФормы(ИгнорируемыеОшибкиДанные, "ИгнорируемыеОшибки");
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ИгнорироватьИсключение(Команда)
	ТекущееИсключение = Элементы.РейтингИсключений.ТекущиеДанные;
	ИгнорироватьИсключениеСервер(ТекущееИсключение.ТекстИсключения, ТекущееИсключение.ТекстИсключенияХэш);
КонецПроцедуры

&НаСервере
Процедура ИгнорироватьИсключениеСервер(ТекстИсключения, ТекстИсключенияХэш)
	
	НоваяСтрока = ИгнорируемыеОшибки.Добавить();
	НоваяСтрока.ТекстИсключения = ТекстИсключения;
	НоваяСтрока.ТекстИсключенияХэш = ТекстИсключенияХэш;
	
	РейтингИсключений.Удалить(РейтингИсключений.НайтиПоИдентификатору(Элементы.РейтингИсключений.ТекущаяСтрока));
	СохранитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура УчитыватьИсключение(Команда)
	УчитыватьИсключениеСервер();
КонецПроцедуры

&НаСервере
Процедура УчитыватьИсключениеСервер()
	ИгнорируемыеОшибки.Удалить(ИгнорируемыеОшибки.НайтиПоИдентификатору(Элементы.ИгнорируемыеОшибки.ТекущаяСтрока));
	ТребуетсяОбновитьРейтинг = Истина;
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТребуетсяОбновитьРейтинг И ТекущаяСтраница = Элементы.РейтингИсключенийСтраница Тогда
		ОбновитьРейтинг();
		ТребуетсяОбновитьРейтинг = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КластерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("КластерНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.ОбъектыКонтроля.Форма.ФормаВыбораКластера",,,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура КластерНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		Объект.Кластер = РезультатЗакрытия;
		КластерПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КластерОчистка(Элемент, СтандартнаяОбработка)
	КластерПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура РабочийСерверНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("РабочийСерверНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.ОбъектыКонтроля.Форма.ФормаВыбораРабочегоСервера",,,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура РабочийСерверНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		Объект.РабочийСервер = РезультатЗакрытия;
		РабочийСерверПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РабочийСерверОчистка(Элемент, СтандартнаяОбработка)
	РабочийСерверПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ИнформационнаяБазаПриИзменении(Элемент)
	ИмяБазыВКластере = "";
	ОбновитьРейтинг();
КонецПроцедуры

&НаКлиенте
Процедура ИнформационнаяБазаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ИнформационнаяБазаНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.ОбъектыКонтроля.Форма.ФормаВыбораИнформационнойБазы",,,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформационнаяБазаНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		Объект.ИнформационнаяБаза = РезультатЗакрытия;
		ИнформационнаяБазаПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформационнаяБазаОчистка(Элемент, СтандартнаяОбработка)
	ИнформационнаяБазаПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьРейтинг();
КонецПроцедуры
