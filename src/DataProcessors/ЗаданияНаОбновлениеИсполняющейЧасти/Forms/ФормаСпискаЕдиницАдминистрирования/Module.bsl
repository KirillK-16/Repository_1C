#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИнициироватьПроверкуОбновлениеСценариевАдминистрирования(Команда)
	МассивСтрок = Элементы.Список.ВыделенныеСтроки;
	ОбновлениеСценариевАдминистрированияНаСервере(МассивСтрок);
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеСценариевАдминистрированияНаСервере(СтрокиАгентов)
	ПараметрыОбновления = Новый Структура("Агенты", СтрокиАгентов);
	ОткрытьФорму("Обработка.ЗаданияНаОбновлениеИсполняющейЧасти.Форма.ФормаВыбораПараметровОбновления", ПараметрыОбновления);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	Элементы.Список.Обновить();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПерезапуститьПоследнююЗадачуНаСервере(МассивСтрок)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗадачиОбновленияСценариевАдминистрированияСрезПоследних.Агент КАК Агент,
	                      |	МАКСИМУМ(ЗадачиОбновленияСценариевАдминистрированияСрезПоследних.Период) КАК Период
	                      |ИЗ
	                      |	РегистрСведений.ЗадачиОбновленияСценариевАдминистрирования.СрезПоследних(, Агент В (&СписокАгентов)) КАК ЗадачиОбновленияСценариевАдминистрированияСрезПоследних
	                      |
	                      |Сгруппировать ПО
	                      |	ЗадачиОбновленияСценариевАдминистрированияСрезПоследних.Агент");
	Запрос.УстановитьПараметр("СписокАгентов", МассивСтрок);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ЗадачиОбновленияСценариевАдминистрирования.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.Агент.Установить(Выборка.Агент);
		
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл
			Запись.СтатусКоманды = Перечисления.СтатусыКоманд.Сформирована;
		КонецЦикла;
		
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ЗаписьЖурналаРегистрации(НСтр("ru='Обновление Агента'", Метаданные.ОсновнойЯзык.КодЯзыка), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;	
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПерезапуститьПоследнююЗадачу(Команда)
	МассивСтрок = Элементы.Список.ВыделенныеСтроки;
	ПерезапуститьПоследнююЗадачуНаСервере(МассивСтрок);
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.Список.ТекущаяСтрока;
	Если ТекДанные <> Неопределено Тогда
		РаботаСоСценариямиАвтоматизацииКлиент.ИзменитьОтборДинамическогоСписка(ЗадачиОбновления, "Агент", ТекДанные);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// отбор по агенту
	ЭлементОтбораАгент = ЗадачиОбновления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораАгент.Использование = Истина;
	ЭлементОтбораАгент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораАгент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Агент");
	ЭлементОтбораАгент.ПравоеЗначение = ПредопределенноеЗначение("Справочник.АгентыКИП.ПустаяСсылка");
КонецПроцедуры

#КонецОбласти