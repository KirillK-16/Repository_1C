
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Попытка
		ОбновитьРекомендации();
		
		ДобавитьКомандуНаФорму(
		"ОбъектКонтроля",
		"Настройки объекта контроля",
		"Справочник.ОбъектыКонтроля.Форма.ФормаЭлемента",
		Новый Структура("Ключ", Объект.ИсточникЗадачи.ОбъектКонтроля)		
		);
		
		ДобавитьКомандуНаФорму(
		"ПроцедураКонтроля",
		"Настройки контрольной процедуры",
		"Справочник.КонтрольныеПроцедуры.Форма.ФормаЭлемента", 
		Новый Структура("Ключ, ЗаблокироватьПанельУправления", Объект.ИсточникЗадачи, Истина)
		);
		
		ВнешниеФормы = УправлениеЗадачами.НазванияВнешнихФормДляВидаПроцедуры(
		Объект.ИсточникЗадачи.Владелец, 
		Объект.ТипЗадачи
		);
		НомерФормы = 1;
		Для Каждого ВнешняяФорма ИЗ ВнешниеФормы Цикл
			ПараметрыОткрытия = Новый Структура(
			"ОбъектКонтроля, Дата", 
			Объект.ИсточникЗадачи.ОбъектКонтроля,
			Строка(Объект.Дата)
			);
			Для Каждого ПараметрЗадачи Из Объект.ПараметрыЗадачи Цикл
				ПараметрыОткрытия.Вставить(ПараметрЗадачи.ИмяПараметра, ПараметрЗадачи.Значение);
			КонецЦикла;	
			
			ДобавитьКомандуНаФорму(
			"ОткрытиеВнешнейФормы" + Строка(НомерФормы),
			ВнешняяФорма.Значение,
			ВнешняяФорма.Ключ, 
			ПараметрыОткрытия
			);
			НомерФормы = НомерФормы + 1;
		КонецЦикла;	
		
		Если ПустаяСтрока(Объект.ИзменяемыеПараметрыЗадачи.ПоручениеДополнительныеДанные) Тогда
			Элементы.ПоручениеДополнительныеДанные.Видимость = Ложь;	
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКомандуНаФорму(ИмяКоманды, Заголовок, ИмяФормы, ПараметрыОткрытия)
	
	НоваяКоманда = Команды.Добавить(ИмяКоманды); 
	НоваяКоманда.Действие = "ОткрытьВспомогательнуюФорму"; 
	
	НовыйЭлемент = Элементы.Добавить(ИмяКоманды,Тип("КнопкаФормы"),Элементы.ГруппаПерейти); 
	НовыйЭлемент.ИмяКоманды = ИмяКоманды; 
	НовыйЭлемент.Вид = ВидКнопкиФормы.Гиперссылка;
	НовыйЭлемент.Заголовок = Заголовок;
	
	ТекущиеПараметры = РеквизитФормыВЗначение("СсылкиНаВнешниеФормы");
	НоваяСтрока = ТекущиеПараметры.Добавить();
	НоваяСтрока.ИмяКоманды = ИмяКоманды;
	НоваяСтрока.ИмяФормы = ИмяФормы;
	
	Для Каждого ИмяЗначениеПараметра Из ПараметрыОткрытия Цикл
		НоваяСтрока = ТекущиеПараметры.Добавить();
		НоваяСтрока.ИмяКоманды = ИмяКоманды;

		НоваяСтрока.ИмяПараметраОткрытия = ИмяЗначениеПараметра.Ключ;
		НоваяСтрока.ЗначениеПараметраОткрытия = ИмяЗначениеПараметра.Значение;
	КонецЦикла;	
		
	ЗначениеВРеквизитФормы(ТекущиеПараметры, "СсылкиНаВнешниеФормы");
КонецПроцедуры	

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// После выполнения задачи, мы должны убедиться, что
	// задача действительно выполнена.
	// Для этого нужно заново запустить бизнес-процесс. 
	// Проблема в том, что часть задач связаны с бизнес-процессами и 
	// выполнение таких задач автоматически перезапускает связанный бизнес-процесс,
	// а часть часть задач было удобно сделать не привязанными к точкам бизнес-процессов.
	// Последний тип задач требует ручного перезапуска бизнес-процессов.
	Если ТекущийОбъект.Выполнена И ТекущийОбъект.ТочкаМаршрута = Неопределено Тогда
		Если ТекущийОбъект.ТипЗадачи.ПроверятьПриВыполнении Тогда
			УправлениеЗаданиямиСервер.УстановитьСостояниеКонтрольнойПроцедуры(
				Объект.ИсточникЗадачи,
				Перечисления.СостоянияКонтрольныхПроцедур.НеизвестноеСостояние
			);
			Если Объект.ИсточникЗадачи.Выполнять Тогда 
				ПараметрыЗапуска = Новый Массив;
				ПараметрыЗапуска.Добавить(Объект.ИсточникЗадачи);
				ФоновыеЗадания.Выполнить("УправлениеЗаданиямиСервер.ЗапускКонтрольнойПроцедуры", ПараметрыЗапуска); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если Объект.Выполнена Тогда
		Оповестить("Изменение.Задачи", Объект.ИсточникЗадачи, Объект.Ссылка);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция НазваниеСтраницыСправки()
	Если ТипЗнч(Объект.ИсточникЗадачи) = Тип("СправочникСсылка.КонтрольныеПроцедуры") Тогда
		
		Возврат ?(ПустаяСтрока(Объект.ИмяСтраницыСправки), Неопределено, Объект.ИмяСтраницыСправки);	
		
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура ОткрытьВспомогательнуюФорму(Команда)
	ПараметрыФормы = ПараметрыВнешнейФормы(Команда.Имя);
		
	ОткрытьФорму(
		ПараметрыФормы.ИмяФормы,
		ПараметрыФормы.ПараметрыОткрытия
	);
	
КонецПроцедуры	

&НаСервере
Функция ПараметрыВнешнейФормы(ИмяКоманды)
	
	СтрокиПараметров = СсылкиНаВнешниеФормы.НайтиСтроки(
		Новый Структура("ИмяКоманды", ИмяКоманды)
	);
	
	Результат = Новый Структура; 
	ПараметрыОткрытия = Новый Структура;
	Для Каждого СтрокаПараметров Из СтрокиПараметров Цикл
		Если НЕ ПустаяСтрока(СтрокаПараметров.ИмяФормы) Тогда
			Результат.Вставить("ИмяФормы", СтрокаПараметров.ИмяФормы);
		КонецЕсли;
		Если НЕ ПустаяСтрока(СтрокаПараметров.ИмяПараметраОткрытия) Тогда
			ПараметрыОткрытия.Вставить(
				СтрокаПараметров.ИмяПараметраОткрытия, 
				СтрокаПараметров.ЗначениеПараметраОткрытия
			);		
		КонецЕсли;
	КонецЦикла;	
	Результат.Вставить("ПараметрыОткрытия", ПараметрыОткрытия);
	Возврат Результат;
		
КонецФункции

&НаСервере
Процедура ОбновитьРекомендации()
	ИмяМакета = НазваниеСтраницыСправки();
	Если ИмяМакета <> Неопределено Тогда
		Попытка 
			Справка = Общий.ТекстHTMLМакета(ИмяМакета); 
		Исключение
			Инфо = ИнформацияОбОшибке();
			Комментарий =
				"Описание = '" +Инфо.Описание + "', " +
				"ИмяМодуля = '" + Инфо.ИмяМодуля + "', " +
				"НомерСтроки = '" + Инфо.НомерСтроки + "', " +
				"ИсходнаяСтрока = '" + Инфо.ИсходнаяСтрока + "'.";
			
			ЗаписьЖурналаРегистрации(
				"Процедура ОбновитьРекомендации()",
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Задачи.ЗадачаОтветственному.Формы.ФормаЗадачи,
				,
				Комментарий);
			
			Элементы.Рекомендации.Видимость = Ложь;
		КонецПопытки;
	Иначе
		Элементы.Рекомендации.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

