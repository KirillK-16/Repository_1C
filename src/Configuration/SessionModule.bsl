
Процедура УстановкаПараметровСеанса(ТребуемыеПараметры)
	Если ТребуемыеПараметры = Неопределено Тогда
		// Раздел установки параметров сеанса при начале сеанса (ТребуемыеПараметры = Неопределено)
		// Выполняется установка параметров сеанса, которые можно инициализировать 
		// при начале работы системы
	Иначе
		// Установка параметров сеанса "по требованию"
		// Параметры сеанса, инициализация которых требует обращения к одним и тем же данным
		// следует инициализировать сразу группой. Для того, чтобы избежать их повторной инициализации,
		// имена уже установленных параметров сеанса сохраняются в массиве УстановленныеПараметры
		
		УстановленныеПараметры = Новый Массив;
		Для Каждого Параметр Из ТребуемыеПараметры Цикл
			УстановитьЗначениеПараметраСеанса(Параметр, УстановленныеПараметры);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Установить значения параметров сеанса и возвратить имена установленных параметров сеанса
// в параметре УстановленныеПараметры.
//
// Параметры:
//  Параметр - Строка - имя параметра сеанса, который требуется установить (проинициализировать).
//  УстановленныеПараметры  - Массив - массив, в который добавляются имена
//                                     установленных (проинициализированных) параметров.
//
Процедура УстановитьЗначениеПараметраСеанса(Знач Параметр, УстановленныеПараметры)
	
	// Если в данном вызове УстановкаПараметровСеанса параметр Параметр уже 
	// был установлен - возврат.
	Если УстановленныеПараметры.Найти(Параметр) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметр = "ТекущийПользователь" Тогда
		ПараметрыСеанса.ТекущийПользователь = ПолучитьПользователя();
		УстановленныеПараметры.Добавить(Параметр);
	КонецЕсли;
	
	Если Параметр = "ВерсияПлатформы" Тогда
		ПараметрыСеанса.ВерсияПлатформы = Общий.ВерсияПлатформы();
		УстановленныеПараметры.Добавить(Параметр);
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьПользователя()
	
	ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	Пользователь = НайтиПользователя(ТекущийПользователь.УникальныйИдентификатор);
	Если Пользователь = Неопределено Тогда
		Пользователь = СоздатьПользователя(ТекущийПользователь);
	КонецЕсли;
	
	Возврат Пользователь;
	
КонецФункции

Функция НайтиПользователя(УникальныйИдентификатор)
	
	Пользователь = Справочники.Пользователи.НайтиПоРеквизиту("УникальныйИдентификатор", УникальныйИдентификатор);
	Если Пользователь = Неопределено Или Пользователь.Пустая() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Пользователь;
	КонецЕсли;
	
КонецФункции

Функция СоздатьПользователя(ТекущийПользователь)
	
	ЭлементОбъект = Справочники.Пользователи.СоздатьЭлемент();
	ЭлементОбъект.Наименование = ТекущийПользователь.Имя;
	ЭлементОбъект.УникальныйИдентификатор = ТекущийПользователь.УникальныйИдентификатор;
	ЭлементОбъект.ДополнительныеСвойства.Вставить(СловарьКлиентСервер.ИмяСвойстваНеВыполнятьСинхронизациюПользователя());
	ЭлементОбъект.Записать();
	
	Возврат ЭлементОбъект.Ссылка;
	
КонецФункции


