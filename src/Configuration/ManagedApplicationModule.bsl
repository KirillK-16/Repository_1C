
Перем МониторингОчередьЗаданийДиаграммы Экспорт;
Перем МониторингОчередьРотации Экспорт;
Перем ИнтервалОчередиРотации Экспорт;
Перем ОбработчикОчередиРотацииВключен Экспорт;
Перем ВнутренниеЗамерыПроизводительностиБуферКлиента Экспорт;

Перем ПараметрыПриложения Экспорт;

Перем глИнструменты Экспорт;

Процедура ПередНачаломРаботыСистемы(Отказ)
    
    ЭтоМобильныйКлиент = Ложь;
    #Если МобильныйКлиент Тогда
        ЭтоМобильныйКлиент = Истина;
    #КонецЕсли
    
	ПараметрыПриложения = ОбщийВызовСервера.ПередНачаломРаботыСистемы(ЭтоМобильныйКлиент);
	
    Если ПараметрыПриложения.ТребуетсяПерезагрузка Тогда
    	ПрекратитьРаботуСистемы(Истина);
    КонецЕсли;
    
    Если ЭтоМобильныйКлиент Тогда
        ПараметрыФункциональныхОпций = Новый Структура("ИнтерфейсКлиента", ПараметрыПриложения.МобильныйКлиент);
        УстановитьПараметрыФункциональныхОпцийИнтерфейса(ПараметрыФункциональныхОпций);
    КонецЕсли;

КонецПроцедуры

Процедура ПриНачалеРаботыСистемы()
	
	ОбщийКлиент.ПриНачалеРаботыСистемы(ПараметрыПриложения);
	ОбработчикОчередиРотацииВключен = Ложь;
    
    ВнутренниеЗамерыПроизводительностиБуферКлиента = Новый Соответствие;
    ПодключитьОбработчикОжидания("ЗаписатьБуферКлиентаГлобальный", 60, Истина);
        
КонецПроцедуры

Функция НайтиЭлементОчереди(Очередь, УникальныйИдентификаторФормы) Экспорт
	ЭлементОчереди = Неопределено;
	Для Каждого ТекЭлементОчереди Из Очередь Цикл
		Если ТекЭлементОчереди.УникальныйИдентификаторФормы = УникальныйИдентификаторФормы Тогда
			ЭлементОчереди = ТекЭлементОчереди;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЭлементОчереди;
КонецФункции

Процедура ОбработчикОчередиРотации() Экспорт
	Если МониторингОчередьРотации.Количество() > 1 Тогда
		АктивизироватьФормуМониторинга();
		
		Если ИнтервалОчередиРотации = Неопределено ИЛИ ИнтервалОчередиРотации = 0 Тогда
			ИнтервалОчередиРотации = 30;
		КонецЕсли;
		
		ПодключитьОбработчикОжидания("ОбработчикОчередиРотации", ИнтервалОчередиРотации, Истина);
	КонецЕсли;
КонецПроцедуры

Процедура ПодключитьОбработчикОжиданияОчередиРотации(Интервал) Экспорт
	Если НЕ ОбработчикОчередиРотацииВключен Тогда
		ИнтервалОчередиРотации = Интервал;
		ПодключитьОбработчикОжидания("ОбработчикОчередиРотации", ИнтервалОчередиРотации, Истина);
		ОбработчикОчередиРотацииВключен = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ОтключитьОбработчикОжиданияОчередиРотации() Экспорт
	ОтключитьОбработчикОжидания("ОбработчикОчередиРотации");
	ОбработчикОчередиРотацииВключен = Ложь;
КонецПроцедуры

Процедура АктивизироватьФормуМониторинга()
	//Ищем текущую активную форму, если она есть и включена в ротацию,
	//только тогда активизируем следующую
	ВозможнаРотация = Ложь;
	Для Каждого ЭлементОчереди Из МониторингОчередьРотации Цикл
		Если ЭлементОчереди.Форма.ВводДоступен() Тогда
			ВозможнаРотация = ЭлементОчереди.Форма.ВключитьВРотацию;
		КонецЕсли;
	КонецЦикла;
	
	Если ВозможнаРотация Тогда
		ИндексАктивна = -1;
		
		Для ТекИндекс = 0 По МониторингОчередьРотации.ВГраница() Цикл
			Если МониторингОчередьРотации[ТекИндекс].Активна Тогда
				МониторингОчередьРотации[ТекИндекс].Активна = Ложь;
				
				ИндексАктивна = ТекИндекс;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		//Если нет ни одной активной формы, то активизируем первую в очереди
		Если ИндексАктивна = -1 ИЛИ ИндексАктивна = 0 Тогда
			ИндексАктивна = 0;
		КонецЕсли;
		
		//Начиная со следующего индекса ищем первую форму, которая включена в ротацию
		ИндексДляАктивизации = -1;
		Для ТекущийСчетчик = 1 По МониторингОчередьРотации.Количество() Цикл
			ИндексАктивна = ИндексАктивна + 1;
			Если ИндексАктивна > МониторингОчередьРотации.ВГраница() Тогда
				ИндексАктивна = 0;
			КонецЕсли;
			
			Если МониторингОчередьРотации[ИндексАктивна].Форма.ВключитьВРотацию Тогда
				ИндексДляАктивизации = ИндексАктивна;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ИндексДляАктивизации <> -1 Тогда
			МониторингОчередьРотации[ИндексДляАктивизации].Активна = Истина;
			Оповестить("АктивизироватьФорму", МониторингОчередьРотации[ИндексДляАктивизации].УникальныйИдентификаторФормы);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры







