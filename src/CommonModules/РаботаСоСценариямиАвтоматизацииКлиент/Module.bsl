Процедура ДеревоУстановитьФлагНиже(ЭлементДерева, ИмяПоляФлага, ЗначениеФлага)
	ЭлементДерева[ИмяПоляФлага] = ЗначениеФлага;
	Подчиненные = ЭлементДерева.ПолучитьЭлементы();
	Для каждого ПодчиненныйЭлементДерева Из Подчиненные Цикл
		ДеревоУстановитьФлагНиже(ПодчиненныйЭлементДерева, ИмяПоляФлага, ЗначениеФлага);
	КонецЦикла;	
КонецПроцедуры

Процедура ДеревоУстановитьФлагВыше(ЭлементДерева, ИмяПоляФлага)
	Родитель = ЭлементДерева.ПолучитьРодителя();
	Если Родитель <> Неопределено Тогда
		Родитель[ИмяПоляФлага] = Истина;
		ДеревоУстановитьФлагВыше(Родитель, ИмяПоляФлага);
	КонецЕсли;	
КонецПроцедуры

Процедура ДеревоФлагПриИзменении(Элемент, ИмяПоляФлага) Экспорт
	ЭлементТаблицы = Элемент;
	Пока ТипЗнч(ЭлементТаблицы) <> Тип("ТаблицаФормы") И ЭлементТаблицы <> Неопределено Цикл
		ЭлементТаблицы = ЭлементТаблицы.Родитель;
	КонецЦикла;	
	
	Если ЭлементТаблицы <> Неопределено Тогда
		ТекущиеДанные = ЭлементТаблицы.ТекущиеДанные;
		
		Если ТекущиеДанные <> Неопределено Тогда
			// Ниже По иерархии
			ЗначениеФлага = ТекущиеДанные[ИмяПоляФлага];
			ДеревоУстановитьФлагНиже(ТекущиеДанные, ИмяПоляФлага, ЗначениеФлага);
			
			// Выше По иерархии
			Если ЗначениеФлага Тогда
				ДеревоУстановитьФлагВыше(ТекущиеДанные, ИмяПоляФлага);
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

Процедура УстановитьРежимРедактированияЗначения(СпособЗаполнения, ЭлементСсылкаНаМетаданные, ЭлементЗначение) Экспорт
	ЭлементСсылкаНаМетаданные.СписокВыбора.Очистить();
	Если СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.ИзОбъектаМетаданных") Тогда
		ЭлементСсылкаНаМетаданные.РежимВыбораИзСписка = Истина;
		ЭлементСсылкаНаМетаданные.РедактированиеТекста = Ложь;
		ЭлементЗначение.РедактированиеТекста = Истина;
	ИначеЕсли СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.ИзКонфиденциальногоХранилища") Тогда
		ЭлементСсылкаНаМетаданные.РежимВыбораИзСписка = Ложь;
		ЭлементСсылкаНаМетаданные.РедактированиеТекста = Ложь;
		ЭлементЗначение.РедактированиеТекста = Истина;
	ИначеЕсли  СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.ПустаяСтрока") Тогда
		ЭлементСсылкаНаМетаданные.РежимВыбораИзСписка = Ложь;
		ЭлементСсылкаНаМетаданные.РедактированиеТекста = Ложь;
		ЭлементЗначение.РедактированиеТекста = Ложь;
	Иначе
		ЭлементСсылкаНаМетаданные.РежимВыбораИзСписка = Ложь;
		ЭлементСсылкаНаМетаданные.РедактированиеТекста = Ложь;
		ЭлементЗначение.РедактированиеТекста = Истина;
	КонецЕсли;	
КонецПроцедуры

Процедура ЗадатьПустойОбъектИЗначениеСтрокиШаблона(ТекущиеДанныеСтроки, ТолькоОбъект = Ложь) Экспорт
	ОтносительнаяСсылкаНаМетаданные = ТекущиеДанныеСтроки.ОтносительнаяСсылкаНаМетаданные;
	
	Если ТекущиеДанныеСтроки.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.ИзОбъектаМетаданных") Тогда 
		ПозицияРазделителя = СтрНайти(ОтносительнаяСсылкаНаМетаданные, "->");
		Если ПозицияРазделителя <> 0 Тогда
			ИмяМетаданных = Сред(ОтносительнаяСсылкаНаМетаданные, 1, ПозицияРазделителя-1); 
			ТекущиеДанныеСтроки.Объект = Новый (СтрЗаменить(ИмяМетаданных, ".","Ссылка."));
			Если Не ТолькоОбъект Тогда
				ТекущиеДанныеСтроки.Значение = "";
			КонецЕсли;	
		КонецЕсли;
	ИначеЕсли ТекущиеДанныеСтроки.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.ИзКонфиденциальногоХранилища") Тогда 	
		ТекущиеДанныеСтроки.ОтносительнаяСсылкаНаМетаданные = "КонфиденциальныеДанные";
		ТекущиеДанныеСтроки.Объект = ПредопределенноеЗначение("Справочник.ХранилищеКонфиденциальнойИнформации.ПустаяСсылка");
		Если Не ТолькоОбъект Тогда
			ТекущиеДанныеСтроки.Значение = "*****";
		КонецЕсли;	
	ИначеЕсли ТекущиеДанныеСтроки.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.ПустаяСтрока") Тогда
		ТекущиеДанныеСтроки.ОтносительнаяСсылкаНаМетаданные = "Строка";
		ТекущиеДанныеСтроки.Объект = "";
		Если Не ТолькоОбъект Тогда
			ТекущиеДанныеСтроки.Значение = "";
		КонецЕсли;
	Иначе
		ТекущиеДанныеСтроки.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.РучнойВвод");
		
		ТекущиеДанныеСтроки.ОтносительнаяСсылкаНаМетаданные = "Строка";
		ТекущиеДанныеСтроки.Объект = "";
		Если Не ТолькоОбъект Тогда
			ТекущиеДанныеСтроки.Значение = "";
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры	

Процедура ИзменитьОтборДинамическогоСписка(Список, ИмяПоляКомпоновки, ПравоеЗначение) Экспорт
	Для Каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоляКомпоновки) Тогда
			ЭлементОтбора.ПравоеЗначение = ПравоеЗначение;
		КонецЕсли;			
	КонецЦикла;	
КонецПроцедуры	

Процедура ЗаполнитьЗначениеПараметраПоДаннымОбъекта(ТекущиеДанныеСтроки) Экспорт
	Если ТекущиеДанныеСтроки.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.ИзОбъектаМетаданных") Тогда
		ЗначениеПараметра = РаботаСоСценариямиАвтоматизацииСервер.ПолучитьЗначениеПараметраШаблона(ТекущиеДанныеСтроки.ОтносительнаяСсылкаНаМетаданные, ТекущиеДанныеСтроки.Объект);
		ТекущиеДанныеСтроки.Значение = ЗначениеПараметра;
	ИначеЕсли ТекущиеДанныеСтроки.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.ИзКонфиденциальногоХранилища") Тогда	
		ТекущиеДанныеСтроки.Значение = "*****";
	Иначе
		ТекущиеДанныеСтроки.Значение = Строка(ТекущиеДанныеСтроки.Объект);
	КонецЕсли;
КонецПроцедуры

Процедура ВыполнитьПересчетСоставныхПараметров(ТекущиеДанныеСтроки, ЗНАЧ ОбъектыЗаполненияПараметров) Экспорт
	Если ТекущиеДанныеСтроки.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.РучнойВвод") Тогда
		ТекущиеДанныеСтроки.Значение = РаботаСоСценариямиАвтоматизацииКлиентСервер.ТрансляцияСоставногоПараметра(ТекущиеДанныеСтроки.Объект, ОбъектыЗаполненияПараметров);
	КонецЕсли;	
КонецПроцедуры	

Процедура ПриИзмененииПриродыШаблона(ТекущиеДанныеСтроки, ОбъектыЗаполненияПараметров) Экспорт
	РаботаСоСценариямиАвтоматизацииКлиент.ЗадатьПустойОбъектИЗначениеСтрокиШаблона(ТекущиеДанныеСтроки);
	Для каждого Строка Из ОбъектыЗаполненияПараметров Цикл
		Если Строка.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.РучнойВвод") 
			И СтрНайти(Строка.Объект, ТекущиеДанныеСтроки.ИмяШаблона) <> 0 Тогда
			РаботаСоСценариямиАвтоматизацииКлиент.ВыполнитьПересчетСоставныхПараметров(Строка, ОбъектыЗаполненияПараметров);
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

Процедура ОбъектыЗаполненияПараметровОтносительнаяСсылкаНаМетаданныеНачалоВыбора(Ссылка, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	Элемент.СписокВыбора.Очистить();
	Если Элемент.Родитель.Родитель.ТекущиеДанные.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.ИзОбъектаМетаданных") Тогда  
		ДанныеВыбораИзСписка =  РаботаСоСценариямиАвтоматизацииСервер.ПолучитьСписокВыбораМетаданныхДляШаблонов(Ссылка);
		Элемент.СписокВыбора.ЗагрузитьЗначения(ДанныеВыбораИзСписка.ВыгрузитьЗначения()); 
	ИначеЕсли Элемент.Родитель.Родитель.ТекущиеДанные.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.ИзКонфиденциальногоХранилища") Тогда	
		Элемент.СписокВыбора.Вставить(0, "КонфиденциальныеДанные");
	ИначеЕсли Элемент.Родитель.Родитель.ТекущиеДанные.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияПараметровКоманды.РучнойВвод") Тогда	
		Элемент.СписокВыбора.Вставить(0, "Строка");
	КонецЕсли;	
КонецПроцедуры
