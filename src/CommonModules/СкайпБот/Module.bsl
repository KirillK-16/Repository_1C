
#Область ПрограммныйИнтерфейс

Функция ПолучитьТокен(Настройки) Экспорт
	
	Адрес = Настройки["АдресПолученияТокена"];
	client_id = Настройки["client_id"];
	client_secret = Настройки["client_secret"];
	
    ТекДата = ТекущаяУниверсальнаяДата();
    
    СтруктураURI = ОбщийКлиентСервер.СтруктураURI(Адрес);
    Если НРег(СтруктураURI.Схема) = "https" Тогда
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;
	Иначе
		ЗащищенноеСоединение = Неопределено;
	КонецЕсли;
	
	ПроксиСервер = СоздатьПрокси(СтруктураURI.Схема, Настройки);
    
    HTTPСоединение = Новый HTTPСоединение(
        СтруктураURI.Хост, 
	    СтруктураURI.Порт,
	    ,
	    ,
	    ПроксиСервер,
	    Константы.ТаймаутУстановкиСоединенияСПубликациейСек.Получить(),
	    ЗащищенноеСоединение
    );
    
    Тело = СтрокаВБайтыUTF8("grant_type=client_credentials&client_id=" + client_id + "&client_secret=" + client_secret + "&scope=https%3A%2F%2Fapi.botframework.com%2F.default");
    
    HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере);
    HTTPЗапрос.Заголовки.Вставить("Host", "login.microsoftonline.com");
    HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
    HTTPЗапрос.УстановитьТелоИзДвоичныхДанных(Тело);
    
    Результат =  HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
           
    ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(Результат.ПолучитьТелоКакСтроку());
	Токен = ПрочитатьJSON(ЧтениеJSON, Истина);
    Токен.Вставить("valid_until", ТекДата + Токен["expires_in"] - 10);
    
    Возврат Токен;
    
КонецФункции

Функция ОтправитьСообщение(Знач Контакт, Знач Текст) Экспорт
    
    Текст = Лев(Текст, 3072);
    
    УстановитьПривилегированныйРежим(Истина);
    Настройки = СкайпБот.ПрочитатьНастройки();
    УстановитьПривилегированныйРежим(Ложь);
    
    ТекДата = ТекущаяУниверсальнаяДата();
    
    Если Настройки["valid_until"] < ТекДата Тогда
        
        Токен = ПолучитьТокен(Настройки);
        
        Настройки["token_type"] = Токен["token_type"];
        Настройки["access_token"] = Токен["access_token"];
        Настройки["valid_until"] = Токен["valid_until"];
        
        УстановитьПривилегированныйРежим(Истина);
        ЗаписатьНастройки(Настройки);
        УстановитьПривилегированныйРежим(Ложь);
        
    КонецЕсли;
    
    Если СтрНайти(Контакт, ":") = 0 Тогда
        Контакт = "8:" + Контакт;
    ИначеЕсли СтрНачинаетсяС(Контакт, "live:") Тогда
        Контакт = "8:" + Контакт;
    КонецЕсли;
    
    Если Прав(Настройки["АдресОтправкиСообщения"], 1) <> "/" Тогда
        Настройки["АдресОтправкиСообщения"] = Настройки["АдресОтправкиСообщения"] + "/";
    КонецЕсли;
    Адрес = Настройки["АдресОтправкиСообщения"] + Контакт + "/activities";
               
    СтруктураURI = ОбщийКлиентСервер.СтруктураURI(Адрес);
	Если НРег(СтруктураURI.Схема) = "https" Тогда
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;
	Иначе
		ЗащищенноеСоединение = Неопределено;
	КонецЕсли;
    
    ПроксиСервер = СоздатьПрокси(СтруктураURI.Схема, Настройки);
        
    HTTPСоединение = Новый HTTPСоединение(
        СтруктураURI.Хост, 
	    СтруктураURI.Порт,
	    ,
	    ,
	    ПроксиСервер,
	    Константы.ТаймаутУстановкиСоединенияСПубликациейСек.Получить(),
	    ЗащищенноеСоединение
    );
    
    Текст = СтрЗаменить(Текст,"\", "\\");
    ТекстМассив = СтрРазделить(Текст, Символы.ПС, Истина);
    Текст = СтрСоединить(ТекстМассив, "\n\n\u200C");
    Текст = СтрЗаменить(Текст,"""", "\""");
    
    СообщениеПередать = "{""type"":""message"",""text"":""text_body""}";
   
    Тело = СтрокаВБайтыUTF8(СтрЗаменить(СообщениеПередать, "text_body", Текст));
    
    HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере);
    HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");
    HTTPЗапрос.Заголовки.Вставить("Authorization", Настройки["token_type"] + " " + Настройки["access_token"]);
    HTTPЗапрос.УстановитьТелоИзДвоичныхДанных(Тело);
    
    Результат =  HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
    
    Если Результат.КодСостояния = 201 Тогда
        Возврат Истина;
    Иначе
        Возврат Ложь;
    КонецЕсли;
        
КонецФункции

Функция ПрочитатьНастройки() Экспорт
    
    Настройки = РегистрыСведений.БезопасноеХранилище.ПолучитьДанные("e03022e4-209d-4a09-904d-c12bf7957207");
        
    Если Настройки = Неопределено Тогда
        
        Настройки = Новый Соответствие;
        
        Настройки.Вставить("АдресПолученияТокена", "https://login.microsoftonline.com/botframework.com/oauth2/v2.0/token");
        Настройки.Вставить("АдресОтправкиСообщения", "https://smba.trafficmanager.net/apis/v3/conversations/");
        Настройки.Вставить("client_id", "");
        Настройки.Вставить("client_secret", "");
        
        Токен = Новый Соответствие;
        Токен.Вставить("valid_until", Дата(1,1,1));
        Настройки.Вставить("token", Новый Соответствие);
        
    КонецЕсли;
    
    Возврат Настройки;
    
КонецФункции

Процедура ЗаписатьНастройки(Настройки) Экспорт
    
    РегистрыСведений.БезопасноеХранилище.ЗаписатьДанные("e03022e4-209d-4a09-904d-c12bf7957207", Настройки);
        
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоздатьПрокси(Схема, Настройки)
    
    ПроксиСервер = Неопределено;
    
    Если Настройки["ИспользоватьПрокси"] <> Неопределено И Настройки["ИспользоватьПрокси"] Тогда
        
        ПользовательПрокси = ""; 
        Если ЗначениеЗаполнено(Настройки["ПользовательПрокси"]) Тогда
            ПользовательПрокси = Настройки["ПользовательПрокси"];
        КонецЕсли;
        
        ПарольПрокси = "";
        Если ЗначениеЗаполнено(Настройки["ПарольПрокси"]) Тогда
            ПарольПрокси = Настройки["ПарольПрокси"];
        КонецЕсли;
        
        ПроксиСервер = Новый ИнтернетПрокси(Ложь);
        ПроксиСервер.Установить(Схема, Настройки["СерверПрокси"], Настройки["ПортПрокси"], ПользовательПрокси, ПарольПрокси, Ложь);
        
    КонецЕсли;
    
    Возврат ПроксиСервер;
    
КонецФункции

Функция СтрокаВБайтыUTF8(Строка)
    
    ИмяФайла = ПолучитьИмяВременногоФайла("txt");
    ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.ANSI);
    ЗаписьТекста.Закрыть();
    
    ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.UTF8,"",Истина,"");
    ЗаписьТекста.Записать(Строка);
    ЗаписьТекста.Закрыть();
        
    БайтыUTF8 = Новый ДвоичныеДанные(ИмяФайла);
    УдалитьФайлы(ИмяФайла);
    
    Возврат БайтыUTF8; 
    
КонецФункции

#КонецОбласти