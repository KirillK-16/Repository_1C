////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Заполняет поле ИсключительнаяСитуация переданных строк по содержимому справочника ИсключительныеСитуации
// При отсутствии подходящей записи она создается
//
// Параметры
//  ЗаписиЖурнала - РегистрСведенийНаборЗаписей.ЖурналРегистрации - набор записей для заполнения
//
Процедура СобратьИсключения(Знач ЗаписиЖурнала) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ *
		|ПОМЕСТИТЬ ЗаписиЖурнала
		|ИЗ
		|	&ЗаписиЖурнала КАК ЗаписиЖурнала
		|ГДЕ
		|	ЗаписиЖурнала.ТипВСтроку = ""EXCP""";
	Запрос.УстановитьПараметр("ЗаписиЖурнала", ЗаписиЖурнала);
	Запрос.Выполнить();
	
	ЗаписиЖурнала.Индексы.Добавить("УникальныйИдентификатор");
	
	Результат = ПолучитьСовпадения(МенеджерВременныхТаблиц, ЗаписиЖурнала, Перечисления.ВидыКритериев.СтекРавен, "Контекст");
	ОбщийКлиентСервер.ОбъединитьТаблицы(Результат, ПолучитьСовпадения(МенеджерВременныхТаблиц, ЗаписиЖурнала, Перечисления.ВидыКритериев.ТекстИсключенияРавен, "ТекстИсключения"));
	ОбщийКлиентСервер.ОбъединитьТаблицы(Результат, ПолучитьСовпадения(МенеджерВременныхТаблиц, ЗаписиЖурнала, Перечисления.ВидыКритериев.ТекстИсключенияСодержитСтроку));
	ОбщийКлиентСервер.ОбъединитьТаблицы(Результат, ПолучитьСовпадения(МенеджерВременныхТаблиц, ЗаписиЖурнала, Перечисления.ВидыКритериев.ТекстИсключенияНеСодержитСтроку));
	ОбщийКлиентСервер.ОбъединитьТаблицы(Результат, ПолучитьСовпадения(МенеджерВременныхТаблиц, ЗаписиЖурнала, Перечисления.ВидыКритериев.КодИсключенияРавен));
	ОбщийКлиентСервер.ОбъединитьТаблицы(Результат, ПолучитьСовпадения(МенеджерВременныхТаблиц, ЗаписиЖурнала, Перечисления.ВидыКритериев.КлиентскоеПриложениеРавно));
	
	Результат.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Результат.ЗаполнитьЗначения(1, "Количество");
	Результат.Свернуть("УсловиеСсылка, УникальныйИдентификатор", "Количество");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Результаты.УсловиеСсылка,
		|	Результаты.УникальныйИдентификатор,
		|	Результаты.Количество
		|ПОМЕСТИТЬ Совпадения
		|ИЗ
		|	&Результаты КАК Результаты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УсловияИсключительныхСитуацийКритерии.Ссылка.Владелец КАК ИсключениеСсылка,
		|	Совпадения.УникальныйИдентификатор
		|ИЗ
		|	Совпадения КАК Совпадения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УсловияИсключительныхСитуаций.Критерии КАК УсловияИсключительныхСитуацийКритерии
		|		ПО Совпадения.УсловиеСсылка = УсловияИсключительныхСитуацийКритерии.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	УсловияИсключительныхСитуацийКритерии.Ссылка,
		|	Совпадения.УникальныйИдентификатор,
		|	Совпадения.Количество,
		|	УсловияИсключительныхСитуацийКритерии.Ссылка.Владелец
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(*) = Совпадения.Количество";
		
	Запрос.УстановитьПараметр("Результаты", Результат);
	Выборка = Запрос.Выполнить().Выбрать();
	УсловияОтбора = Новый Структура("УникальныйИдентификатор");
	Пока Выборка.Следующий() Цикл
		УсловияОтбора.УникальныйИдентификатор = Выборка.УникальныйИдентификатор;
		ЗаписиЖурнала.НайтиСтроки(УсловияОтбора)[0].ИсключительнаяСитуация = Выборка.ИсключениеСсылка;
	КонецЦикла;
	
	Для Каждого Строка Из ЗаписиЖурнала Цикл
		
		Если Не ЗначениеЗаполнено(Строка.ИсключительнаяСитуация)
			И Строка.ТипВСтроку = "EXCP" Тогда
			СоздатьНовоеИсключение(ЗаписиЖурнала, Строка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Поиск Условий исключительных ситуаций, которые по одному критерию совпадают с переданными строками техжурнала
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
//  ЗаписиЖурнала - РегистрСведенийНаборЗаписей.ЖурналРегистрации
//  ВидКритерия - ПеречислениеСсылка.ВидыКритериев
//  ИмяРеквизита - для критериев, поиск по которым осуществляется по хешу - имя поля регистра ТехнологическийЖурнал,
//   хранящего значение
//
// Возвращаемое значение:
//  ТаблицаЗначений
//
Функция ПолучитьСовпадения(Знач МенеджерВременныхТаблиц, Знач ЗаписиЖурнала, Знач ВидКритерия, Знач ИмяРеквизита = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Критерии.Ссылка КАК УсловиеСсылка,
		|	ЗаписиЖурнала.УникальныйИдентификатор КАК УникальныйИдентификатор
		|   %1
		|ИЗ
		|	Справочник.УсловияИсключительныхСитуаций.Критерии КАК Критерии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаписиЖурнала КАК ЗаписиЖурнала
		|		ПО %2
		|ГДЕ
		|	Критерии.Вид = &ВидКритерия";

	Запрос.УстановитьПараметр("ВидКритерия", ВидКритерия);
	ВыбиратьЗначение = Ложь;
	Если ВидКритерия = Перечисления.ВидыКритериев.СтекРавен Тогда
		Замена = "Критерии.ЗначениеCRC32 = ЗаписиЖурнала.КонтекстХэш";
		ВыбиратьЗначение = Истина;
	ИначеЕсли ВидКритерия = Перечисления.ВидыКритериев.ТекстИсключенияРавен Тогда
		Замена = "Критерии.ЗначениеCRC32 = ЗаписиЖурнала.ТекстИсключенияХэш";
		ВыбиратьЗначение = Истина;
	ИначеЕсли ВидКритерия = Перечисления.ВидыКритериев.ТекстИсключенияСодержитСтроку Тогда
		Замена = "ЗаписиЖурнала.ТекстИсключения ПОДОБНО ""%"" + ПОДСТРОКА(Критерии.Значение, 1, 100) + ""%""";
	ИначеЕсли ВидКритерия = Перечисления.ВидыКритериев.ТекстИсключенияНеСодержитСтроку Тогда
		Замена = "ЗаписиЖурнала.ТекстИсключения НЕ ПОДОБНО ""%"" + ПОДСТРОКА(Критерии.Значение, 1, 100) + ""%""";
	ИначеЕсли ВидКритерия = Перечисления.ВидыКритериев.КодИсключенияРавен Тогда
		Замена = "ПОДСТРОКА(Критерии.Значение, 1, 100) = ЗаписиЖурнала.КодИсключения";
	ИначеЕсли ВидКритерия = Перечисления.ВидыКритериев.КлиентскоеПриложениеРавно Тогда
		Замена = "ПОДСТРОКА(Критерии.Значение, 1, 80) = ЗаписиЖурнала.КлиентскоеПриложение";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", ?(ВыбиратьЗначение, ", Критерии.Значение КАК Значение", ""));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%2", Замена);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если ВыбиратьЗначение Тогда
		
		УдалитьНесовпадающие(Результат, ЗаписиЖурнала, ИмяРеквизита);
		Результат.Колонки.Удалить("Значение");
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Поиск строк, совпадающий по хешу значения, но отличающихся по самому значению
//
// Параметры:
//  НайденныеУсловия - ТаблицаЗначений
//  ЗаписиЖурнала - РегистрСведенийНаборЗаписей.ЖурналРегистрации
//  ИмяРеквизита - Строка
//
Процедура УдалитьНесовпадающие(Знач НайденныеУсловия, Знач ЗаписиЖурнала, Знач ИмяРеквизита)
	
	СтруктураПоиска = Новый Структура("УникальныйИдентификатор");
	Индекс = НайденныеУсловия.Количество() - 1;
	
	Пока Индекс >= 0 Цикл
		
		СтрокаСовпадений = НайденныеУсловия[Индекс];
		СтруктураПоиска.УникальныйИдентификатор = СтрокаСовпадений.УникальныйИдентификатор;
		Если ЗаписиЖурнала.НайтиСтроки(СтруктураПоиска)[0][ИмяРеквизита] <> СтрокаСовпадений.Значение Тогда
			
			НайденныеУсловия.Удалить(Индекс);
			
		КонецЕсли;
		
		Индекс = Индекс - 1;
		
	КонецЦикла;
КонецПроцедуры

// Создает новую запись справочника ИсключительныеСитуации для указанной строки технологического журнала.
// При этом остальные записи техжуранала просматриваются и, при совпадении условий, относятся к новому исключению
//
// Параметры:
//  ЗаписиЖурнала - РегистрСведенийНаборЗаписей.ЖурналРегистрации
//  СтрокаЖурнала - РегистрСведенийЗапись.ЖурналРегистрации
//
Процедура СоздатьНовоеИсключение(Знач ЗаписиЖурнала, Знач СтрокаЖурнала)
	
	ИсключительнаяСитуация = Справочники.ИсключительныеСитуации.СоздатьЭлемент();
	ИсключительнаяСитуация.Важность = Перечисления.ВажностьСобытия.Обычная;
	ИсключительнаяСитуация.Вид = Справочники.ВидыИсключительныхСитуаций.Ошибка;
	Если ЗначениеЗаполнено(СтрокаЖурнала.ТекстИсключения) Тогда
		ИсключительнаяСитуация.Наименование = СтрЗаменить(СтрокаЖурнала.ТекстИсключения, Символы.ПС, " ");
	ИначеЕсли ЗначениеЗаполнено(СтрокаЖурнала.Контекст) Тогда
		ИсключительнаяСитуация.Наименование = СокрЛП(СтрПолучитьСтроку(СтрокаЖурнала.Контекст, СтрЧислоСтрок(СтрокаЖурнала.Контекст)));
	Иначе
		ИсключительнаяСитуация.Наименование = "<Нет контекста и текста исключения>";
	КонецЕсли;
	ИсключительнаяСитуация.Записать();
	
	Условие = Справочники.УсловияИсключительныхСитуаций.СоздатьЭлемент();
	Условие.Владелец = ИсключительнаяСитуация.Ссылка;
	
	Критерий = Условие.Критерии.Добавить();
	Если ЗначениеЗаполнено(СтрокаЖурнала.Контекст) Тогда
		Критерий.Вид = Перечисления.ВидыКритериев.СтекРавен;
		Критерий.Значение = СтрокаЖурнала.Контекст;
		Критерий.ЗначениеCRC32 = СтрокаЖурнала.КонтекстХэш;
		Отбор = Новый Структура("Контекст, ИсключительнаяСитуация, Дубликат, Тип", СтрокаЖурнала.Контекст, СтрокаЖурнала.ИсключительнаяСитуация, СтрокаЖурнала.Дубликат, СтрокаЖурнала.Тип);
	ИначеЕсли ЗначениеЗаполнено(СтрокаЖурнала.ТекстИсключения) Тогда
		Критерий.Вид = Перечисления.ВидыКритериев.ТекстИсключенияРавен;
		Критерий.Значение = СтрокаЖурнала.ТекстИсключения;
		Критерий.ЗначениеCRC32 = СтрокаЖурнала.ТекстИсключенияХэш;
		Отбор = Новый Структура("ТекстИсключения, ИсключительнаяСитуация, Дубликат, Тип", СтрокаЖурнала.ТекстИсключения, СтрокаЖурнала.ИсключительнаяСитуация, СтрокаЖурнала.Дубликат, СтрокаЖурнала.Тип);
	Иначе
		Критерий.Вид = Перечисления.ВидыКритериев.ТекстИсключенияРавен;
		Критерий.Значение = "";
		Критерий.ЗначениеCRC32 = СтрокаЖурнала.ТекстИсключенияХэш;
		
		Критерий = Условие.Критерии.Добавить();
		Критерий.Вид = Перечисления.ВидыКритериев.СтекРавен;
		Критерий.Значение = "";
		Критерий.ЗначениеCRC32 = СтрокаЖурнала.КонтекстХэш;
		Отбор = Новый Структура("Контекст, ТекстИсключения, ИсключительнаяСитуация, Дубликат, Тип", 
			"", "", СтрокаЖурнала.ИсключительнаяСитуация, СтрокаЖурнала.Дубликат, СтрокаЖурнала.Тип);
	КонецЕсли;
	
	Условие.ОбменДанными.Загрузка = Истина;
	Условие.Записать();
	
	Строки = ЗаписиЖурнала.НайтиСтроки(Отбор);
	Для Каждого Строка Из ЗаписиЖурнала.НайтиСтроки(Отбор) Цикл
		Строка.ИсключительнаяСитуация = ИсключительнаяСитуация.Ссылка;
	КонецЦикла;
	
КонецПроцедуры

