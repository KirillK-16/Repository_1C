////////////////////////////////////////////////////////////////////////////////
// Серверные методы, используемые на сервере при работе контроля производительности
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ВыполнитьАнализ(КонтрольнаяПроцедура) Экспорт
    
    Настройки = РегистрыСведений.ПараметрыРабочихСерверов.Получить(Новый Структура("ОбъектКонтроля", КонтрольнаяПроцедура.ОбъектКонтроля));
	ЧастныеНастройкиСловарь = РегистрыСведений.НастройкиКонтрольЧислаИсключений.Получить(Новый Структура("КонтрольнаяПроцедура", КонтрольнаяПроцедура));
    
	Настройки.Вставить("КаталогТЖСетевой", ЧастныеНастройкиСловарь.КаталогТЖСетевой);
	Настройки.Вставить("КаталогВременныхФайлов", ЧастныеНастройкиСловарь.КаталогВременныхФайлов);
    
	НастроитьСобытияПоТехнологическомуЖурналу(КонтрольнаяПроцедура);
	ПрочитатьТехнологическийЖурнал(КонтрольнаяПроцедура, Настройки);
	
КонецПроцедуры

Процедура НастроитьСобытияПоТехнологическомуЖурналу(КонтрольнаяПроцедура)
	Параметры = Новый Структура;
	Параметры.Вставить("КонтрольЧислаИсключений", Новый Массив);

	ТехнологическийЖурнал.ОбновитьФайлНастроекТехнологическогоЖурнала(КонтрольнаяПроцедура.ОбъектКонтроля, Новый Структура("КодыКонтрольныхПроцедур",Параметры));
	НетПроблем = Истина;
КонецПроцедуры

Процедура ПрочитатьТехнологическийЖурнал(КонтрольнаяПроцедура, Настройки)
	КаталогТЖСетевойПроверка = Новый Файл(Настройки.КаталогТЖСетевой);
	КаталогВременныхФайловПроверка = Новый Файл(Настройки.КаталогВременныхФайлов);
	
	Если НЕ КаталогТЖСетевойПроверка.Существует() Тогда
		НетПроблем = Неопределено;
		
		ИмяСтраницыСправки = "";
		Сообщение = НСтр("ru = 'Не найден сетевой каталог технологического журнала """ + Настройки.КаталогТЖСетевой + """'");
	КонецЕсли;
	
	КлючФоновогоЗадания = "КонтрольЧислаИсключений__КлючЗаданияИмпортаЖурнала__%ИдентификаторПроцедуры";
	ИдентификаторПроцедуры = Строка(КонтрольнаяПроцедура.УникальныйИдентификатор());
	КлючФоновогоЗадания = СтрЗаменить(КлючФоновогоЗадания, "%ИдентификаторПроцедуры", ИдентификаторПроцедуры);
	
	ЗаданияПоРазборуЖурналаВФоне = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура(
		"Ключ, Состояние",
		КлючФоновогоЗадания, СостояниеФоновогоЗадания.Активно
		
	));
	Если ЗаданияПоРазборуЖурналаВФоне.Количество() > 0 Тогда
		Отладка.Информация("Разбор технологического журнала еще не окончен!");
	Иначе
		ПараметрыИмпорта = Новый Массив;
		ПараметрыИмпорта.Добавить(КонтрольнаяПроцедура);
		ПараметрыИмпорта.Добавить(Общий.УникальныйКаталогДляКонтрольнойПроцедуры(КонтрольнаяПроцедура, Настройки.КаталогТЖСетевой));
		ПараметрыИмпорта.Добавить(Истина);
		ПараметрыИмпорта.Добавить(Настройки.КаталогВременныхФайлов);
		ФоновыеЗадания.Выполнить("ИмпортТехжурнала.ИмпортироватьТехЖурнал", ПараметрыИмпорта, КлючФоновогоЗадания);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОбновлении() Экспорт
	
КонецПроцедуры

// Включить генерацию дампов при аварийном завершении.
// Параметры - Тип Структура с полями Сетевой, Локальный, Конфигурация, УровеньДетализацииДампов
//
Функция НастроитьТЖ(Параметры) Экспорт
	
	Данные = ТехнологическийЖурнал.КонфигурацияИсключения(Параметры);
	
	Если ТехнологическийЖурнал.НужнаЗаменаТЖ(Данные, Параметры.Конфигурация, Параметры.ЛокальныйУникальный) Тогда 
		
		Комментарий = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации("КонтрольЧислаИсключений",	УровеньЖурналаРегистрации.Ошибка,,,Комментарий);
		
		locations = Новый Соответствие;
		Если Параметры.Свойство("ПеремещенияЛогов") Тогда
			locations.Вставить("log", Параметры["ЛокальныйУникальный"]);
		Иначе
			locations.Вставить("log", Параметры["Локальный"]);
		КонецЕсли;
		
		ТехнологическийЖурнал.ОтключитьТехнологическийЖурнал(Параметры.Конфигурация, locations, Параметры);
		
		Если Параметры.Свойство("ОтключениеТЖ") Тогда
			Если Параметры["ОтключениеТЖ"] Тогда
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		
		НастройкиТЖ = Новый Массив;
		НастройкиТЖ.Добавить(Параметры);
		
		Описатель = ТехнологическийЖурнал.ВключитьТехнологическийЖурнал(
		Данные,
		НастройкиТЖ
		);
		
		Возврат Описатель;
    Иначе
        Если Параметры.Свойство("ОтключениеТЖ") Тогда
            Если Параметры["ОтключениеТЖ"] Тогда
                locations = Новый Соответствие;
                Если Параметры.Свойство("ПеремещенияЛогов") Тогда
                    locations.Вставить("log", Параметры["ЛокальныйУникальный"]);
                Иначе
                    locations.Вставить("log", Параметры["Локальный"]);
                КонецЕсли;
                ТехнологическийЖурнал.ОтключитьТехнологическийЖурнал(Параметры.Конфигурация, locations, Параметры);
            КонецЕсли;
        КонецЕсли;
    КонецЕсли;
    
КонецФункции 

