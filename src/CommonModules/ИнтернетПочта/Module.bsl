
#Область ПрограммныйИнтерфейс

// Генерирует набор констант для управления настройками ИнтернетПочты
//
// Возвращаемое значение:
// 	КонстантыНабор - набор констант для управления настройками ИнтернетПочты.
//
Функция ПолучитьСистемнуюУчетнуюЗапись() Экспорт
	
	ПараметрыОтправкиСообщений = Константы.СоздатьНабор(ИменаПараметровУчетнойЗаписи());
	ПараметрыОтправкиСообщений.Прочитать();
	
	ПараметрыОтправкиСообщенийСтруктура = Новый Структура;
	Для Каждого ТекКонстанта Из Метаданные.Константы Цикл
		ПараметрыОтправкиСообщенийСтруктура.Вставить(ТекКонстанта.Имя, ПараметрыОтправкиСообщений[ТекКонстанта.Имя]); 
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеХранилища = РегистрыСведений.БезопасноеХранилище.ПолучитьДанные("НастройкиОтправки");
	УстановитьПривилегированныйРежим(Ложь);
	
	ПараметрыОтправкиСообщенийСтруктура.Вставить("ПользовательSMTP", ДанныеХранилища.ПользовательSMTP); 
	ПараметрыОтправкиСообщенийСтруктура.Вставить("ПарольSMTP", ДанныеХранилища.ПарольSMTP); 
		
	Возврат ПараметрыОтправкиСообщенийСтруктура;
	
КонецФункции

// Выполняет анализ учетной записи и возвращает интернет профиль 
//
// Параметры:
//  УчетнаяЗапись	- Структура со свойствами:
//	  * ФормироватьSMTPПрофиль- Булево - заполнять SMTP настройки профиля.
//	  * ФормироватьPOP3Профиль- Булево - заполнять POP3 настройки профиля.
//
// Возвращаемое значение:
//  ИнтернетПочтовыйПрофиль
//
Функция СформироватьИнтернетПрофиль(Знач УчетнаяЗапись) Экспорт
	
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	
	Если УчетнаяЗапись.POP3НастройкиАктуальны Тогда
		Профиль.Пользователь = УчетнаяЗапись.ЛогинПочта;	
		Профиль.Пароль = УчетнаяЗапись.ПарольПочта;	
		
		Профиль.АдресСервераPOP3 = УчетнаяЗапись.СерверВходящейПочтыPOP3;
		Профиль.ПортPOP3 = УчетнаяЗапись.ПортPOP3;
		
		Если УчетнаяЗапись.СпособPOP3Аутентификации = Перечисления.СпособыPOP3Аутентификации.APOP Тогда
			Профиль.АутентификацияPOP3 = СпособPOP3Аутентификации.APOP;
		ИначеЕсли УчетнаяЗапись.СпособPOP3Аутентификации = Перечисления.СпособыPOP3Аутентификации.CramMD5 Тогда
			Профиль.АутентификацияPOP3 = СпособPOP3Аутентификации.CramMD5;
		Иначе
			Профиль.АутентификацияPOP3 = СпособPOP3Аутентификации.Обычная;
		КонецЕсли;
	КонецЕсли;
	
	Если УчетнаяЗапись.SMTPНастройкиАктуальны Тогда
		Профиль.АдресСервераSMTP = УчетнаяЗапись.СерверИсходящейПочтыSMTP;
		Профиль.ПортSMTP = УчетнаяЗапись.ПортSMTP;
		
		Если УчетнаяЗапись.SMTPАутентификация = Перечисления.ВариантыSMTPАутентификации.АналогичноPOP3 Тогда
			Профиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
			Профиль.ПользовательSMTP = УчетнаяЗапись.ЛогинПочта;
			Профиль.ПарольSMTP = Профиль.Пароль;
		ИначеЕсли УчетнаяЗапись.SMTPАутентификация = Перечисления.ВариантыSMTPАутентификации.ЗадаетсяПараметрами Тогда
			Если УчетнаяЗапись.СпособSMTPАутентификации = Перечисления.СпособыSMTPАутентификации.CramMD5 Тогда
				Профиль.АутентификацияSMTP = СпособSMTPАутентификации.CramMD5;
			ИначеЕсли УчетнаяЗапись.СпособSMTPАутентификации = Перечисления.СпособыSMTPАутентификации.Login Тогда
				Профиль.АутентификацияSMTP = СпособSMTPАутентификации.Login;
			ИначеЕсли УчетнаяЗапись.СпособSMTPАутентификации = Перечисления.СпособыSMTPАутентификации.Plain Тогда
				Профиль.АутентификацияSMTP = СпособSMTPАутентификации.Plain;
			ИначеЕсли УчетнаяЗапись.СпособSMTPАутентификации = Перечисления.СпособыSMTPАутентификации.БезАутентификации Тогда
				Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
			Иначе
				Профиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
			КонецЕсли;
			
			Профиль.ПользовательSMTP = УчетнаяЗапись.ПользовательSMTP;
			Профиль.ПарольSMTP = УчетнаяЗапись.ПарольSMTP;
		ИначеЕсли УчетнаяЗапись.SMTPАутентификация = Перечисления.ВариантыSMTPАутентификации.POP3ПередSMTP Тогда
			Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
			Профиль.POP3ПередSMTP = Истина;
		Иначе
			Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
		КонецЕсли;
	КонецЕсли;
		
	Возврат Профиль;
	
КонецФункции

// Процедура для отправки почтовых сообщений
//
// Параметры:
//  АдресЭлектроннойПочты	 - Строка - адрес электнонной почты для отправка.
//  Тема					 - Строка - тема электронного письма.
//  ТекстПисьма				 - Строка - текст электронного письма. 
//  Соединение				 - ИнтернетПочта - объект ИнтерентПочта с уже установленным соединением.
//
Процедура ОтправитьПочтовоеСообщение(АдресЭлектроннойПочты, Тема, ТекстПисьма, Соединение = Неопределено, ПараметрыОтправителя = Неопределено) Экспорт

	Если Соединение = Неопределено Тогда
		УчетнаяЗапись = ИнтернетПочта.ПолучитьСистемнуюУчетнуюЗапись();
		Соединение = ИнтернетПочтаУстановитьСоединение(УчетнаяЗапись);
	КонецЕсли;
	
	Если Соединение <> Неопределено Тогда
		ПараметрыОтправки = СформироватьСтруктуруПараметровОтправки();
		
		СтруктураАдреса = СформироватьСтруктуруПочтовогоАдреса(АдресЭлектроннойПочты, "");
		
		Если ПараметрыОтправителя <> Неопределено Тогда	
			ПараметрыОтправки.ИмяОтправителя = ПараметрыОтправителя.ИмяОтправителя; 
			ПараметрыОтправки.Отправитель = ПараметрыОтправителя.ОбратныйАдрес;
		КонецЕсли;
		
		ПараметрыОтправки.Получатели.Добавить(СтруктураАдреса);
		ПараметрыОтправки.Кодировка = "windows-1251";
		
		ПараметрыОтправки.Тема = Тема;
		
		СтруктураТекста = СформироватьСтруктуруТекстаПочтовогоСообщения(
		Перечисления.ТипыТекстовПочтовыхСообщений.ПростойТекст, ТекстПисьма, "windows-1251");
		
		ПараметрыОтправки.Тексты.Добавить(СтруктураТекста);
		
		СообщениеОбОшибке = "";
		Если Не ОтправитьСообщениеОбщийМеханизм(Соединение, ПараметрыОтправки, СообщениеОбОшибке) Тогда
			ВызватьИсключение СообщениеОбОшибке;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Проверяет учетную запись на правильность заполнения параметров
//
// Параметры:
//  УчетнаяЗапись - Структура
//  ПочтовыйАдрес - Строка, Неопределено - адрес, если заполнен, куда будет отправлено тестовое письмо
//
// Возвращаемое значение:
//  Структура с следующими ключами 
//		Соединение, ОшибкаПриСоединении, Отправка, ОшибкаПриОтправке, Получение, ОшибкаПриПолучении
//		Значения структуры имеют тип Булево и равны Истина, если соответствующая ключу проверка прошла
//		успешно 
//
Функция ПроверитьУчетнуюЗапись(УчетнаяЗапись, ПочтовыйАдрес = "") Экспорт
	
	Результат = Новый Структура("Соединение, ОшибкаПриСоединении, Отправка, ОшибкаПриОтправке, Получение, ОшибкаПриПолучении");
		
	// Установка соединения
	СообщениеОбОшибке = "";
	Соединение = ИнтернетПочтаУстановитьСоединение(УчетнаяЗапись, СообщениеОбОшибке);
	Если Соединение = Неопределено Тогда
		Результат.Соединение = Ложь;
		Результат.ОшибкаПриСоединении = СообщениеОбОшибке;
		Возврат Результат;
	КонецЕсли;
	
	Результат.Соединение = Истина;
	
	Результат.Отправка = Истина;
	Если НЕ ПустаяСтрока(ПочтовыйАдрес) И УчетнаяЗапись.SMTPНастройкиАктуальны Тогда
		Попытка
			
			Тема = НСтр("ru = 'Тестовое письмо (Центр Контроля Качества)'");	
			ТекстПисьма = НСтр("ru = 'Это письмо отправлено из конфигурации ЦКК для проверки учетной записи.
				|Не отвечайте на это письмо'");

			ИнтернетПочта.ОтправитьПочтовоеСообщение(ПочтовыйАдрес, Тема, ТекстПисьма, Соединение, 
				Новый Структура("ИмяОтправителя, ОбратныйАдрес", УчетнаяЗапись.ИмяЭтогоЦКК, УчетнаяЗапись.ОбратныйАдресЭлектроннойПочты));
		Исключение
			Комментарий = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации("Проверка учетной записи ИнтернетПочта", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ИнтернетПочта,,Комментарий);
			
			Результат.Отправка = Ложь;
			Результат.ОшибкаПриОтправке = Комментарий;
		КонецПопытки;		
	КонецЕсли;
	
	Если УчетнаяЗапись.POP3НастройкиАктуальны Тогда
		Попытка
			// Получение идентификаторов всех сообщений в почтовом ящике
			СообщениеОбОшибке = "";
			Идентификаторы = ПолучитьИдентификаторыВходящихСообщений(Соединение,,, СообщениеОбОшибке);
			Если Идентификаторы = Неопределено Тогда
				ВызватьИсключение СообщениеОбОшибке;
			КонецЕсли;
			
			Результат.Получение = Истина;
		Исключение
			Комментарий = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации("Проверка учетной записи ИнтернетПочта", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ИнтернетПочта,,Комментарий);
			
			Результат.Получение = Ложь;
			Результат.ОшибкаПриПолучении = Комментарий;
		КонецПопытки;
	КонецЕсли;
	
	Соединение.Отключиться();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИменаПараметровУчетнойЗаписи()
	Возврат "СерверИсходящейПочтыSMTP, ПортSMTP, 
		|SMTPАутентификация, СпособSMTPАутентификации,
		|СерверВходящейПочтыPOP3, ПортPOP3, АдресЭлектроннойПочты,
		|ЛогинПочта, ПарольПочта,
		|СпособPOP3Аутентификации,
		|ИмяЭтогоЦКК, SMTPНастройкиАктуальны, POP3НастройкиАктуальны";
КонецФункции

Функция ИнтернетПочтаУстановитьСоединение(Знач УчетнаяЗапись, СообщениеОбОшибке = Неопределено)
	
	СообщениеОбОшибке = "";	
	
	Попытка
		Профиль = ИнтернетПочта.СформироватьИнтернетПрофиль(УчетнаяЗапись);
		Соединение = Новый ИнтернетПочта;
		Соединение.Подключиться(Профиль);
	Исключение
		СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(СообщениеОбОшибке, УровеньЖурналаРегистрации.Предупреждение, Метаданные.ОбщиеМодули.ИнтернетПочта,,);
		Соединение = Неопределено;
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

Функция СформироватьСтруктуруПараметровОтправки()
	
	ПараметрыОтправки = Новый Структура;
	ПараметрыОтправки.Вставить("ИмяОтправителя", "");
	ПараметрыОтправки.Вставить("Кодировка", "");
	ПараметрыОтправки.Вставить("Отправитель", Неопределено);
	ПараметрыОтправки.Вставить("Получатели", Новый Массив);
	ПараметрыОтправки.Вставить("СпособКодированияНеASCIIСимволов", 0);
	ПараметрыОтправки.Вставить("Тексты", Новый Массив);
	ПараметрыОтправки.Вставить("Тема", "");
	ПараметрыОтправки.Вставить("ПоляЗаголовка", Новый Массив);
	
	Возврат ПараметрыОтправки;
	
КонецФункции

Функция СформироватьСтруктуруПочтовогоАдреса(Адрес, ОтображаемоеИмя)
	
	Возврат Новый Структура("Адрес, ОтображаемоеИмя", Адрес, ОтображаемоеИмя);
	
КонецФункции

Функция СформироватьСтруктуруТекстаПочтовогоСообщения(ТипТекста, Текст, Кодировка)
	
	Возврат Новый Структура("ТипТекста, Текст, Кодировка", ТипТекста, Текст, Кодировка);
	
КонецФункции

Функция ОтправитьСообщениеОбщийМеханизм(Соединение, ПараметрыОтправки, СообщениеОбОшибке = Неопределено)
	
	СообщениеОбОшибке = "";
	
	Попытка
	
		ИнтернетПочтовоеСообщение = Новый ИнтернетПочтовоеСообщение;
							
		Если ПараметрыОтправки.Свойство("ИмяОтправителя") И ЗначениеЗаполнено(ПараметрыОтправки.ИмяОтправителя) Тогда
			ИнтернетПочтовоеСообщение.ИмяОтправителя = ПараметрыОтправки.ИмяОтправителя;
			ИнтернетПочтовоеСообщение.Отправитель.Адрес = ПараметрыОтправки.Отправитель; 
		КонецЕсли;
		
		Если ПараметрыОтправки.Свойство("Кодировка") И ЗначениеЗаполнено(ПараметрыОтправки.Кодировка) Тогда
			ИнтернетПочтовоеСообщение.Кодировка = ПараметрыОтправки.Кодировка;
		КонецЕсли;
				
		Для каждого СтруктураПочтовогоАдреса Из ПараметрыОтправки.Получатели Цикл
			ИнтернетПочтовыеАдресаДобавитьПочтовыйАдрес(ИнтернетПочтовоеСообщение.Получатели, СтруктураПочтовогоАдреса);
		КонецЦикла;
				
		Если ПараметрыОтправки.Свойство("СпособКодированияНеASCIIСимволов") И ЗначениеЗаполнено(ПараметрыОтправки.СпособКодированияНеASCIIСимволов) Тогда
			ИнтернетПочтовоеСообщение.СпособКодированияНеASCIIСимволов = ПараметрыОтправки.СпособКодированияНеASCIIСимволов;
		КонецЕсли;
		
		Для Каждого СтруктураТекста Из ПараметрыОтправки.Тексты Цикл
			ИнтернетПочтовоеСообщениеДобавитьТекст(ИнтернетПочтовоеСообщение, СтруктураТекста);
		КонецЦикла;
		
		ИнтернетПочтовоеСообщение.Тема = ПараметрыОтправки.Тема;
		
		Если ПараметрыОтправки.Свойство("УведомитьОДоставке") И ЗначениеЗаполнено(ПараметрыОтправки.УведомитьОДоставке) Тогда
			ИнтернетПочтовоеСообщение.УведомитьОДоставке = ПараметрыОтправки.УведомитьОДоставке;
			Если ПараметрыОтправки.Свойство("Отправитель") И ЗначениеЗаполнено(ПараметрыОтправки.Отправитель) Тогда
				ИнтернетПочтовыеАдресаДобавитьПочтовыйАдрес(ИнтернетПочтовоеСообщение.АдресаУведомленияОДоставке, ПараметрыОтправки.Отправитель);
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыОтправки.Свойство("УведомитьОПрочтении") И ЗначениеЗаполнено(ПараметрыОтправки.УведомитьОПрочтении) Тогда
			ИнтернетПочтовоеСообщение.УведомитьОПрочтении = ПараметрыОтправки.УведомитьОПрочтении;
			Если ПараметрыОтправки.Свойство("Отправитель") 	И ЗначениеЗаполнено(ПараметрыОтправки.Отправитель) Тогда
				ИнтернетПочтовыеАдресаДобавитьПочтовыйАдрес(ИнтернетПочтовоеСообщение.АдресаУведомленияОПрочтении, ПараметрыОтправки.Отправитель);
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого ПолеЗаголовка Из ПараметрыОтправки.ПоляЗаголовка Цикл
			ИнтернетПочтовоеСообщение.УстановитьПолеЗаголовка(ПолеЗаголовка.ИмяПоля, ПолеЗаголовка.ЗначениеПоля, ПолеЗаголовка.СпособКодирования);
		КонецЦикла;
				
		Соединение.Послать(ИнтернетПочтовоеСообщение);
	Исключение
		Комментарий = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации("Отправка ИнтернетПочта", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ИнтернетПочта,,Комментарий);
		СообщениеОбОшибке = Комментарий;
		
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Процедура ИнтернетПочтовыеАдресаДобавитьПочтовыйАдрес(ИнтернетПочтовыеАдреса, СтруктураПочтовогоАдреса)
	
	ИнтернетПочтовыйАдрес = ИнтернетПочтовыеАдреса.Добавить();
	ЗаполнитьИнтернетПочтовыйАдресИзСтруктурыПочтовогоАдреса(ИнтернетПочтовыйАдрес, СтруктураПочтовогоАдреса);
	
КонецПроцедуры

Процедура ИнтернетПочтовоеСообщениеДобавитьТекст(ИнтернетПочтовоеСообщение, СтруктураТекста)
	
	ТипТекста = Перечисления.ТипыТекстовПочтовыхСообщений.ПростойТекст;
	Если СтруктураТекста.Свойство("ТипТекста") И ЗначениеЗаполнено(СтруктураТекста.ТипТекста) Тогда
		ТипТекста = СтруктураТекста.ТипТекста;
	КонецЕсли;
	
	Текст = СтруктураТекста.Текст;
	
	ИнтернетТекстПочтовогоСообщения = ИнтернетПочтовоеСообщение.Тексты.Добавить(Текст, ПолучитьТипТекстаПочтовогоСообщенияДляИнтернетПочтовогоСообщения(ТипТекста));
	Если ЗначениеЗаполнено(СтруктураТекста.Кодировка) Тогда
		ИнтернетТекстПочтовогоСообщения.Кодировка = СтруктураТекста.Кодировка;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИнтернетПочтовыйАдресИзСтруктурыПочтовогоАдреса(ИнтернетПочтовыйАдрес, СтруктураПочтовогоАдреса)
	
	ОтображаемоеИмя = СтруктураПочтовогоАдреса.ОтображаемоеИмя;
	
	АдресИнфо = ОбщийКлиентСервер.РазложитьПредставлениеАдресаЭлектроннойПочты(ОтображаемоеИмя);
	Если ЗначениеЗаполнено(АдресИнфо.Адрес) И ЗначениеЗаполнено(АдресИнфо.ОтображаемоеИмя) Тогда
		ОтображаемоеИмя = АдресИнфо.ОтображаемоеИмя;
	КонецЕсли;	
	
	Если СтруктураПочтовогоАдреса.Свойство("Адрес") И ЗначениеЗаполнено(СтруктураПочтовогоАдреса.Адрес) Тогда
		ИнтернетПочтовыйАдрес.Адрес = СтруктураПочтовогоАдреса.Адрес;
	КонецЕсли;
	
	Если СтруктураПочтовогоАдреса.Свойство("Кодировка") И ЗначениеЗаполнено(СтруктураПочтовогоАдреса.Кодировка) Тогда
		ИнтернетПочтовыйАдрес.Кодировка = СтруктураПочтовогоАдреса.Кодировка;
	КонецЕсли;
	
	Если СтруктураПочтовогоАдреса.Свойство("ОтображаемоеИмя") И ЗначениеЗаполнено(ОтображаемоеИмя) Тогда
		ИнтернетПочтовыйАдрес.ОтображаемоеИмя = ОтображаемоеИмя;
	КонецЕсли;
	
	Если СтруктураПочтовогоАдреса.Свойство("Пользователь") И ЗначениеЗаполнено(СтруктураПочтовогоАдреса.Пользователь) Тогда
		ИнтернетПочтовыйАдрес.Пользователь = СтруктураПочтовогоАдреса.Пользователь;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТипТекстаПочтовогоСообщенияДляИнтернетПочтовогоСообщения(ТипТекста)
	
	Если ТипТекста = Перечисления.ТипыТекстовПочтовыхСообщений.HTML Тогда
		Возврат ТипТекстаПочтовогоСообщения.HTML;
	ИначеЕсли ТипТекста = Перечисления.ТипыТекстовПочтовыхСообщений.РазмеченныйТекст Тогда
		Возврат ТипТекстаПочтовогоСообщения.РазмеченныйТекст;
	Иначе
		Возврат ТипТекстаПочтовогоСообщения.ПростойТекст;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьИдентификаторыВходящихСообщений(Соединение, МассивИдентификаторов = Неопределено, ПараметрыОтбора = Неопределено, СообщениеОбОшибке = Неопределено)	
	
	СообщениеОбОшибке = "";
	
	Попытка
		Результат = Новый Массив;
		Если ЗначениеЗаполнено(МассивИдентификаторов) И ЗначениеЗаполнено(ПараметрыОтбора) Тогда
			Результат = Соединение.ПолучитьИдентификаторы(МассивИдентификаторов, ПараметрыОтбора);
		ИначеЕсли ЗначениеЗаполнено(МассивИдентификаторов) Тогда
			Результат = Соединение.ПолучитьИдентификаторы(МассивИдентификаторов);
		ИначеЕсли ЗначениеЗаполнено(ПараметрыОтбора) Тогда
			Результат = Соединение.ПолучитьИдентификаторы(, ПараметрыОтбора);
		Иначе
			Результат = Соединение.ПолучитьИдентификаторы();
		КонецЕсли;
	Исключение
		Комментарий = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					
		ЗаписьЖурналаРегистрации("ПолучитьИдентификаторыВходящихСообщений", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ИнтернетПочта,,Комментарий);
		СообщениеОбОшибке = Комментарий;
		
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции


#КонецОбласти