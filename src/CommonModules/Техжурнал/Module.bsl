////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает набор исключительных ситуаций, которые содержат строки техжурнала, переходящие в редактируемое исключение
// Используется при редактировании условий исключений
//
// Параметры:
//  ИзмененноеУсловиеИсключительнойСитуации - ДанныеФормыСтруктура, СправочникОбъект.УсловияИсключительныхСитуаций - условие, которое было изменено
//
Функция НайтиСмежныеИсключения(Знач ИзмененноеУсловиеИсключительнойСитуации) Экспорт
	
	ПересчитатьХеши(ИзмененноеУсловиеИсключительнойСитуации.Критерии);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТехнологическийЖурнал.ИсключительнаяСитуация
		|ИЗ
		|	РегистрСведений.ТехнологическийЖурнал КАК ТехнологическийЖурнал
		|ГДЕ
		|	ТехнологическийЖурнал.ТипВСтроку = ""EXCP"" И
		|	ТехнологическийЖурнал.ИсключительнаяСитуация <> &ТекущееИсключение И " 
		+ ЗадатьУсловияИсключения(ИзмененноеУсловиеИсключительнойСитуации.Владелец, Запрос, ИзмененноеУсловиеИсключительнойСитуации);
		
	Запрос.УстановитьПараметр("ТекущееИсключение", ИзмененноеУсловиеИсключительнойСитуации.Владелец);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Формирует запрос на выборку записей техжурнала, относящихся к указанным исключительным ситуациям
//
// Параметры:
//  ИсключительныеСитуации - Массив - Элементы - СправочникСсылка.ИсключительныеСитуации
//  Фильтр - СправочникСсылка.ИсключительныеСитуации - включать только те строки, которые дополнительно удовлетворяют условиям
//   указанного исключения
//
// Возвращаемое значение:
//  Запрос - запрос на выборку всех полей регистра ТехнологическийЖурнал
//  
Функция ЗапросЗаписейЖурналаСмежныхИсключений(Знач ИсключительныеСитуации, Знач Фильтр = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 	
		"ВЫБРАТЬ *
		|ИЗ
		|	РегистрСведений.ТехнологическийЖурнал КАК ТехнологическийЖурнал
		|ГДЕ
		|	ТехнологическийЖурнал.ИсключительнаяСитуация В(&ИсключительныеСитуации)"; 
		
	Если Фильтр <> Неопределено Тогда
		Запрос.Текст = 	Запрос.Текст + " И " + ЗадатьУсловияИсключения(Фильтр, Запрос);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ИсключительныеСитуации", ИсключительныеСитуации);
	Возврат Запрос;
	
КонецФункции

// Ищет строки регистра ТехнологическийЖурнла, которые больше не удовлетворяют условиям указанного исключения
//
// Параметры:
//  ИсключительнаяСитуация - СправочникСсылка.ИсключительныеСитуации - анализируемое исключение
//  ИсключаемоеУсловие - СправочникОбъект.УсловияИсключительныхСитуаций
//
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица, содержащая все поля "осиротевших" строк
//  
Функция НайтиОсиротевшиеСтрокиЖурнала(Знач ИсключительнаяСитуация, Знач ИсключаемоеУсловие = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ *
		|ИЗ
		|	РегистрСведений.ТехнологическийЖурнал КАК ТехнологическийЖурнал
		|ГДЕ
		|	ТехнологическийЖурнал.ИсключительнаяСитуация = &ТекущееСобытие И НЕ " 
		+ ЗадатьУсловияИсключения(ИсключительнаяСитуация, Запрос, , ИсключаемоеУсловие);
		
	Запрос.УстановитьПараметр("ТекущееСобытие", ИсключительнаяСитуация.Ссылка);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Обновляет хеши значений критерие
//
// Параметры:
//  Критерии - табличная часть справочника УсловияИсключительныхСитуаций
//
Процедура ПересчитатьХеши(Знач Критерии) Экспорт
	
	Инструменты = КипВнешнийКомпонент.ПолучитьИнструменты();

	Для Каждого Критерий Из Критерии Цикл
		
		Критерий.ЗначениеCRC32 = КипВнешнийКомпонент.ПолучитьХеш(Инструменты, Критерий.Значение);
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Добавляет в запрос условия на выборку из регистра технологического журнала по указанным критериям
//
// Возвращаемое значение:
//  Строка
// 
Функция ЗадатьКритерииУсловияСобытия(Индекс, Знач Критерии, Знач Запрос)
	
	Если Критерии.Количество() = 0 Тогда
		ВызватьИсключение "Не указаны критерии условия";
	КонецЕсли;
	
	Результат = "";
	
	Для Каждого Критерий Из Критерии Цикл
		
		Если Результат <> "" Тогда
			Результат = Результат + " И ";
		КонецЕсли;
		
		ИмяПараметра = "Параметр" + Формат(Индекс, "ЧН=0; ЧГ=0");
		
		Если Критерий.Вид = Перечисления.ВидыКритериев.СтекРавен Тогда
			Результат = Результат + "ТехнологическийЖурнал.КонтекстХэш = &" + ИмяПараметра + 
				" И ТехнологическийЖурнал.Контекст ПОДОБНО &" + ИмяПараметра + "_1 СПЕЦСИМВОЛ ""~""";
			Запрос.УстановитьПараметр(ИмяПараметра, Критерий.ЗначениеCRC32);
			Запрос.УстановитьПараметр(ИмяПараметра + "_1", ПодставитьТильду(Критерий.Значение));
		ИначеЕсли Критерий.Вид = Перечисления.ВидыКритериев.ТекстИсключенияРавен Тогда
			Результат = Результат + "ТехнологическийЖурнал.ТекстИсключенияХэш = &" + ИмяПараметра + 
				" И ТехнологическийЖурнал.ТекстИсключения ПОДОБНО &" + ИмяПараметра + "_1 СПЕЦСИМВОЛ ""~""";
			Запрос.УстановитьПараметр(ИмяПараметра, Критерий.ЗначениеCRC32);
			Запрос.УстановитьПараметр(ИмяПараметра + "_1", ПодставитьТильду(Критерий.Значение));
		ИначеЕсли Критерий.Вид = Перечисления.ВидыКритериев.ТекстИсключенияСодержитСтроку Тогда
			Результат = Результат + "ТехнологическийЖурнал.ТекстИсключения ПОДОБНО ""%"" + &" + ИмяПараметра + " + ""%""";
			Запрос.УстановитьПараметр(ИмяПараметра, Критерий.Значение);
		ИначеЕсли Критерий.Вид = Перечисления.ВидыКритериев.ТекстИсключенияНеСодержитСтроку Тогда
			Результат = Результат + "ТехнологическийЖурнал.ТекстИсключения НЕ ПОДОБНО ""%"" + &" + ИмяПараметра + " + ""%""";
			Запрос.УстановитьПараметр(ИмяПараметра, Критерий.Значение);
		ИначеЕсли Критерий.Вид = Перечисления.ВидыКритериев.КодИсключенияРавен Тогда
			Результат = Результат + "ТехнологическийЖурнал.КодИсключения = &" + ИмяПараметра;
			Запрос.УстановитьПараметр(ИмяПараметра, Критерий.Значение);
		ИначеЕсли Критерий.Вид = Перечисления.ВидыКритериев.КлиентскоеПриложениеРавно Тогда
			Результат = Результат + "ТехнологическийЖурнал.КлиентскоеПриложение = &" + ИмяПараметра;
			Запрос.УстановитьПараметр(ИмяПараметра, Критерий.Значение);
		КонецЕсли;
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
	Возврат "(" + Результат + ")";
		
КонецФункции

// Добавляет в запрос условия на выборку из регистра технологического журнала по указанному исключению
//
// Параметры:
//  ИсключительнаяСитуация - СправочникСсылка
//  Запрос - Запрос
//  ДополнительноеУсловие - СправочникОбъект.УсловияИсключительныхСитуаций - для добавления к запросу данных 
//   создаваемого, но еще не сохраненненного условия
//  ИсключаемоеУсловие - СправочникОбъект.УсловияИсключительныхСитуаций - для исключения добавления к запросу данных 
//   удаляемого, но еще не удаленного условия
//
// Возвращаемое значение:
//  Строка
// 
Функция ЗадатьУсловияИсключения(Знач ИсключительнаяСитуация, Знач Запрос, Знач ДополнительноеУсловие = Неопределено, 
	Знач ИсключаемоеУсловие = Неопределено)
	
	Результат = "";
	Выборка = Справочники.УсловияИсключительныхСитуаций.Выбрать(, ИсключительнаяСитуация);
	Индекс = 0;
	
	Если ДополнительноеУсловие <> Неопределено Тогда
		Результат = ЗадатьКритерииУсловияСобытия(Индекс, ДополнительноеУсловие.Критерии, Запрос);
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		Если (ДополнительноеУсловие <> Неопределено И Выборка.Ссылка = ДополнительноеУсловие.Ссылка) 
			Или (ИсключаемоеУсловие <> Неопределено И Выборка.Ссылка = ИсключаемоеУсловие.Ссылка)  Тогда
			Продолжить;
		КонецЕсли;
		
		Если Результат <> "" Тогда
			Результат = Результат + " ИЛИ ";
		КонецЕсли;
		
		Результат = Результат + ЗадатьКритерииУсловияСобытия(Индекс, Выборка.Критерии, Запрос);
		
	КонецЦикла;
	
	Если Результат = "" Тогда
		Результат = "ЛОЖЬ"; // Не указаны условия события
	КонецЕсли;
	
	Результат = "(" + Результат + ")";
	
	Возврат Результат;
	
КонецФункции

Функция ПодставитьТильду(Знач СтрокаПоиска)
	
	ИтоговаяСтрокаДляПоиска = СтрокаПоиска;
	ИтоговаяСтрокаДляПоиска = СтрЗаменить(ИтоговаяСтрокаДляПоиска, "~", "~~");
	ИтоговаяСтрокаДляПоиска = СтрЗаменить(ИтоговаяСтрокаДляПоиска, "%", "~%");
	ИтоговаяСтрокаДляПоиска = СтрЗаменить(ИтоговаяСтрокаДляПоиска, "_", "~_");
	ИтоговаяСтрокаДляПоиска = СтрЗаменить(ИтоговаяСтрокаДляПоиска, "[", "~[");
	ИтоговаяСтрокаДляПоиска = СтрЗаменить(ИтоговаяСтрокаДляПоиска, "-", "~-");
	
	Возврат ИтоговаяСтрокаДляПоиска;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИК ОБНОВЛЕНИЯ

// Назначает исключительные ситуации ранее собранным строкам журнала
//
Процедура ПриОбновлении(Знач ТекущаяВерсия, Знач СохраненнаяВерсия) Экспорт
	
	Если СохраненнаяВерсия <= "2.0.9.14" И ТекущаяВерсия > "2.0.9.14" Тогда

		Отбор = Новый Массив;
		Отбор.Добавить(Новый Структура("Поле, ВидСравнения, Значение", 
			"ИсключительнаяСитуация", ВидСравнения.Равно, Справочники.ИсключительныеСитуации.ПустаяСсылка()));
		Типы = Новый Массив;
		Типы.Добавить(Перечисления.СобытияТЖ.ОшибкаВыполнения);
		Типы.Добавить(Перечисления.СобытияТЖ.ОшибкаБлокировки);
		Отбор.Добавить(Новый Структура("Поле, ВидСравнения, Значение", 
			"Тип", ВидСравнения.ВСписке, Типы));
			
		Состояние = Неопределено;
		МожноПродолжать = Истина;
		
		Пока МожноПродолжать Цикл
			
			МассивТаблиц = ТехнологияСервисаСлужебныйЗапросы.ПолучитьПорциюДанныхНезависимогоНабораЗаписей(
				Метаданные.РегистрыСведений.ТехнологическийЖурнал, Отбор, 10000, МожноПродолжать, Состояние);
				
			Для Каждого ТаблицаЗначений Из МассивТаблиц Цикл
					
				ИмпортТехжурналаИсключения.СобратьИсключения(ТаблицаЗначений);
		
				Набор = РегистрыСведений.ТехнологическийЖурнал.СоздатьНаборЗаписей();
				Для Каждого Строка Из ТаблицаЗначений Цикл
				
					Набор.Очистить();
					Набор.Отбор.УникальныйИдентификатор.Установить(Строка.УникальныйИдентификатор);
					Запись = Набор.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, Строка);
					Набор.Записать();
				
				КонецЦикла;
			КонецЦикла;

		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры
