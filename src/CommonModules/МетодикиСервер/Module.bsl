
// Формирует структуру данных методики из XML-файла описания
// 
// Параметры:
//		ИмяФайлаОписания - Строка. Пусть к XML-файлу описания методики
// 
// Возвращаемое значение:
//		Структура.
//
Функция ПолучитьСтруктуруДанныхМетодикиИзXML(ИмяФайлаОписания) Экспорт
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Наименование", "");
	СтруктураДанных.Вставить("Идентификатор", "");
	СтруктураДанных.Вставить("Автор", "");
	СтруктураДанных.Вставить("Одобрено", Неопределено);
	СтруктураДанных.Вставить("ТекстHTML", "");
	СтруктураДанных.Вставить("МассивФайлов", Новый Массив());
	СтруктураДанных.Вставить("МассивПрименение", Новый Массив());
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ИмяФайлаОписания);
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "Наименование" Тогда
			Если ЧтениеXML.Прочитать() Тогда
				СтруктураДанных.Наименование = ЧтениеXML.Значение;
			КонецЕсли;
			
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "Идентификатор" Тогда
			Если ЧтениеXML.Прочитать() Тогда
				СтруктураДанных.Идентификатор = ЧтениеXML.Значение;
			КонецЕсли;
			
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "Автор" Тогда
			Если ЧтениеXML.Прочитать() Тогда
				СтруктураДанных.Автор = ЧтениеXML.Значение;
			КонецЕсли;
			
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "Одобрено" Тогда
			Если ЧтениеXML.Прочитать() Тогда
				СтруктураДанных.Одобрено = ЧтениеXML.Значение;
			КонецЕсли;
			
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "Файл" Тогда
			
			СтруктураФайла = Новый Структура();
			СтруктураФайла.Вставить("Идентификатор", ЧтениеXML.ПолучитьАтрибут("Идентификатор"));
			СтруктураФайла.Вставить("ИмяФайла", ЧтениеXML.ПолучитьАтрибут("ИмяФайла"));
			СтруктураДанных.МассивФайлов.Добавить(СтруктураФайла);
			
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "ОбъектПрименения" Тогда
			
			СтруктураПрименения = Новый Структура();
			СтруктураПрименения.Вставить("ОбъектПрименения", ЧтениеXML.ПолучитьАтрибут("Идентификатор"));
			СтруктураДанных.МассивПрименение.Добавить(СтруктураПрименения);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	
	ФайлXML = Новый Файл(ИмяФайлаОписания);
	ФайлHTML = Новый Файл(ФайлXML.Путь + СтруктураДанных.Идентификатор + ".html");
	Если ФайлHTML.Существует() Тогда
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.Прочитать(ФайлHTML.ПолноеИмя, КодировкаТекста.UTF8);
		СтруктураДанных.ТекстHTML = ТекстовыйДокумент.ПолучитьТекст();
		
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

#Если Сервер Тогда
	
// Подключается к веб-сервису методик и возвращает WSПрокси
//
// Возвращаемое значение:
//		WSПрокси
//
Функция ПолучитьПроксиСервисаМетодик(АдресХранилища = Неопределено) Экспорт
	
	ИмяСервиса = "MethodicsManager";
	Порт = ИмяСервиса + "Soap";
	ИмяПользователя = "wsuser";
	Пароль = "8G2BsODJTb";
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(Неопределено, Новый СертификатыУдостоверяющихЦентровОС());
	URIПространстваИмен = "www.v8.methodics.1c.ru";
	
	Попытка
		Прокси = WSСсылки.MethodicsManager.СоздатьWSПрокси(URIПространстваИмен, ИмяСервиса, Порт, Неопределено, 30, ЗащищенноеСоединение);
		Прокси.Пользователь	= ИмяПользователя;
		Прокси.Пароль = Пароль;
	Исключение
		
		СообщениеОбОшибке = "Ошибка получения прокси: " + ОписаниеОшибки();
		Если АдресХранилища = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
		Иначе 
			ПоместитьВоВременноеХранилище(СообщениеОбОшибке, АдресХранилища);
		КонецЕсли;
		Возврат Неопределено;
		
	КонецПопытки;
	
	Возврат Прокси;

КонецФункции

#КонецЕсли