// Отправляет SMS через настроенного поставщика услуги, возвращает идентификатор сообщения.
//
// Параметры:
//  НомераПолучателей - Массив - массив строк номеров получателей в формате +7ХХХХХХХХХХ;
//  Текст 			  - Строка - текст сообщения, максимальная длина у операторов может быть разной;
//  ИмяОтправителя 	  - Строка - имя отправителя, которое будет отображаться вместо номера у получателей.
//
// Возвращаемое значение:
//  Структура: ПараметрыОтправки - Массив структур: НомерОтправителя
//                                                  ИдентификаторСообщения
//             ОписаниеОшибки    - Строка - пользовательское представление ошибки, если пустая строка,
//                                          то ошибки нет.
Функция ОтправитьSMS(НомераПолучателей, Знач Текст, Знач ИмяОтправителя = "", НастройкиОтправкиSMS= Неопределено) Экспорт
    
    Результат = Неопределено;
    Текст = Лев(Текст, 300);
	
	Если НастройкиОтправкиSMS = Неопределено Тогда
		НастройкиОтправкиSMS = НастройкиОтправкиSMS();
	КонецЕсли;
	
	Если НастройкиОтправкиSMS.Провайдер = Перечисления.ПровайдерыSMS.МТС Тогда
		Результат = ОтправкаSMSМТС.ОтправитьSMS(НомераПолучателей, 
												Текст,
												ИмяОтправителя,
												НастройкиОтправкиSMS.Логин,
												НастройкиОтправкиSMS.Пароль);
	ИначеЕсли НастройкиОтправкиSMS.Провайдер = Перечисления.ПровайдерыSMS.Билайн Тогда
		Результат = ОтправкаSMSБилайн.ОтправитьSMS(НомераПолучателей, 
												   Текст,
												   ИмяОтправителя,
												   НастройкиОтправкиSMS.Логин,
												   НастройкиОтправкиSMS.Пароль);
	ИначеЕсли НастройкиОтправкиSMS.Провайдер = Перечисления.ПровайдерыSMS.SMSЦентр Тогда
		Результат = ОтправкаSMSЦентр.ОтправитьSMS(НомераПолучателей,
		                                          Текст,
		                                          ИмяОтправителя,
		                                          НастройкиОтправкиSMS.Логин,
		                                          НастройкиОтправкиSMS.Пароль);
	Иначе // провайдер не выбран
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает текстовое представление статуса доставки сообщения.
//
// Параметры:
//  ИдентификаторСообщения - Строка - идентификатор, присвоенный sms при отправке;
//
// Возвращаемое значение:
//  Строка - статус доставки: "Delivered" - если доставлено.
Функция СтатусДоставки(ИдентификаторСообщения) Экспорт
	Если ПустаяСтрока(ИдентификаторСообщения) Тогда
		Возврат Перечисления.СтатусыДоставкиSMS.Новое;
	КонецЕсли;
	
	Результат = Неопределено;
	НастройкиОтправкиSMS = НастройкиОтправкиSMS();
	
	Если НастройкиОтправкиSMS.Провайдер = Перечисления.ПровайдерыSMS.Билайн Тогда
		Результат = ОтправкаSMSПереопределяемый.СтатусДоставки(ИдентификаторСообщения,
												  			   НастройкиОтправкиSMS.Логин,
												  			   НастройкиОтправкиSMS.Пароль);
	ИначеЕсли НастройкиОтправкиSMS.Провайдер = Перечисления.ПровайдерыSMS.МТС Тогда
		Результат = ОтправкаSMSМТС.СтатусДоставки(ИдентификаторСообщения,
												  НастройкиОтправкиSMS.Логин,
												  НастройкиОтправкиSMS.Пароль);
	ИначеЕсли НастройкиОтправкиSMS.Провайдер = Перечисления.ПровайдерыSMS.SMSЦентр Тогда
		Результат = ОтправкаSMSЦентр.СтатусДоставки(ИдентификаторСообщения,
		                                            НастройкиОтправкиSMS.Логин,
		                                            НастройкиОтправкиSMS.Пароль);
	Иначе // провайдер не выбран
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции


Функция НастройкиОтправкиSMS()
	Результат = Новый Структура;
	Результат.Вставить("Провайдер", Константы.ПровайдерSMS.Получить());
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеХранилища = РегистрыСведений.БезопасноеХранилище.ПолучитьДанные("НастройкиОтправки");
	УстановитьПривилегированныйРежим(Ложь);
	
	Результат.Вставить("Логин", ДанныеХранилища.ЛогинДляОтправкиSMS);
	Результат.Вставить("Пароль", ДанныеХранилища.ПарольДляОтправкиSMS);
	
	Возврат Результат;
КонецФункции
