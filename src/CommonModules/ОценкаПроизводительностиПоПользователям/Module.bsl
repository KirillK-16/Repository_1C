////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Формирует данные для отчета на форме Обработка.ОценкаПроизводительностиПоПользователям.Форма
//
// Параметры:
//  ПараметрыОтчета - Структура - Поля:
//   ИнформационнаяБаза - СправочникСсылка.ОбъектыКонтроля
//   ДатаНачала - Дата
//   ДатаОкончания - Дата
//   ОтборПользователей - Строка
//   ОтборПоЧислуОпераций - Число
//  АдресХранилища - Строка - Адрес во временном хранилище, куда будет помещен результат
//   
Процедура ПрочитатьДанныеПоПользователям(Знач ПараметрыОтчета, Знач АдресХранилища, БратьЦелевоеВремяИзИБ = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА Замеры.ДатаЗамера < &ДатаСередины
		|					И Замеры.Значение <= КлючевыеОперации.%ЦелевоеВремя
		|				ТОГДА 1
		|			КОГДА Замеры.ДатаЗамера < &ДатаСередины
		|					И Замеры.Значение <= 4 * КлючевыеОперации.%ЦелевоеВремя
		|				ТОГДА 0.5
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПредыдущийApdex,
		|	СУММА(ВЫБОР
		|			КОГДА Замеры.ДатаЗамера < &ДатаСередины
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПредыдущееЧислоОпераций,
		|	СУММА(ВЫБОР
		|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
		|					И Замеры.Значение <= КлючевыеОперации.%ЦелевоеВремя
		|				ТОГДА 1
		|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
		|					И Замеры.Значение <= 4 * КлючевыеОперации.%ЦелевоеВремя
		|				ТОГДА 0.5
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ТекущийApdex,
		|	СУММА(ВЫБОР
		|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЧислоОпераций,
		|	Замеры.Пользователь
		|ИЗ
		|	РегистрСведений.ЗамерыПроизводительности КАК Замеры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК КлючевыеОперации
		|		ПО Замеры.ИдентификаторКлючевойОперации = КлючевыеОперации.УникальныйИдентификатор
		|ГДЕ
		|	Замеры.ОбъектКонтроля = &ОбъектКонтроля
		|	И Замеры.ДатаЗамера >= &ДатаНачала
		|	И Замеры.ДатаЗамера <= &ДатаОкончания
		|
		|СГРУППИРОВАТЬ ПО
		|	Замеры.Пользователь
		|
		|	
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) >= &ОтборПоЧислуОпераций
		|%Имеющие
		|УПОРЯДОЧИТЬ ПО ТекущийApdex, ЧислоОпераций";
		
	Если ПараметрыОтчета.ОтборПользователей = "Всех" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Имеющие", "");
	ИначеЕсли ПараметрыОтчета.ОтборПользователей = "Текущих" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Имеющие", 
			"И
			|	СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ) > 0");
	ИначеЕсли ПараметрыОтчета.ОтборПользователей = "Улучшение" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Имеющие", 
			"И
			|	СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера < &ДатаСередины
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ) > 0 И
			|	СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ) > 0 И
			|	СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера < &ДатаСередины
			|					И Замеры.Значение <= КлючевыеОперации.%ЦелевоеВремя
			|				ТОГДА 1
			|			КОГДА Замеры.ДатаЗамера < &ДатаСередины
			|					И Замеры.Значение <= 4 * КлючевыеОперации.%ЦелевоеВремя
			|				ТОГДА 0.5
			|			ИНАЧЕ 0
			|		КОНЕЦ) / СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера < &ДатаСередины
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ) < СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
			|					И Замеры.Значение <= КлючевыеОперации.%ЦелевоеВремя
			|				ТОГДА 1
			|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
			|					И Замеры.Значение <= 4 * КлючевыеОперации.%ЦелевоеВремя
			|				ТОГДА 0.5
			|			ИНАЧЕ 0
			|		КОНЕЦ) / СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ)");
	ИначеЕсли ПараметрыОтчета.ОтборПользователей = "Ухудшение" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Имеющие", 
			"И
			|	СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера < &ДатаСередины
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ) > 0 И
			|	СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ) > 0 И
			|	СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера < &ДатаСередины
			|					И Замеры.Значение <= КлючевыеОперации.%ЦелевоеВремя
			|				ТОГДА 1
			|			КОГДА Замеры.ДатаЗамера < &ДатаСередины
			|					И Замеры.Значение <= 4 * КлючевыеОперации.%ЦелевоеВремя
			|				ТОГДА 0.5
			|			ИНАЧЕ 0
			|		КОНЕЦ) / СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера < &ДатаСередины
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ) > СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
			|					И Замеры.Значение <= КлючевыеОперации.%ЦелевоеВремя
			|				ТОГДА 1
			|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
			|					И Замеры.Значение <= 4 * КлючевыеОперации.%ЦелевоеВремя
			|				ТОГДА 0.5
			|			ИНАЧЕ 0
			|		КОНЕЦ) / СУММА(ВЫБОР
			|			КОГДА Замеры.ДатаЗамера >= &ДатаСередины
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ)");
	КонецЕсли;

	Если БратьЦелевоеВремяИзИБ Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ЦелевоеВремя", "ЦелевоеВремяВИБ");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ЦелевоеВремя", "ЦелевоеВремя");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОбъектКонтроля", ПараметрыОтчета.ИнформационнаяБаза);
	Запрос.УстановитьПараметр("ДатаНачала", УниверсальноеВремя(ПараметрыОтчета.ДатаНачала - 
		(ПараметрыОтчета.ДатаОкончания - ПараметрыОтчета.ДатаНачала)));
	Запрос.УстановитьПараметр("ДатаСередины", УниверсальноеВремя(ПараметрыОтчета.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", УниверсальноеВремя(ПараметрыОтчета.ДатаОкончания));
	Запрос.УстановитьПараметр("ОтборПоЧислуОпераций", ПараметрыОтчета.ОтборПоЧислуОпераций);
		
	Результат = Запрос.Выполнить().Выгрузить();
	Пользователи = ТаблицаПользователей();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Пользователи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка, "Пользователь, ЧислоОпераций");
		Если Выборка.ЧислоОпераций <> 0 Тогда
			НоваяСтрока.ТекущийApdex = Формат(Выборка.ТекущийApdex / Выборка.ЧислоОпераций, "ЧДЦ=2; ЧН=0,00");
			НоваяСтрока.ТекущийApdexОформление = Выборка.ТекущийApdex / Выборка.ЧислоОпераций;
		Иначе
			НоваяСтрока.ТекущийApdexОформление = 2;
		КонецЕсли;
		Если Выборка.ПредыдущееЧислоОпераций <> 0 Тогда
			НоваяСтрока.ПредыдущийApdex = Формат(Выборка.ПредыдущийApdex / Выборка.ПредыдущееЧислоОпераций, "ЧДЦ=2; ЧН=0,00");
			НоваяСтрока.ПредыдущийApdexОформление = Выборка.ПредыдущийApdex / Выборка.ПредыдущееЧислоОпераций;
		Иначе
			НоваяСтрока.ПредыдущийApdexОформление = -1;
		КонецЕсли;
	КонецЦикла;
	Пользователи.Сортировать("ТекущийApdexОформление");
	
	ПоместитьВоВременноеХранилище(Пользователи, АдресХранилища);

КонецПроцедуры

// Формирует данные для отчета на форме Обработка.ОценкаПроизводительностиПоПользователям.ОперацииПользователя
//
// Параметры:
//  ПараметрыОтчета - Структура - Поля:
//   ИнформационнаяБаза - СправочникСсылка.ОбъектыКонтроля
//   Пользователь - Строка
//   ДатаОтчета - Дата
//   СкрыватьПустые - Булево
//  АдресХранилища - Строка - Адрес во временном хранилище, куда будет помещен результат
//   
Процедура ПрочитатьДанныеПоОперациям(Знач ПараметрыОтчета, Знач АдресХранилища, БратьЦелевоеВремяИзИБ = Истина) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА РАЗНОСТЬДАТ(Замеры.ДатаЗамера, &ДатаОкончания, ДЕНЬ) < 7
	|					И Замеры.Значение <= КлючевыеОперации.%ЦелевоеВремя
	|				ТОГДА 1
	|			КОГДА РАЗНОСТЬДАТ(Замеры.ДатаЗамера, &ДатаОкончания, ДЕНЬ) < 7
	|					И Замеры.Значение <= 4 * КлючевыеОперации.%ЦелевоеВремя
	|				ТОГДА 0.5
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПоказательЗа7Дней,
	|	СУММА(ВЫБОР
	|			КОГДА РАЗНОСТЬДАТ(Замеры.ДатаЗамера, &ДатаОкончания, ДЕНЬ) < 7
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗамеровЗа7дней,
	|	СУММА(ВЫБОР
	|			КОГДА РАЗНОСТЬДАТ(Замеры.ДатаЗамера, &ДатаОкончания, ДЕНЬ) < 30
	|					И Замеры.Значение <= КлючевыеОперации.%ЦелевоеВремя
	|				ТОГДА 1
	|			КОГДА РАЗНОСТЬДАТ(Замеры.ДатаЗамера, &ДатаОкончания, ДЕНЬ) < 30
	|					И Замеры.Значение <= 4 * КлючевыеОперации.%ЦелевоеВремя
	|				ТОГДА 0.5
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПоказательЗа30Дней,
	|	СУММА(ВЫБОР
	|			КОГДА РАЗНОСТЬДАТ(Замеры.ДатаЗамера, &ДатаОкончания, ДЕНЬ) < 30
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗамеровЗа30дней,
	|	СУММА(ВЫБОР
	|			КОГДА Замеры.Значение <= КлючевыеОперации.%ЦелевоеВремя
	|				ТОГДА 1
	|			КОГДА Замеры.Значение <= 4 * КлючевыеОперации.%ЦелевоеВремя
	|				ТОГДА 0.5
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПоказательЗа90Дней,
	|	КОЛИЧЕСТВО(Замеры.Значение) КАК ЗамеровЗа90Дней,
	|	СУММА(ВЫБОР
	|			КОГДА РАЗНОСТЬДАТ(Замеры.ДатаЗамера, &ДатаОкончания, ДЕНЬ) < 7
	|				ТОГДА Замеры.Значение
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВремяВыполненияЗа7Дней,
	|	СУММА(ВЫБОР
	|			КОГДА РАЗНОСТЬДАТ(Замеры.ДатаЗамера, &ДатаОкончания, ДЕНЬ) < 30
	|				ТОГДА Замеры.Значение
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВремяВыполненияЗа30Дней,
	|	СУММА(ЕСТЬNULL(Замеры.Значение,0)) КАК ВремяВыполненияЗа90Дней,
	|	КлючевыеОперации.УникальныйИдентификатор КАК КлючеваяОперацияУникальныйИдентификатор,
	|	КлючевыеОперации.Имя КАК КлючеваяОперация,
	|	КлючевыеОперации.%ЦелевоеВремя КАК ЦелевоеВремя
	|ИЗ
	|	РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК КлючевыеОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗамерыПроизводительности КАК Замеры
	|		ПО 
	|	%УсловиеНаБазу
	|			(Замеры.ИдентификаторКлючевойОперации = КлючевыеОперации.УникальныйИдентификатор)
	|			И (Замеры.ДатаЗамера >= &ДатаНачала)
	|			И (Замеры.ДатаЗамера <= &ДатаОкончания)
	|   %УсловиеНаПользователя
	|ГДЕ ИСТИНА
	|	%КлючевыеОперацииУсловиеНаБазу
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючевыеОперации.УникальныйИдентификатор,
	|	КлючевыеОперации.Имя,
	|	КлючевыеОперации.%ЦелевоеВремя
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючевыеОперации.Имя";
	
	Если БратьЦелевоеВремяИзИБ Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ЦелевоеВремя", "ЦелевоеВремяВИБ");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ЦелевоеВремя", "ЦелевоеВремя");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.ИнформационнаяБаза) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%КлючевыеОперацииУсловиеНаБазу", 
		"И КлючевыеОперации.ИнформационнаяБаза = &ИнформационнаяБаза");
		Запрос.УстановитьПараметр("ИнформационнаяБаза", ПараметрыОтчета.ИнформационнаяБаза);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%КлючевыеОперацииУсловиеНаБазу", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаНачала", УниверсальноеВремя(ПараметрыОтчета.ДатаОтчета - 90*60*60*24));
	Запрос.УстановитьПараметр("ДатаОкончания", УниверсальноеВремя(ПараметрыОтчета.ДатаОтчета));
	ВыбранныеПользователи = ОбернутьВМассив(ПараметрыОтчета.Пользователь);
	КонтрольПроизводительности.ВставитьФильтрыВЗапросПроизводительности(Запрос, Запрос.Текст,
	ПараметрыОтчета.ИнформационнаяБаза, , ВыбранныеПользователи, Перечисления.ТипыСпискаПользователей.ТолькоУказанные);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА Замеры.Значение <= КлючевыеОперации.%ЦелевоеВремя
	|				ТОГДА 1
	|			КОГДА Замеры.Значение <= 4 * КлючевыеОперации.%ЦелевоеВремя
	|				ТОГДА 0.5
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Apdex, 
	|	КОЛИЧЕСТВО(*) КАК Замеров
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 100
	|		Замеры.ИдентификаторКлючевойОперации КАК ИдентификаторКлючевойОперации,
	|		Замеры.Значение КАК Значение
	|	ИЗ
	|		РегистрСведений.ЗамерыПроизводительности КАК Замеры
	|	ГДЕ
	|	%УсловиеНаБазу
	|	Замеры.ДатаЗамера <= &ДатаОкончания
	|	И Замеры.ИдентификаторКлючевойОперации = &ИдентификаторКлючевойОперации
	|	%УсловиеНаПользователя
	|	
	|	УПОРЯДОЧИТЬ ПО
	|		Замеры.ДатаЗамера УБЫВ) КАК Замеры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК КлючевыеОперации
	|		ПО Замеры.ИдентификаторКлючевойОперации = КлючевыеОперации.УникальныйИдентификатор";
	
	Если БратьЦелевоеВремяИзИБ Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ЦелевоеВремя", "ЦелевоеВремяВИБ");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ЦелевоеВремя", "ЦелевоеВремя");
	КонецЕсли;
	
	КонтрольПроизводительности.ВставитьФильтрыВЗапросПроизводительности(Запрос, Запрос.Текст,
	ПараметрыОтчета.ИнформационнаяБаза, , ВыбранныеПользователи, Перечисления.ТипыСпискаПользователей.ТолькоУказанные);
	
	Операции = ТаблицаОпераций();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Операции.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка, "КлючеваяОперация, КлючеваяОперацияУникальныйИдентификатор, ЦелевоеВремя");
		
		Запрос.УстановитьПараметр("ИдентификаторКлючевойОперации", Выборка.КлючеваяОперацияУникальныйИдентификатор);
		Данные100Замеров = Запрос.Выполнить().Выгрузить()[0];
		Если Данные100Замеров.Замеров > 0 Тогда
			НоваяСтрока.ApdexПо100Замерам = Формат(Данные100Замеров.Apdex / Данные100Замеров.Замеров, "ЧДЦ=2; ЧН=0,00");
			НоваяСтрока.ApdexПо100ЗамерамОформление = Данные100Замеров.Apdex / Данные100Замеров.Замеров;
		Иначе
			Если ПараметрыОтчета.СкрыватьПустые Тогда
				Операции.Удалить(НоваяСтрока);
				Продолжить;
			Иначе
				НоваяСтрока.ApdexПо100ЗамерамОформление = -1;
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.ЗамеровЗа7Дней > 0 Тогда
			НоваяСтрока.ApdexЗа7дней = Формат(Выборка.ПоказательЗа7Дней / Выборка.ЗамеровЗа7Дней, "ЧДЦ=2; ЧН=0,00");
			НоваяСтрока.ApdexЗа7днейОформление = Выборка.ПоказательЗа7Дней / Выборка.ЗамеровЗа7Дней;
			НоваяСтрока.ВремяВыполненияЗа7Дней = Выборка.ВремяВыполненияЗа7Дней / Выборка.ЗамеровЗа7Дней;
			НоваяСтрока.ВремяВыполненияЗа7ДнейОформление = ?(НоваяСтрока.ВремяВыполненияЗа7Дней > НоваяСтрока.ЦелевоеВремя, -1, 1);
			НоваяСтрока.ЗамеровЗа7дней = Выборка.ЗамеровЗа7Дней;
		Иначе
			НоваяСтрока.ApdexЗа7днейОформление = -1;
		КонецЕсли;
		Если Выборка.ЗамеровЗа30Дней > 0 Тогда
			НоваяСтрока.ApdexЗа30дней = Формат(Выборка.ПоказательЗа30Дней / Выборка.ЗамеровЗа30Дней, "ЧДЦ=2; ЧН=0,00");
			НоваяСтрока.ApdexЗа30днейОформление = Выборка.ПоказательЗа30Дней / Выборка.ЗамеровЗа30Дней;
			НоваяСтрока.ВремяВыполненияЗа30Дней = Выборка.ВремяВыполненияЗа30Дней / Выборка.ЗамеровЗа30Дней;
			НоваяСтрока.ВремяВыполненияЗа30ДнейОформление = ?(НоваяСтрока.ВремяВыполненияЗа30Дней > НоваяСтрока.ЦелевоеВремя, -1, 1);
			НоваяСтрока.ЗамеровЗа30дней = Выборка.ЗамеровЗа30Дней;
		Иначе
			НоваяСтрока.ApdexЗа30днейОформление = -1;
		КонецЕсли;
		Если Выборка.ЗамеровЗа90Дней > 0 Тогда
			НоваяСтрока.ApdexЗа90дней = Формат(Выборка.ПоказательЗа90Дней / Выборка.ЗамеровЗа90Дней, "ЧДЦ=2; ЧН=0,00");
			НоваяСтрока.ApdexЗа90днейОформление = Выборка.ПоказательЗа90Дней / Выборка.ЗамеровЗа90Дней;
			НоваяСтрока.ВремяВыполненияЗа90Дней = Выборка.ВремяВыполненияЗа90Дней / Выборка.ЗамеровЗа90Дней;
			НоваяСтрока.ВремяВыполненияЗа90ДнейОформление = ?(НоваяСтрока.ВремяВыполненияЗа90Дней > НоваяСтрока.ЦелевоеВремя, -1, 1);
			НоваяСтрока.ЗамеровЗа90дней = Выборка.ЗамеровЗа90Дней;
		Иначе
			НоваяСтрока.ApdexЗа90днейОформление = -1;
		КонецЕсли;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Операции, АдресХранилища);
	
КонецПроцедуры

// Формирует данные для отчета на форме Обработка.ОценкаПроизводительностиПоПользователям.КлючеваяОперацияПоПользователю
//
// Параметры:
//  ПараметрыОтчета - Структура - Поля:
//   ИнформационнаяБаза - СправочникСсылка.ОбъектыКонтроля
//   Пользователь - Строка
//   ДатаНачала - Дата
//   ДатаОкончания - Дата
//   КлючеваяОперацияИдентификатор - Строка
//   КлючеваяОперация - Строка
//   ШагРаспределения - Число
//   ОбрезатьПоследние - Число
//  АдресХранилища - Строка - Адрес во временном хранилище, куда будет помещен результат
//   
Процедура ПрочитатьДанныеПоОперацииПоПользователю(Знач ПараметрыОтчета, Знач АдресХранилища) Экспорт
	
	Apdex = РассчитатьApdex(ПараметрыОтчета);
	Если Apdex = Неопределено Тогда
		ПоместитьВоВременноеХранилище(Неопределено, АдресХранилища);
		Возврат;
	КонецЕсли;
	
	Диаграмма = Новый Диаграмма;
	ТекущиеИдентификаторыОпераций = ОбернутьВМассив(Новый Структура("УникальныйИдентификатор, Имя",
		ПараметрыОтчета.КлючеваяОперацияИдентификатор, ПараметрыОтчета.КлючеваяОперация));
	Пользователи = ОбернутьВМассив(ПараметрыОтчета.Пользователь);
	
	СтатистикаПоОперациям = КонтрольПроизводительности.ПостроитьРаспределение(Диаграмма, ПараметрыОтчета.ИнформационнаяБаза, 
		Пользователи, ТекущиеИдентификаторыОпераций, ПараметрыОтчета.ДатаНачала, ПараметрыОтчета.ДатаОкончания, 
		ПараметрыОтчета.ШагРаспределения, ПараметрыОтчета.ОбрезатьПоследние, Истина);
		
	Статистика = СтатистикаПоОперациям[ПараметрыОтчета.КлючеваяОперацияИдентификатор];
	Статистика.Вставить("Apdex", Apdex);
	
	Результат = Новый Структура;
	Результат.Вставить("Диаграмма", Диаграмма);
	Результат.Вставить("Статистика", Статистика);
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Вычисляет значение Apdex
// 
// Параметры:
//  ПараметрыОтчета - Структура - см. описание ПрочитатьДанныеПоОперацииПоПользователю
//
// Возвращаемое значение:
//  Число - значение Apdex
//
Функция РассчитатьApdex(Знач ПараметрыОтчета, БратьЦелевоеВремяИзИБ = Истина)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА Замеры.Значение <= КлючевыеОперации.%ЦелевоеВремя
		|				ТОГДА 1
		|			КОГДА Замеры.Значение <= 4 * КлючевыеОперации.%ЦелевоеВремя
		|				ТОГДА 0.5
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОбщийApdex,
		|	КОЛИЧЕСТВО(*) КАК ЧислоОпераций
		|ИЗ
		|	РегистрСведений.ЗамерыПроизводительности КАК Замеры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК КлючевыеОперации
		|		ПО Замеры.ИдентификаторКлючевойОперации = КлючевыеОперации.УникальныйИдентификатор
		|ГДЕ
		|	Замеры.ОбъектКонтроля = &ОбъектКонтроля
		|	И Замеры.ДатаЗамера >= &ДатаНачала
		|	И Замеры.ДатаЗамера <= &ДатаОкончания
		|	И Замеры.ИдентификаторКлючевойОперации = &ИдентификаторКлючевойОперации
		|	И Замеры.Пользователь = &Пользователь";
		
	Если БратьЦелевоеВремяИзИБ Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ЦелевоеВремя", "ЦелевоеВремяВИБ");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ЦелевоеВремя", "ЦелевоеВремя");
	КонецЕсли;
	Запрос.УстановитьПараметр("ОбъектКонтроля", ПараметрыОтчета.ИнформационнаяБаза);
	Запрос.УстановитьПараметр("ДатаНачала", УниверсальноеВремя(ПараметрыОтчета.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", УниверсальноеВремя(ПараметрыОтчета.ДатаОкончания));
	Запрос.УстановитьПараметр("ИдентификаторКлючевойОперации", ПараметрыОтчета.КлючеваяОперацияИдентификатор);
	Запрос.УстановитьПараметр("Пользователь", ПараметрыОтчета.Пользователь);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат[0].ЧислоОпераций > 0 Тогда
		Возврат Результат[0].ОбщийApdex / Результат[0].ЧислоОпераций;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Формирует таблицу для возврата результата функцией ПрочитатьДанныеПоОперациям
//
// Возвращаемое значение:
//  ТаблицаЗначений
Функция ТаблицаОпераций()
	
	Операции = Новый ТаблицаЗначений();
	Операции.Колонки.Добавить("КлючеваяОперация", Новый ОписаниеТипов("Строка"));
	Операции.Колонки.Добавить("КлючеваяОперацияУникальныйИдентификатор", Новый ОписаниеТипов("Строка"));
	Операции.Колонки.Добавить("ApdexПо100Замерам", Новый ОписаниеТипов("Строка"));
	Операции.Колонки.Добавить("ApdexЗа7дней", Новый ОписаниеТипов("Строка"));
	Операции.Колонки.Добавить("ApdexЗа30дней", Новый ОписаниеТипов("Строка"));
	Операции.Колонки.Добавить("ApdexЗа90дней", Новый ОписаниеТипов("Строка"));
	Операции.Колонки.Добавить("ВремяВыполненияЗа7Дней", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ЦелевоеВремя", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ВремяВыполненияЗа30Дней", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ВремяВыполненияЗа90Дней", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ВремяВыполненияЗа7ДнейОформление", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ВремяВыполненияЗа30ДнейОформление", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ВремяВыполненияЗа90ДнейОформление", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ApdexПо100ЗамерамОформление", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ApdexЗа7днейОформление", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ApdexЗа30днейОформление", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ApdexЗа90днейОформление", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ЗамеровЗа7дней", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ЗамеровЗа30дней", Новый ОписаниеТипов("Число"));
	Операции.Колонки.Добавить("ЗамеровЗа90дней", Новый ОписаниеТипов("Число"));

	Возврат Операции;
	
КонецФункции

// Формирует таблицу для возврата результата функцией ПрочитатьДанныеПоПользователям
//
// Возвращаемое значение:
//  ТаблицаЗначений
Функция ТаблицаПользователей()
	
	Пользователи = Новый ТаблицаЗначений();
	Пользователи.Колонки.Добавить("Пользователь", Новый ОписаниеТипов("СправочникСсылка.ПользователиЗамерПроизводительности"));
	Пользователи.Колонки.Добавить("ЧислоОпераций", Новый ОписаниеТипов("Число"));
	Пользователи.Колонки.Добавить("ТекущийApdex", Новый ОписаниеТипов("Строка"));
	Пользователи.Колонки.Добавить("ПредыдущийApdex", Новый ОписаниеТипов("Строка"));
	Пользователи.Колонки.Добавить("ТекущийApdexОформление", Новый ОписаниеТипов("Число"));
	Пользователи.Колонки.Добавить("ПредыдущийApdexОформление", Новый ОписаниеТипов("Число"));
	
	Возврат Пользователи;
	
КонецФункции

Функция ОбернутьВМассив(Знач Значение)
	
	Если Не ЗначениеЗаполнено(Значение) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Новый Массив;
	Результат.Добавить(Значение);
	Возврат Результат;
	
КонецФункции
