Функция ОтправитьДанные() Экспорт
    
    Общий.ПриНачалеВыполненияРегламентногоЗадания();
    
    ВнешниеЦКК = ПолучитьВнешниеЦККДляОтправки();
	
	МаксимальныйНомерПакета = Справочники.ПорядковыеНомераДанных.УстановитьСледующийНомер(Справочники.ПорядковыеНомераДанных.СтатистикаБуферДатаВнешниеЦКК.Ссылка);
	Для Каждого ВнешнийЦКК Из ВнешниеЦКК Цикл
		Параметры = Новый Массив;
		Параметры.Добавить(ВнешнийЦКК);
		Параметры.Добавить(МаксимальныйНомерПакета);
		ФоновыеЗадания.Выполнить("СтатистикаОтправкаДанныхВнешнимЦКК.ОтправитьДанныеВнешнемуЦКК", Параметры, Новый УникальныйИдентификатор(), "Статистика: Отправка данных внешнему ЦКК """ + ВнешнийЦКК["ВнешнийЦКК"] + """");
    КонецЦикла;
    
КонецФункции

Функция ПолучитьВнешниеЦККДляОтправки()
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТехнологическиеЖурналыВнешниеЦКК.ВнешнийЦКК КАК ВнешнийЦКК,
	|	СправочникВнешниеЦКК.WSСсылкаInputStatisticsDate КАК WSСсылка,
	|	СправочникВнешниеЦКК.Пользователь КАК Пользователь,
	|	СправочникВнешниеЦКК.Пароль КАК Пароль
	|ИЗ
	|	Справочник.ТехнологическиеЖурналы.ВнешниеЦКК КАК ТехнологическиеЖурналыВнешниеЦКК
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.ВнешниеЦКК КАК СправочникВнешниеЦКК
	|ПО
	|	ТехнологическиеЖурналыВнешниеЦКК.ВнешнийЦКК = СправочникВнешниеЦКК.Ссылка
	|	И ТехнологическиеЖурналыВнешниеЦКК.ПередаватьДанные = ИСТИНА
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧ_ВнешниеЦКК.ВнешнийЦКК КАК ВнешнийЦКК,
	|	ТЧ_ВнешниеЦКК.ВнешнийЦКК.WSСсылкаInputStatisticsDate КАК WSСсылка,
	|	ТЧ_ВнешниеЦКК.ВнешнийЦКК.Пользователь КАК Пользователь,
	|	ТЧ_ВнешниеЦКК.ВнешнийЦКК.Пароль КАК Пароль
	|ИЗ
	|	Справочник.ВнешниеЦКК КАК СправочникВнешниеЦКК
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.ВнешниеЦКК.ВнешниеЦКК КАК ТЧ_ВнешниеЦКК
	|ПО
	|	ТЧ_ВнешниеЦКК.Ссылка = СправочникВнешниеЦКК.Ссылка
	|	И ТЧ_ВнешниеЦКК.ПередаватьДанные = ИСТИНА
	|ГДЕ
	|	СправочникВнешниеЦКК.ТипВнешнегоЦКК = &ТипВнешнегоЦККПодчиненный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СправочникВнешниеЦКК.Ссылка КАК ВнешнийЦКК,
	|	СправочникВнешниеЦКК.WSСсылкаInputStatisticsDate КАК WSСсылка,
	|	СправочникВнешниеЦКК.Пользователь КАК Пользователь,
	|	СправочникВнешниеЦКК.Пароль КАК Пароль
	|ИЗ
	|	Справочник.ВнешниеЦКК КАК СправочникВнешниеЦКК
	|ГДЕ
	|	СправочникВнешниеЦКК.ТипВнешнегоЦКК = &ТипВнешнегоЦККГлавный
	|	И СправочникВнешниеЦКК.ЭкспортСчетчиков = ИСТИНА
	|";
	
	Запрос.УстановитьПараметр("ТипВнешнегоЦККПодчиненный", Перечисления.ТипыВнешнихЦКК.Подчиненные);
	Запрос.УстановитьПараметр("ТипВнешнегоЦККГлавный", Перечисления.ТипыВнешнихЦКК.Главные);
	Результат = Запрос.Выполнить();
	
	ВнешниеЦКК = Новый Массив;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВнешнийЦКК = Новый Соответствие;
		ВнешнийЦКК.Вставить("ВнешнийЦКК", Выборка.ВнешнийЦКК);
		ВнешнийЦКК.Вставить("WSСсылка", Выборка.WSСсылка);
		ВнешнийЦКК.Вставить("Пользователь", Выборка.Пользователь);
		ВнешнийЦКК.Вставить("Пароль", Выборка.Пароль);
		
		ВнешниеЦКК.Добавить(ВнешнийЦКК);
	КонецЦикла;
	
	Возврат ВнешниеЦКК;
КонецФункции


Функция ОтправитьДанныеВнешнемуЦКК(ВнешнийЦКК, МаксимальныйНомерПакета) Экспорт
	WSСсылка = ВнешнийЦКК["WSСсылка"];
	Пользователь = ВнешнийЦКК["Пользователь"];
	Пароль = ВнешнийЦКК["Пароль"];
	
	Определение = Неопределено;
		
	Попытка
		Определение = Новый WSОпределения(WSСсылка, Пользователь, Пароль,,180);
	Исключение
		Определение = Неопределено;
		Инфо = ИнформацияОбОшибке();
		Комментарий =
			"Описание = '" +Инфо.Описание + "', " +
			"ИмяМодуля = '" + Инфо.ИмяМодуля + "', " +
			"НомерСтроки = '" + Инфо.НомерСтроки + "', " +
			"ИсходнаяСтрока = '" + Инфо.ИсходнаяСтрока + "'.";
			
			ЗаписьЖурналаРегистрации(
				"Функция ОтправитьДанныеВнешнемуЦКК(...) Экспорт",
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.ОбщиеМодули.СтатистикаОтправкаДанныхВнешнимЦКК,
				,
				Комментарий);
	КонецПопытки;
	
	Если Определение <> Неопределено Тогда
		Прокси = Новый WSПрокси(Определение, "http://1c.ru", "InputStatisticsDate", "InputStatisticsDateSoap",,180);
		Прокси.Пользователь = Пользователь;
		Прокси.Пароль = Пароль;
		
		ПорядковыеНомераПакетов = РегистрыСведений.СтатистикаБуферДатаВнешниеЦКК.ПолучитьТекущиеНомераПакетовДляОтправки(ВнешнийЦКК["ВнешнийЦКК"], МаксимальныйНомерПакета);
		
		ДанныеДляОтправки = Новый Соответствие;
		Для Каждого ПорядковыйНомерПакета Из ПорядковыеНомераПакетов Цикл
			Результат = ПолучитьДанныеИзСтатистикаБуферДатаВнешниеЦКК(ВнешнийЦКК["ВнешнийЦКК"], ПорядковыйНомерПакета);
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				ДанныеПериода = ДанныеДляОтправки[Выборка.ПериодМинута];
				Если ДанныеПериода = Неопределено Тогда
					ДанныеПериода = "";
				КонецЕсли;
				ДанныеПериода = Выборка.Данные + ";";
				ДанныеДляОтправки.Вставить(Выборка.ПериодМинута, ДанныеПериода);
			КонецЦикла;
		КонецЦикла;
		
		Для Каждого ТекДанные Из ДанныеДляОтправки Цикл
			РезультатОтправки = Прокси.InputData(ТекДанные.Ключ, ТекДанные.Значение);
		КонецЦикла;
		
		РегистрыСведений.СтатистикаБуферДатаВнешниеЦКК.УдалитьДанныеПакета(ВнешнийЦКК["ВнешнийЦКК"], ПорядковыйНомерПакета);
	КонецЕсли;
КонецФункции

Функция ПолучитьДанныеИзСтатистикаБуферДатаВнешниеЦКК(ВнешнийЦКК, ПорядковыйНомерПакета)
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СтатистикаБуферДатаВнешниеЦКК.ДатаЗаписи КАК Период,
	|	НАЧАЛОПЕРИОДА(СтатистикаБуферДатаВнешниеЦКК.ДатаЗаписи, МИНУТА) КАК ПериодМинута,
	|	СтатистикаБуферДатаВнешниеЦКК.ГУИД КАК ГУИД,
	|	СтатистикаБуферДатаВнешниеЦКК.Данные КАК Данные
	|ИЗ
	|	РегистрСведений.СтатистикаБуферДатаВнешниеЦКК КАК СтатистикаБуферДатаВнешниеЦКК
	|ГДЕ
	|	СтатистикаБуферДатаВнешниеЦКК.ВнешнийЦКК = &ВнешнийЦКК
	|	И СтатистикаБуферДатаВнешниеЦКК.ПорядковыйНомерПакета = &ПорядковыйНомерПакета
	|";

	Запрос.УстановитьПараметр("ВнешнийЦКК", ВнешнийЦКК);
	Запрос.УстановитьПараметр("ПорядковыйНомерПакета", ПорядковыйНомерПакета);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
КонецФункции