
// Заполняет пустые данные показателей предыдущими значениями
//
//	Параметры:
//		ТаблицаДанных	- Таблица значений. Таблица с данными показателей
//		МассивПолей		- Массив. Массив колонок таблицы, которые необходимо заполнить
//		ПустоеЗначение	- Число. Признак пустого значения
//
Процедура ЗаполнитьПустыеДанныеПредыдущимиЗначениями(ТаблицаДанных, МассивПолей, ПустоеЗначение = -99) Экспорт
	
	Если ТаблицаДанных[0][МассивПолей[0]] = ПустоеЗначение Тогда
		
		Для Каждого Поле Из МассивПолей Цикл
			
			Если ТаблицаДанных.Количество() > 1 И ТаблицаДанных[1][Поле] <> ПустоеЗначение Тогда
				ТаблицаДанных[0][Поле]	= ТаблицаДанных[1][Поле];
			Иначе
				ТаблицаДанных[0][Поле]	= 0;
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЕсли;
	
	Для СчЗаписей = 1 По ТаблицаДанных.Количество() - 2 Цикл
		
		Если ТаблицаДанных[СчЗаписей][МассивПолей[0]] = ПустоеЗначение Тогда
			
			Для Каждого Поле Из МассивПолей Цикл
				ТаблицаДанных[СчЗаписей][Поле]	= ТаблицаДанных[СчЗаписей - 1][Поле];
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СчЗаписей = ТаблицаДанных.Количество() - 1;
	Если ТаблицаДанных[СчЗаписей][МассивПолей[0]] = ПустоеЗначение Тогда
		
		Для Каждого Поле Из МассивПолей Цикл
			ТаблицаДанных[СчЗаписей][Поле]	= ТаблицаДанных[СчЗаписей - 1][Поле];
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТаблицаДанных.Количество() > 0 Тогда
		
		Для Каждого Поле Из МассивПолей Цикл
			
			Если ЗначениеЗаполнено(ТаблицаДанных[0][Поле]) Тогда 
				Продолжить;
			КонецЕсли;
		
			КоличествоПервых = Мин(ТаблицаДанных.Количество(), 10);
			ПервоеЗначение = 0;
			
			Для Сч = 0 По КоличествоПервых - 1 Цикл
				
				Если ЗначениеЗаполнено(ТаблицаДанных[Сч][Поле]) Тогда
					
					ПервоеЗначение = ТаблицаДанных[Сч][Поле];
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ЗначениеЗаполнено(ПервоеЗначение) Тогда
				
				Для Сч = 0 По КоличествоПервых - 1 Цикл
					
					Если ЗначениеЗаполнено(ТаблицаДанных[Сч][Поле]) Тогда
						Прервать;
					Иначе
						ТаблицаДанных[Сч][Поле] = ПервоеЗначение;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
			
КонецПроцедуры

// Вызывается из регламентного задания РасчетИтоговПоказателей
// Расчитывает итоги по показателям
Процедура РасчетИтоговПоказателей() Экспорт
    
    Общий.ПриНачалеВыполненияРегламентногоЗадания();
    
	Запрос = Новый Запрос;
	
	ДатаНачала		= '00010101';
	ДатаОкончания	= КонецДня(ТекущаяДата());
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	МАКСИМУМ(СтатистикаПоИнформационнымБазамИтоги.Период) КАК Период
	|ИЗ
	|	РегистрСведений.СтатистикаПоИнформационнымБазамИтоги КАК СтатистикаПоИнформационнымБазамИтоги
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И Выборка.Период <> Null Тогда
		ДатаНачала = НачалоДня(Выборка.Период);
	КонецЕсли;
	
	РегистрыСведений.СтатистикаПоИнформационнымБазамИтоги.ПересчетИтогов(ДатаНачала, ДатаОкончания);
	
КонецПроцедуры


// Сглаживает замеры в соответствии с передаваемыми параметрами
//
//	Параметры:
//		ТаблицаДанных					- ТаблицаЗначений. Данные серии.
// 		ТипСглаживания					- Тип сглаживания
// 		КоличествоУсредняемыхЗначений	- Число. Размер окна для скользящего среднего
//
Процедура СгладитьДанные(ТаблицаДанных, ТипСглаживания, КоличествоУсредняемыхЗначений = Неопределено) Экспорт
	
	ПараметрыСглаживания = Новый Структура();
	ПараметрыСглаживания.Вставить("ТипСглаживания", ТипСглаживания);
	ПараметрыСглаживания.Вставить("КоличествоУсредняемыхЗначений", КоличествоУсредняемыхЗначений);
	
	Значения = ТаблицаДанных.ВыгрузитьКолонку("Значение");
	
	Значения = МониторингКлиентСервер.СгладитьДанные(Значения, ПараметрыСглаживания);
	
	ТаблицаДанных.ЗагрузитьКолонку(Значения, "Значение");
	
КонецПроцедуры
