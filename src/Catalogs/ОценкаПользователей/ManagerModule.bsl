#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
// Возвращает известные типы оценки
//
// Возвращаемое значение:
//  СписокЗначений
//
Функция ТипыОценки() Экспорт
	
	Результат = Новый СписокЗначений;
	Результат.Добавить("ОбщаяОценка", "Общая оценка");
	Результат.Добавить("СкоростьВыполненияОпераций", "Скорость выполнения операций");
	Результат.Добавить("ОтсутствиеОшибок", "Отсутствие ошибок");
	Результат.Добавить("Доступность", "Доступность");
	
	Возврат Результат;

КонецФункции

Функция ПолучитьМассивСтруктурыПоказателей(ТипПоказателя, ИдентификаторНастройки, МассивСтруктурПоказателей, ТолькоВыбранные) Экспорт
	
	МассивСтруктурыПоказателей = Новый Массив;
	
	ТаблицаПоказателей = Новый ТаблицаЗначений;
	ТаблицаПоказателей.Колонки.Добавить("ПоказательМониторинга", Новый ОписаниеТипов("СправочникСсылка.ПоказателиМониторинга"));
	ТаблицаПоказателей.Колонки.Добавить("ГруппаОбъектовКонтроля", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтруктураПоказатель Из МассивСтруктурПоказателей Цикл
		
		Если ЗначениеЗаполнено(СтруктураПоказатель.Показатель) И СтруктураПоказатель.ТипПоказателя = "ОценкаПользователей" Тогда
			
			НоваяСтрока							= ТаблицаПоказателей.Добавить();
			НоваяСтрока.ПоказательМониторинга	= СтруктураПоказатель.Показатель;
			НоваяСтрока.ГруппаОбъектовКонтроля	= СтруктураПоказатель.ГруппаОбъектовКонтроля;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаТиповОценок = Новый ТаблицаЗначений;
	ТаблицаТиповОценок.Колонки.Добавить("ТипОценки", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(128)));
	ТаблицаТиповОценок.Колонки.Добавить("ТипОценкиНаименование", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(128)));
	
	СписокТиповОценки = ТипыОценки();
	Для Каждого ЭлементСписка Из СписокТиповОценки Цикл
		
		НоваяСтрока							= ТаблицаТиповОценок.Добавить();
		НоваяСтрока.ТипОценки				= ЭлементСписка.Значение;
		НоваяСтрока.ТипОценкиНаименование	= ЭлементСписка.Представление;
			
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ИдентификаторНастройки", ИдентификаторНастройки);
	Запрос.УстановитьПараметр("ТаблицаПоказателей", ТаблицаПоказателей);
	Запрос.УстановитьПараметр("ТаблицаТиповОценок", ТаблицаТиповОценок);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПоказателей.ПоказательМониторинга КАК ПоказательМониторинга,
	|	ТаблицаПоказателей.ГруппаОбъектовКонтроля КАК ГруппаОбъектовКонтроля
	|ПОМЕСТИТЬ
	|	ТаблицаПоказателей
	|ИЗ
	|	&ТаблицаПоказателей КАК ТаблицаПоказателей
	|
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаТиповОценок.ТипОценки КАК ТипОценки,
	|	ТаблицаТиповОценок.ТипОценкиНаименование КАК ТипОценкиНаименование
	|ПОМЕСТИТЬ
	|	ТаблицаТиповОценок
	|ИЗ
	|	&ТаблицаТиповОценок КАК ТаблицаТиповОценок
	|
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаПоказателей.ПоказательМониторинга.Наименование Как Код,
	|	ТаблицаПоказателей.ПоказательМониторинга КАК ПоказательМониторинга
	|ИЗ
	|	ТаблицаПоказателей КАК ТаблицаПоказателей
	|ГДЕ
	|	ТаблицаПоказателей.ГруппаОбъектовКонтроля
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|";
	
	СтруктураДанныхГруппы = Новый Структура();
	СтруктураДанныхГруппы.Вставить("ПоказательМониторинга", "");
	СтруктураДанныхГруппы.Вставить("ОбъектКонтроля", "ГруппаОбъектовКонтроляРодитель");
	СтруктураДанныхГруппы.Вставить("Код", "Группы оценок");
	СтруктураДанныхГруппы.Вставить("МассивСтрок", Новый Массив());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураДанных = Новый Структура();
		СтруктураДанных.Вставить("ПоказательМониторинга", Строка(Выборка.ПоказательМониторинга.УникальныйИдентификатор()));
		СтруктураДанных.Вставить("ОбъектКонтроля", "ГруппаОбъектовКонтроля");
		СтруктураДанных.Вставить("Код", Выборка.Код);
		СтруктураДанных.Вставить("МассивСтрок", Новый Массив());
		
		СтруктураДанныхГруппы.МассивСтрок.Добавить(СтруктураДанных);
		
	КонецЦикла;
	
	МассивСтруктурыПоказателей.Добавить(СтруктураДанныхГруппы);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Базы.ОбъектКонтроля.Наименование КАК БазаНаименование,
	|	Базы.ОбъектКонтроля КАК ОбъектКонтроля,
	|	ТаблицаТиповОценок.ТипОценки КАК ТипОценки,
	|	ТаблицаТиповОценок.ТипОценкиНаименование КАК ТипОценкиНаименование,
	|	ЕСТЬNULL(ТаблицаПоказателей.ПоказательМониторинга, Неопределено) КАК ПоказательМониторинга
	|ИЗ
	|	РегистрСведений.ПараметрыИнформационныхБаз КАК Базы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОценкаПользователей.ИнформационныеБазы КАК ОценкаПользователейИнформационныеБазы
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПоказателей КАК ТаблицаПоказателейОтбор
	|		ПО ТаблицаПоказателейОтбор.ПоказательМониторинга.Показатель = ОценкаПользователейИнформационныеБазы.Ссылка
	|		И НЕ ТаблицаПоказателейОтбор.ГруппаОбъектовКонтроля
	|
	|	ПО ОценкаПользователейИнформационныеБазы.ИнформационнаяБазаСсылка = Базы.ОбъектКонтроля
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТиповОценок КАК ТаблицаТиповОценок
	|	ПО Истина
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПоказателей КАК ТаблицаПоказателей
	|	ПО ТаблицаПоказателей.ПоказательМониторинга.Показатель = ОценкаПользователейИнформационныеБазы.Ссылка
	|	И ТаблицаПоказателей.ПоказательМониторинга.Показатель.ТипОценки = ТаблицаТиповОценок.ТипОценки
	|
	|ГДЕ
	|	Базы.ОбъектКонтроля <> ЗНАЧЕНИЕ(Справочник.ОбъектыКонтроля.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	БазаНаименование,
	|	ТипОценкиНаименование
	|
	|ИТОГИ 
	|	МАКСИМУМ(БазаНаименование) КАК БазаНаименование,
	|	МАКСИМУМ(ПоказательМониторинга) КАК ПоказательМониторинга
	|ПО
	|	ОбъектКонтроля
	|";
	
	ВыборкаБаза = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОбъектКонтроля");
	Пока ВыборкаБаза.Следующий() Цикл
		
		Если ТолькоВыбранные И НЕ ЗначениеЗаполнено(ВыборкаБаза.ПоказательМониторинга) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураДанныхБаза = Новый Структура();
		СтруктураДанныхБаза.Вставить("ПоказательМониторинга", "");
		СтруктураДанныхБаза.Вставить("Код", ВыборкаБаза.БазаНаименование);
		СтруктураДанныхБаза.Вставить("ОбъектКонтроля", Строка(ВыборкаБаза.ОбъектКонтроля.УникальныйИдентификатор()));
		СтруктураДанныхБаза.Вставить("МассивСтрок", Новый Массив());
		
		ВыборкаТипОценки = ВыборкаБаза.Выбрать();
		Пока ВыборкаТипОценки.Следующий() Цикл
		
			Если ТолькоВыбранные И НЕ ЗначениеЗаполнено(ВыборкаТипОценки.ПоказательМониторинга) Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураДанныхТипОценки = Новый Структура();
			
			Если ЗначениеЗаполнено(ВыборкаТипОценки.ПоказательМониторинга) Тогда
				СтруктураДанныхТипОценки.Вставить("ПоказательМониторинга", Строка(ВыборкаТипОценки.ПоказательМониторинга.УникальныйИдентификатор()));
			Иначе
				СтруктураДанныхТипОценки.Вставить("ПоказательМониторинга", "");
			КонецЕсли;
			
			СтруктураДанныхТипОценки.Вставить("Код", ВыборкаТипОценки.ТипОценкиНаименование);
			СтруктураДанныхТипОценки.Вставить("ОбъектКонтроля", Строка(ВыборкаТипОценки.ОбъектКонтроля.УникальныйИдентификатор()) + "/" + ВыборкаТипОценки.ТипОценки);
			СтруктураДанныхТипОценки.Вставить("МассивСтрок", Новый Массив());
			
			СтруктураДанныхБаза.МассивСтрок.Добавить(СтруктураДанныхТипОценки);
			
		КонецЦикла;
		
		МассивСтруктурыПоказателей.Добавить(СтруктураДанныхБаза);
		
	КонецЦикла;
		
	Возврат МассивСтруктурыПоказателей;
	
КонецФункции

Функция ПоискПоказателей(Знач СтрокаПоиска) Экспорт
	
	СтрокаПоиска = СтрЗаменить(СтрокаПоиска, """", "");
	
	МассивРезультатов = Новый Массив;
	
	ТаблицаТиповОценок = Новый ТаблицаЗначений;
	ТаблицаТиповОценок.Колонки.Добавить("ТипОценки", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(128)));
	ТаблицаТиповОценок.Колонки.Добавить("ТипОценкиНаименование", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(128)));
	
	СписокТиповОценки = ТипыОценки();
	Для Каждого ЭлементСписка Из СписокТиповОценки Цикл
		
		НоваяСтрока							= ТаблицаТиповОценок.Добавить();
		НоваяСтрока.ТипОценки				= ЭлементСписка.Значение;
		НоваяСтрока.ТипОценкиНаименование	= ЭлементСписка.Представление;
			
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СтрокаПоиска", "%" + СтрокаПоиска + "%");
	Запрос.УстановитьПараметр("ТаблицаТиповОценок", ТаблицаТиповОценок);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТиповОценок.ТипОценки КАК ТипОценки,
	|	ТаблицаТиповОценок.ТипОценкиНаименование КАК ТипОценкиНаименование
	|ПОМЕСТИТЬ
	|	ТаблицаТиповОценок
	|ИЗ
	|	&ТаблицаТиповОценок КАК ТаблицаТиповОценок
	|
	|;
	|
	|ВЫБРАТЬ
	|	""Оценка/"" + ПараметрыИнформационныхБаз.ОбъектКонтроля.Наименование + ""/"" + ТаблицаТиповОценок.ТипОценкиНаименование КАК Представление,
	|	ПараметрыИнформационныхБаз.ОбъектКонтроля.Наименование КАК БазаПредставление,
	|	ТаблицаТиповОценок.ТипОценки КАК ТипОценки,
	|	ПараметрыИнформационныхБаз.ОбъектКонтроля КАК ОбъектКонтроля
	|ИЗ
	|	РегистрСведений.ПараметрыИнформационныхБаз КАК ПараметрыИнформационныхБаз
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТиповОценок КАК ТаблицаТиповОценок
	|	ПО Истина
	|
	|ГДЕ
	|	(ПараметрыИнформационныхБаз.ОбъектКонтроля.Наименование + ""/"" + ТаблицаТиповОценок.ТипОценкиНаименование) ПОДОБНО &СтрокаПоиска
	|	И ПараметрыИнформационныхБаз.ОбъектКонтроля <> ЗНАЧЕНИЕ(Справочник.ОбъектыКонтроля.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Представление
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураРезультата = Новый Структура();
		СтруктураРезультата.Вставить("Представление", Выборка.Представление);
		СтруктураРезультата.Вставить("ОбъектКонтроля", Строка(Выборка.ОбъектКонтроля.УникальныйИдентификатор()) + "/" + СокрЛП(Выборка.ТипОценки));
		СтруктураРезультата.Вставить("ТипПоказателя", "ОценкаПользователей");
		
		МассивРезультатов.Добавить(СтруктураРезультата);
		
	КонецЦикла;
	
	Возврат МассивРезультатов;
	
КонецФункции

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Описание
	|ИЗ
	|	Справочник.ОценкаПользователей
	|ГДЕ
	|	Ссылка = &Ссылка
	|";
	Запрос.УстановитьПараметр("Ссылка", Данные.Ссылка);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Представление = Выборка.Описание;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецЕсли