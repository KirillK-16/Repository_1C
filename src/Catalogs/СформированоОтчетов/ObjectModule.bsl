#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс    
    
Функция ПолучитьДанные(
	Знач ОпорнаяДата,
	Знач НачальноеСмещение,
	Знач ЧислоТочек,
	Знач Шаг, 
	Статистика = Неопределено, 
	ВычислитьАгрегатныеЗначения = Истина, 
	ВычислитьГоризонтАктуальности = Ложь,
	РежимСдвига = Ложь
) Экспорт
	
	Запрос = Новый Запрос;
	ЗапросТекст = "
	|ВЫБРАТЬ
	|	ОсновнаяТаблицаЗамеров.Дата КАК Время,
	|	ОсновнаяТаблицаЗамеров.СформированоОтчетов КАК ТекущееЗначение,
	|	ВЫБОР
	|		%ИндексацияИнтервалов
	|	КОНЕЦ КАК НомерИнтервала
	|ПОМЕСТИТЬ ВТ_ВыборкаЗамеров
	|ИЗ
	|	РегистрСведений.СтатистикаПоИнформационнымБазам КАК ОсновнаяТаблицаЗамеров
	|ГДЕ
	|	%УсловиеНаБазы
	|	%УсловиеНаИнтервалДат
	|
	|";
	
	ВыбранныеБазы = СписокБаз();
	Если ВыбранныеБазы.Количество() = 1 Тогда
		УсловиеНаБазу = " ОсновнаяТаблицаЗамеров.ИнформационнаяБаза = &СписокБазПерваяБаза И ";
		Запрос.УстановитьПараметр("СписокБазПерваяБаза", ВыбранныеБазы[0]);
	Иначе
		УсловиеНаБазу = " ОсновнаяТаблицаЗамеров.ИнформационнаяБаза В (&Базы) И ";
		Запрос.УстановитьПараметр("Базы", ВыбранныеБазы);
	КонецЕсли;
	ЗапросТекст = СтрЗаменить(ЗапросТекст, "%УсловиеНаБазы", УсловиеНаБазу);
	
	Данные = МониторингСервер.ВыбратьДанныеПоИнтервалам(
		ЭтотОбъект.Ссылка,
		ОпорнаяДата,
		НачальноеСмещение,
		ЧислоТочек,
		Шаг,
		МониторингСервер.СекундВИнтервалеУсреднения(ЭтотОбъект.ИнтервалУсреднения),
		Запрос,
		ЗапросТекст,
		"Дата"
	);
	
	Если Статистика <> Неопределено Тогда
		Если ВычислитьАгрегатныеЗначения Тогда
			Статистика = МониторингКлиентСервер.ВычислитьСредниеЗначения(Данные);
			Статистика.Вставить("ПоТочкам");
			ДатаНачала = ОпорнаяДата + НачальноеСмещение * Шаг;
			ДатаОкончания = ОпорнаяДата + (НачальноеСмещение + ЧислоТочек - 1)* Шаг;
			
			// вычислим параметр "Текущее"
			Попытка
				ТекущееЗначение = Данные[Данные.Количество() - 1];
			Исключение
				Инфо = ИнформацияОбОшибке();
				Комментарий =
					"Описание = '" +Инфо.Описание + "', " +
					"ИмяМодуля = '" + Инфо.ИмяМодуля + "', " +
					"НомерСтроки = '" + Инфо.НомерСтроки + "', " +
					"ИсходнаяСтрока = '" + Инфо.ИсходнаяСтрока + "'.";
			
				ЗаписьЖурналаРегистрации(
					"Функция ПолучитьДанные(...)",
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Справочники.СформированоОтчетов.МодульОбъекта,
					,
					Комментарий);
				
				ТекущееЗначение = 0;
			КонецПопытки;
			Статистика.Вставить("Текущее", ТекущееЗначение);
			
			Статистика.Вставить("Всего", ВсегоЗаПериод(ДатаНачала, ДатаОкончания));
		КонецЕсли;
		
		Если ВычислитьГоризонтАктуальности Тогда
			Запрос = Новый Запрос;
			ЗапросТекст = "ВЫБРАТЬ
			|	МИНИМУМ(МаксимальныеВремена.Время) КАК Время
			|ИЗ
			|(ВЫБРАТЬ
			|	МАКСИМУМ(СтатистикаПоИнформационнымБазам.Дата) КАК Время,
			|	СтатистикаПоИнформационнымБазам.ИнформационнаяБаза
			|ИЗ
			|	РегистрСведений.СтатистикаПоИнформационнымБазам КАК СтатистикаПоИнформационнымБазам
			|ГДЕ 
			|	%УсловиеНаБазы
			|СГРУППИРОВАТЬ ПО
			|	СтатистикаПоИнформационнымБазам.ИнформационнаяБаза
			|) КАК МаксимальныеВремена ";
			
			Если ВыбранныеБазы.Количество() = 1 Тогда
				УсловиеНаБазу = " СтатистикаПоИнформационнымБазам.ИнформационнаяБаза = &СписокБазПерваяБаза ";
				Запрос.УстановитьПараметр("СписокБазПерваяБаза", ВыбранныеБазы[0]);
			Иначе
				УсловиеНаБазу = " СтатистикаПоИнформационнымБазам.ИнформационнаяБаза В (&Базы) ";
				Запрос.УстановитьПараметр("Базы", ВыбранныеБазы);
			КонецЕсли;
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "%УсловиеНаБазы", УсловиеНаБазу);
			
			Запрос.Текст = ЗапросТекст;
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() И Выборка.Время <> Null Тогда
				Статистика.Вставить("Горизонт", Выборка.Время);
			Иначе
				Статистика.Вставить("Горизонт", Неопределено);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции

Функция ПолучитьДанныеОбнаруженияИнцидентов(ОпорнаяДата, Смещение, АгрегирующаяФункция, ФорматнаяСтрокаЗначения) Экспорт
    
    Статистика = Новый Структура;
    Шаг = Смещение/10;
    ПолучитьДанные(ОпорнаяДата - Смещение, 0, 11, Шаг, Статистика, Истина);
    
    Если АгрегирующаяФункция = Перечисления.ФункцииОповещений.Минимум Тогда
		Значение = Статистика.Мин;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Среднее Тогда
		Значение = Статистика.Сред;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Максимум Тогда
		Значение = Статистика.Макс;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Сумма Тогда
		Значение = Статистика.Сумм;
	КонецЕсли;
    
    Данные = Новый Массив;
    Данные.Добавить(Значение);
    Если ЗначениеЗаполнено(ФорматнаяСтрокаЗначения) Тогда
        ИндексНачала = СтрНайти(ФорматнаяСтрокаЗначения, "[");
        ИндексОкончания = СтрНайти(ФорматнаяСтрокаЗначения, "]");
        Если ИндексНачала > 0 И ИндексОкончания > 0 Тогда
            ФорматнаяСтрокаЗначенияБуфер = Сред(ФорматнаяСтрокаЗначения, ИндексНачала + 1, ИндексОкончания - ИндексНачала - 1);
        Иначе
            ФорматнаяСтрокаЗначенияБуфер = ФорматнаяСтрокаЗначения;
        КонецЕсли;
        
        ЗначениеСообщить = СтрЗаменить(ФорматнаяСтрокаЗначения, "[" + ФорматнаяСтрокаЗначенияБуфер + "]", Формат(Значение, ФорматнаяСтрокаЗначенияБуфер));
    Иначе
        ЗначениеСообщить = Значение;
    КонецЕсли;
    
    Сообщить(ЭтотОбъект.Ссылка.Описание + " = " + ЗначениеСообщить);
    
    Возврат Данные;
    
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВсегоЗаПериод(Знач ДатаНачала, Знач ДатаОкончания) Экспорт
	
	Запрос = Новый Запрос;
	ЗапросТекст = "
	|ВЫБРАТЬ
	|	СУММА(ОсновнаяТаблицаЗамеров.СформированоОтчетов) КАК Всего
	|ИЗ
	|	РегистрСведений.СтатистикаПоИнформационнымБазам КАК ОсновнаяТаблицаЗамеров
	|ГДЕ
	|	%УсловиеНаБазы
	|	ОсновнаяТаблицаЗамеров.Дата <= &ДатаОкончания И ОсновнаяТаблицаЗамеров.Дата >= &ДатаНачала
	|
	|";
	
	ВыбранныеБазы = СписокБаз();
	Если ВыбранныеБазы.Количество() = 1 Тогда
		УсловиеНаБазу = " ОсновнаяТаблицаЗамеров.ИнформационнаяБаза = &СписокБазПерваяБаза И ";
		Запрос.УстановитьПараметр("СписокБазПерваяБаза", ВыбранныеБазы[0]);
	Иначе
		УсловиеНаБазу = " ОсновнаяТаблицаЗамеров.ИнформационнаяБаза В (&Базы) И ";
		Запрос.УстановитьПараметр("Базы", ВыбранныеБазы);
	КонецЕсли;
	ЗапросТекст = СтрЗаменить(ЗапросТекст, "%УсловиеНаБазы", УсловиеНаБазу);

	МониторингСервер.УстановитьПараметрыДатыВЗапросе(Запрос, ДатаНачала, ДатаОкончания);
	
	Запрос.Текст = ЗапросТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И Выборка.Всего <> Null Тогда
		Возврат Выборка.Всего;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция СписокБаз()
	СписокБаз = Новый Массив;
	Для Каждого БазаСтрока Из ЭтотОбъект.ИнформационныеБазы Цикл
		СписокБаз.Добавить(БазаСтрока.ИнформационнаяБазаСсылка);
	КонецЦикла;
	Возврат СписокБаз;
КонецФункции

Функция ИдентификаторВариантаПоказателя() Экспорт
	ФильтрПоОбъектамКонтроля = Новый Массив;
	
	ИД = МониторингСервер.ОбщаяЧастьИдентификатораВариантаПоказателя(
		ЭтотОбъект,
		ФильтрПоОбъектамКонтроля
	);
	
	РазделительПолей = "__";
	ИД = ИД + РазделительПолей;
	Для Каждого СтрокаБазы Из ЭтотОбъект.ИнформационныеБазы Цикл
		ИД = ИД + "_" + Строка(СтрокаБазы.ИнформационнаяБазаСсылка.УникальныйИдентификатор());
	КонецЦикла;

	Возврат ИД;
КонецФункции

// Возвращает текстовую строку, описывающую тип показателя
//
// Возвращаемое значение:
//  Строка
//
Функция ИдентификаторТипаПоказателя() Экспорт
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Метаданные().РасширенноеПредставлениеОбъекта) Тогда
		Возврат ЭтотОбъект.Метаданные().РасширенноеПредставлениеОбъекта;
	ИначеЕсли ЗначениеЗаполнено(ЭтотОбъект.Метаданные().ПредставлениеОбъекта) Тогда
		Возврат ЭтотОбъект.Метаданные().ПредставлениеОбъекта;
	Иначе
		Возврат ЭтотОбъект.Метаданные().Синоним;
	КонецЕсли;
	
КонецФункции

// Заполняет параметры по умолчанию отображения показателя на графике
// 
// Параметры:
//  ПараметрОповещения - Структура - см.МониторингСервер.ПараметрОповещенияПоказательЗаписан()
//
Процедура ЗаполнитьПараметрыОтображенияПоУмолчанию(Знач ПараметрОповещения) Экспорт
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	
	ПараметрОповещения.Цвет = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
	ПараметрОповещения.АвтоМасштаб = Истина;
	ПараметрОповещения.Масштаб = 0.01;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Описание) Тогда
		Описание = Описание();
	КонецЕсли;
	
КонецПроцедуры

Функция Описание()
	
	НаименованиеВСтроку = ИдентификаторТипаПоказателя()
		+ " " + ИнтервалУсреднения;
	
	НаименованиеВСтроку = НаименованиеВСтроку +  " (информационные базы = [" 
		+ МониторингСервер.ИнформационныеБазыВСтроку(ИнформационныеБазы.ВыгрузитьКолонку("ИнформационнаяБазаСсылка")) + "])";
	
	Возврат НаименованиеВСтроку;
	
КонецФункции

// Расчитывает данные показателя по периодам
//
//	Параметры:
// 		МенеджерВременныхТаблиц	- МенеджерВременныхТаблиц. Временные таблицы с периодами и показателями.
// 		Детализация				- ТипДополненияПериодаКомпоновкиДанных. Период детализации.
//
//	Возвращаемое значение:
//		ТаблицаДанных. ТаблицаЗначений. Данные показателя.
//
Функция РасчитатьПоказатель(МенеджерВременныхТаблиц, Детализация = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПоказательМониторинга", ЭтотОбъект.Владелец);
	Запрос.УстановитьПараметр("Показатель", ЭтотОбъект.Ссылка);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПодготовительная.ДатаТочки КАК ДатаТочки,
	|	ТаблицаПодготовительная.ДатаТочкиДанные КАК ДатаТочкиДанные
	|ИЗ
	|	ТаблицаПодготовительная КАК ТаблицаПодготовительная
	|ГДЕ
	|	ТаблицаПодготовительная.ПоказательМониторинга = &ПоказательМониторинга
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТочки
	|";
	
	ВыборкаТочки = Запрос.Выполнить().Выбрать();
	
	
	ИмяИнтервалУсреднения = "Час";
	
	Если ЗначениеЗаполнено(ИнтервалУсреднения) Тогда
		
		Индекс					= Перечисления.ИнтервалыУсреднения.Индекс(ИнтервалУсреднения);
		ИмяИнтервалУсреднения	= Метаданные.Перечисления.ИнтервалыУсреднения.ЗначенияПеречисления[Индекс].Имя;
		
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПодготовительная.ДатаТочки КАК ДатаТочки,
	|	МАКСИМУМ(ВложенныйЗапрос.Максимальное) КАК Максимальное,
	|	МИНИМУМ(ВложенныйЗапрос.Минимальное) КАК Минимальное,
	|	СУММА(ВложенныйЗапрос.Значение) КАК Значение
	|
	|ИЗ
	|	ТаблицаПодготовительная КАК ТаблицаПодготовительная
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|
	|	(
	|	ВЫБРАТЬ
	|		ДАТАВРЕМЯ(1,1,1,0,0,0) КАК ДатаТочки,
	|		0 КАК Максимальное,
	|		0 КАК Минимальное,
	|		0 КАК Значение
	|	ГДЕ
	|		Ложь
	|";
	
	СчТочек = 1;
	
	Пока ВыборкаТочки.Следующий() Цикл
		
		ИмяПараметра			= "Точка" + Формат(ВыборкаТочки.ДатаТочки, "ДФ=yyyyMMddHHmmss");
		ИмяПараметраДанные		= "ТочкаДанные" + Формат(ВыборкаТочки.ДатаТочкиДанные, "ДФ=yyyyMMddHHmmss");
		
		Запрос.УстановитьПараметр(ИмяПараметра, ВыборкаТочки.ДатаТочки);
		Запрос.УстановитьПараметр(ИмяПараметраДанные, ВыборкаТочки.ДатаТочкиДанные);
		
		Если Детализация = ТипДополненияПериодаКомпоновкиДанных.Минута
			ИЛИ Детализация = ТипДополненияПериодаКомпоновкиДанных.Секунда 
			ИЛИ ИнтервалУсреднения = Перечисления.ИнтервалыУсреднения.Час
			ИЛИ СчТочек = 1 ИЛИ СчТочек = ВыборкаТочки.Количество()  Тогда
				
			ТекстЗапросаШаблон = "
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		&ДатаТочкиТекущая КАК ДатаТочки,
			|		СУММА(ОсновнаяТаблицаЗамеров.СформированоОтчетов) КАК Максимальное,
			|		СУММА(ОсновнаяТаблицаЗамеров.СформированоОтчетов) КАК Минимальное,
			|		СУММА(ОсновнаяТаблицаЗамеров.СформированоОтчетов) КАК Значение
			|
			|	ИЗ
			|		РегистрСведений.СтатистикаПоИнформационнымБазам КАК ОсновнаяТаблицаЗамеров
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СформированоОтчетов.ИнформационныеБазы КАК СформированоОтчетовИнформационныеБазы
			|		ПО СформированоОтчетовИнформационныеБазы.ИнформационнаяБазаСсылка = ОсновнаяТаблицаЗамеров.ИнформационнаяБаза
			|		И СформированоОтчетовИнформационныеБазы.Ссылка = &Показатель
			|
			|	ГДЕ
			|		ОсновнаяТаблицаЗамеров.Дата > ДОБАВИТЬКДАТЕ(&ДатаТочкиДанныеТекущая, Квартал, -1) 
			|		И ОсновнаяТаблицаЗамеров.Дата <= &ДатаТочкиДанныеТекущая
			|";
			
		Иначе
			
			ТекстЗапросаШаблон = "
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		&ДатаТочкиТекущая КАК ДатаТочки,
			|		СУММА(ОсновнаяТаблицаЗамеров.СформированоОтчетовСумма) КАК Максимальное,
			|		СУММА(ОсновнаяТаблицаЗамеров.СформированоОтчетовСумма) КАК Минимальное,
			|		СУММА(ОсновнаяТаблицаЗамеров.СформированоОтчетовСумма) КАК Значение
			|	ИЗ
			|		РегистрСведений.СтатистикаПоИнформационнымБазамИтоги КАК ОсновнаяТаблицаЗамеров
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СформированоОтчетов.ИнформационныеБазы КАК СформированоОтчетовИнформационныеБазы
			|		ПО СформированоОтчетовИнформационныеБазы.ИнформационнаяБазаСсылка = ОсновнаяТаблицаЗамеров.ИнформационнаяБаза
			|		И СформированоОтчетовИнформационныеБазы.Ссылка = &Показатель
			|
			|	ГДЕ
			|		ОсновнаяТаблицаЗамеров.ПериодЧас > ДОБАВИТЬКДАТЕ(&ДатаТочкиДанныеТекущая, Квартал, -1) 
			|		И ОсновнаяТаблицаЗамеров.ПериодЧас <= &ДатаТочкиДанныеТекущая
			|";
			
			Если Детализация <> ТипДополненияПериодаКомпоновкиДанных.Час 
				И ИнтервалУсреднения <> Перечисления.ИнтервалыУсреднения.Минута 
				И ИнтервалУсреднения <> Перечисления.ИнтервалыУсреднения.Час  Тогда
				ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ПериодЧас", "Период");
			КонецЕсли;
			
		КонецЕсли;
		
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&ДатаТочкиТекущая", "&" + ИмяПараметра);
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&ДатаТочкиДанныеТекущая", "&" + ИмяПараметраДанные);
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "Квартал", ИмяИнтервалУсреднения);
		
		Запрос.Текст = Запрос.Текст + "
		|" + ТекстЗапросаШаблон;
		
		СчТочек = СчТочек + 1;
		
	КонецЦикла;
	
	Запрос.Текст = Запрос.Текст + "
	|
	|	) КАК ВложенныйЗапрос
	|	ПО ТаблицаПодготовительная.ПоказательМониторинга = &ПоказательМониторинга
	|	И ВложенныйЗапрос.ДатаТочки = ТаблицаПодготовительная.ДатаТочки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПодготовительная.ДатаТочки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТочки
	|";

	ТаблицаДетальныхДанных = Запрос.Выполнить().Выгрузить();
	
	МассивПолей = Новый Массив();
	МассивПолей.Добавить("Значение");
	
	РасчетИтоговПоказателей.ЗаполнитьПустыеДанныеПредыдущимиЗначениями(ТаблицаДетальныхДанных, МассивПолей, Null);
	
	Если ЭтотОбъект.Владелец.ПоказыватьТренд Тогда
		РасчетИтоговПоказателей.СгладитьДанные(ТаблицаДетальныхДанных, ЭтотОбъект.Владелец.ТипСглаживания, ЭтотОбъект.Владелец.КоличествоУсредняемыхЗначений);
	КонецЕсли;
	
	Возврат ТаблицаДетальныхДанных;
	
КонецФункции

#КонецОбласти

#КонецЕсли
