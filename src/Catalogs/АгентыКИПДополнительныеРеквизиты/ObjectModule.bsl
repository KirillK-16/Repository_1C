#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытийОбъекта

Процедура ПередЗаписью(Отказ)
    
    ИнформационныеБазыКонтроля = ЭтотОбъект.ИнформационныеБазы.Выгрузить(,"ИнформационнаяБаза").ВыгрузитьКолонку("ИнформационнаяБаза");
    ИнформационныеБазыХешНовый = ХешИнформационныхБаз(ИнформационныеБазыКонтроля);
    
    Если ДополнительныеСвойства.Свойство("ИнформационныеБазыХешБыл") И ДополнительныеСвойства.ИнформационныеБазыХешБыл <> ИнформационныеБазыХешНовый Тогда
        
        ИнформационныеБазыХеш = ИнформационныеБазыХешНовый;
        ДополнительныеСвойства.Вставить("СформироватьКомандуАгенту", Истина);
        ДополнительныеСвойства.Вставить("ИнформационныеБазыКонтроля", ИнформационныеБазыКонтроля);
        
    Иначе
        
        ДополнительныеСвойства.Вставить("СформироватьКомандуАгенту", Ложь);
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
    
    Если ДополнительныеСвойства.СформироватьКомандуАгенту Тогда
        
        ПараметрыКонтроляИнформационныхБаз = КомандаМониторингаДоступностиИнформационныхБаз(ДополнительныеСвойства.ИнформационныеБазыКонтроля);
        
        Команда = Новый Структура;
        Команда.Вставить("infoBaseHash", ИнформационныеБазыХеш);
        Команда.Вставить("settings", ПараметрыКонтроляИнформационныхБаз);
        
        РегистрыСведений.КомандыАгентаКИП.ДобавитьКоманду(ЭтотОбъект.Владелец, Перечисления.ТипыКомандАгентаКИП.RemoteControl, Команда);
        
    КонецЕсли;
    
    Если ДополнительныеСвойства.Свойство("РазмерБуфераСчетчиковПроизводительностиБыл") И ДополнительныеСвойства.РазмерБуфераСчетчиковПроизводительностиБыл <> РазмерБуфераСчетчиковПроизводительности Тогда
        КомандаАгенту = Новый Соответствие;
        КомандаАгенту.Вставить("bufferSize", РазмерБуфераСчетчиковПроизводительности);
        РегистрыСведений.КомандыАгентаКИП.ДобавитьКоманду(ЭтотОбъект.Владелец, Перечисления.ТипыКомандАгентаКИП.PerformanceMonitor, КомандаАгенту);
    КонецЕсли;
            
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ХешИнформационныхБаз(ИнформационныеБазыМассив)
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   URLОпубликованнойИнформационнойБазы,
    |   МеханизмПроверкиОбрабатыватьИзменения,
    |   БезопасноеХранилище.ДанныеХранилища
    |ИЗ
    |   Справочник.КонтрольныеПроцедуры КАК КонтрольныеПроцедуры
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   РегистрСведений.НастройкиКонтрольПодключений КАК Настройки
    |ПО
    |   Настройки.КонтрольнаяПроцедура = КонтрольныеПроцедуры.Ссылка
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   РегистрСведений.БезопасноеХранилище КАК БезопасноеХранилище
    |ПО
    |   БезопасноеХранилище.ВладелецХранилища = КонтрольныеПроцедуры.Ссылка
    |ГДЕ
    |   ОбъектКонтроля В (&ИнформационныеБазы)
    |УПОРЯДОЧИТЬ ПО
    |   КонтрольнаяПроцедура.Ссылка
    |";
    
    Запрос.УстановитьПараметр("ИнформационныеБазы", ИнформационныеБазыМассив);
        
    УстановитьПривилегированныйРежим(Истина);
    Результат = Запрос.Выполнить();
    УстановитьПривилегированныйРежим(Ложь);
            
    ДанныеДляХеша = Новый Массив;
    ДанныеДляХеша.Добавить(Строка(ЭтотОбъект.КонтрольДоступностиИнформационныхБаз));
    
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        
        Если ЗначениеЗаполнено(Выборка.ДанныеХранилища) Тогда
            ДанныеХранилища = Выборка.ДанныеХранилища.Получить();
        Иначе
            ДанныеХранилища = Новый Структура("ЛогинПриПодключении, ПарольПриПодключении", "", "");
        КонецЕсли;
        
        ДанныеДляХеша.Добавить(Выборка.URLОпубликованнойИнформационнойБазы);
        ДанныеДляХеша.Добавить(Выборка.МеханизмПроверкиОбрабатыватьИзменения);
        ДанныеДляХеша.Добавить(ДанныеХранилища.ЛогинПриПодключении);
        ДанныеДляХеша.Добавить(ДанныеХранилища.ПарольПриПодключении);
    КонецЦикла;
    
    ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA256);
    ХешированиеДанных.Добавить(СтрСоединить(ДанныеДляХеша, ""));
    
    Возврат СтрЗаменить(Строка(ХешированиеДанных.ХешСумма), " ", "");
        
КонецФункции

Функция КомандаМониторингаДоступностиИнформационныхБаз(ИнформационныеБазыМассив)
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   КонтрольныеПроцедуры.ОбъектКонтроля КАК ИнформационнаяБаза,
    |   ISNULL(Настройки.URLОпубликованнойИнформационнойБазы, &ПустаяСтрока) КАК URL,
    |   ДанныеХранилища КАК ДанныеХранилища
    |ИЗ
    |   Справочник.КонтрольныеПроцедуры КАК КонтрольныеПроцедуры
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   РегистрСведений.НастройкиКонтрольПодключений КАК Настройки
    |ПО
    |   Настройки.КонтрольнаяПроцедура = КонтрольныеПроцедуры.Ссылка
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   РегистрСведений.БезопасноеХранилище КАК БезопасноеХранилище
    |ПО
    |   БезопасноеХранилище.ВладелецХранилища = КонтрольныеПроцедуры.Ссылка   
    |ГДЕ
    |   ОбъектКонтроля В (&ИнформационныеБазы)
    |   И КонтрольныеПроцедуры.Владелец = &КонтрольПодключений
    |";
    
    Запрос.УстановитьПараметр("ИнформационныеБазы", ИнформационныеБазыМассив);
    Запрос.УстановитьПараметр("КонтрольПодключений", Справочники.ВидыКонтрольныхПроцедур.КонтрольПодключений());
    Запрос.УстановитьПараметр("ПустаяСтрока", "");
        
    УстановитьПривилегированныйРежим(Истина);
    Результат = Запрос.Выполнить();
    УстановитьПривилегированныйРежим(Ложь);
    
    ПараметрыКонтроля = Новый Массив;
    
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        
        ПараметрКонтроля = Новый Структура("InfoBase, URL, Param1, Param2");
        ПараметрКонтроля.InfoBase = Строка(Выборка.ИнформационнаяБаза.УникальныйИдентификатор());
        
        Если СтрЗаканчиваетсяНа(Выборка.URL, "/") Тогда
            ПараметрКонтроля.URL = Выборка.URL + "ws/RemoteControl";
        Иначе
            ПараметрКонтроля.URL = Выборка.URL + "/ws/RemoteControl";
        КонецЕсли;
        
        Если ЗначениеЗаполнено(Выборка.ДанныеХранилища) Тогда
            ДанныеХранилища = Выборка.ДанныеХранилища.Получить();
        Иначе
            ДанныеХранилища = Новый Структура("ЛогинПриПодключении, ПарольПриПодключении", "", "");
        КонецЕсли;
        
        ПараметрКонтроля.Param1 = ДанныеХранилища.ЛогинПриПодключении;
        ПараметрКонтроля.Param2 = ДанныеХранилища.ПарольПриПодключении;
        
        ПараметрыКонтроля.Добавить(ПараметрКонтроля);
        
    КонецЦикла;
    
    Возврат ПараметрыКонтроля;
            
КонецФункции

#КонецОбласти

#КонецЕсли
