
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    ИнициализироватьКомпоновщик();
    
    Если ЭтотОбъект.Параметры.Свойство("ЭлементыПлощадки") Тогда
        
        МассивРабочиеСерверы1С = Справочники.ПлощадкиЭксплуатации.ПолучитьРабочиеСерверы1С(ЭтотОбъект.Параметры.ЭлементыПлощадки);
        
        РабочиеСерверы1С = Новый СписокЗначений;
        РабочиеСерверы1С.ЗагрузитьЗначения(МассивРабочиеСерверы1С);
        
        НовЭлемент = Компоновщик.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
        НовЭлемент.Использование = Истина;
        НовЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РабочийСервер1С");
        НовЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
        НовЭлемент.ПравоеЗначение = РабочиеСерверы1С;
        
        Список.КомпоновщикНастроек.ЗагрузитьНастройки(Компоновщик.ПолучитьНастройки());
        
    КонецЕсли;
    
    ЗаполнитьПараметрыЗаписи();
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьВсе(Команда)
    
    Для Каждого ТекСтрока Из ЭтотОбъект.ПараметрыЗаписи Цикл
        ТекСтрока.Изменить = Истина;
        Элементы["Список" + ТекСтрока.Параметр].Видимость = Истина; 
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
    
    Для Каждого ТекСтрока Из ЭтотОбъект.ПараметрыЗаписи Цикл
        ТекСтрока.Изменить = Ложь;
        Элементы["Список" + ТекСтрока.Параметр].Видимость = Ложь; 
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
    
    ЗаписатьИзменения();
    ЭтотОбъект.Закрыть();
    
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
    ЗаписатьИзменения();
КонецПроцедуры

&НаКлиенте
Процедура НайтиОтличныеОт(Команда)
    
    ТекДанные = Элементы.ПараметрыЗаписи.ТекущиеДанные;
    ТекДанные.ЕстьОтбор = Истина;
    УстановитьОтборПоПараметру(ТекДанные.Параметр, ТекДанные.ПараметрЗначение);
    
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтличныеОт(Команда)
    
    ТекДанные = Элементы.ПараметрыЗаписи.ТекущиеДанные;
    ТекДанные.ЕстьОтбор = Ложь;
    СнятьОтборПоПараметру(ТекДанные.Параметр);
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПараметрыЗаписиПараметрЗначениеПриИзменении(Элемент)
    
    ТекДанные = Элементы.ПараметрыЗаписи.ТекущиеДанные; 
    ЭтотОбъект[ТекДанные.Параметр] = ТекДанные.ПараметрЗначение; 
    
    Если ТекДанные.ЕстьОтбор Тогда
        УстановитьОтборПоПараметру(ТекДанные.Параметр, ТекДанные.ПараметрЗначение);
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗаписиИзменитьПриИзменении(Элемент)
    
    Элементы["Список" + Элемент.Родитель.ТекущиеДанные.Параметр].Видимость = Элемент.Родитель.ТекущиеДанные.Изменить; 
    
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастройкиОтборПриИзменении(Элемент)
    КомпоновщикНастройкиОтборПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗаписиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    Если Поле.Имя = "ПараметрыЗаписиЕстьОтбор" Тогда
        
        ТекДанные = Элемент.ТекущиеДанные;
        Если ТекДанные.ЕстьОтбор Тогда
            УстановитьОтборПоПараметру(ТекДанные.Параметр, ТекДанные.ПараметрЗначение);
        Иначе
            СнятьОтборПоПараметру(ТекДанные.Параметр);            
        КонецЕсли;
        
        СтандартнаяОбработка = Ложь;
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗаписиЕстьОтборПриИзменении(Элемент)
    
    ТекДанные = Элементы.ПараметрыЗаписи.ТекущиеДанные;
    
    Если ТекДанные.ЕстьОтбор Тогда
        УстановитьОтборПоПараметру(ТекДанные.Параметр, ТекДанные.ПараметрЗначение);
    Иначе
        СнятьОтборПоПараметру(ТекДанные.Параметр);
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПараметрыЗаписи()
    
    НастройкиПоУмолчанию = РегистрыСведений.ПараметрыРабочихСерверов.ПрочитатьНастройки(Справочники.ВидыОбъектовКонтроля.РабочийСервер);
    
    ДобавитьПараметр("ДиапазонПортовОт", "Дипазон IP портов от", НастройкиПоУмолчанию["ДиапазонПортовОт"]);
    ДобавитьПараметр("ДиапазонПортовДо", "Дипазон IP портов до", НастройкиПоУмолчанию["ДиапазонПортовДо"]);
    ДобавитьПараметр("КаталогВременный", "Каталог временных файлов", НастройкиПоУмолчанию["КаталогВременный"]);
    ДобавитьПараметр("КаталогНастроекТЖ", "Каталог настроек ТЖ локальный", НастройкиПоУмолчанию["КаталогНастроекТЖ"]);
    ДобавитьПараметр("КаталогНастроекТЖСетевой", "Каталог настроек ТЖ сетевой", НастройкиПоУмолчанию["КаталогНастроекТЖСетевой"]);
    ДобавитьПараметр("КаталогОбменаДанными", "Каталог сбора данных ТЖ локальный", НастройкиПоУмолчанию["КаталогОбменаДанными"]);
    ДобавитьПараметр("КаталогОбменаДаннымиСетевой", "Каталог сбора данных ТЖ сетевой", НастройкиПоУмолчанию["КаталогОбменаДаннымиСетевой"]);
   
КонецПроцедуры

&НаСервере
Процедура ДобавитьПараметр(Параметр, ПараметрПредставление, ПараметрЗначение)
    
    ЭтотОбъект[Параметр] = ПараметрЗначение;
    НовСтрока = ЭтотОбъект.ПараметрыЗаписи.Добавить();
    НовСтрока.Изменить = Истина;
    НовСтрока.Параметр = Параметр;
    НовСтрока.ПараметрПредставление = ПараметрПредставление;
    НовСтрока.ПараметрЗначение = ПараметрЗначение;
    НовСтрока.ЕстьОтбор = Ложь;
    
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзменения()
    
    ДополнительныеПоля = Новый Массив;
    ДополнительныеПоля.Добавить("РабочийСервер1С");
    ТЗнДинСписка = ФункцииСКД.ПолучитьТаблицуЗначенийЭлементаДинамическогоСписка(ЭтотОбъект.Элементы.Список, ДополнительныеПоля);
    РабочиеСерверы1С = ТЗнДинСписка.ВыгрузитьКолонку("РабочийСервер1С");
    
    РеквизитыДляЗаписи = Новый Соответствие;
    
    Запрос = Новый Запрос;
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   ОбъектКонтроля,";
    
    Для Каждого ТекСтрока Из ПараметрыЗаписи Цикл
        Если ТекСтрока.Изменить Тогда
            РеквизитыДляЗаписи.Вставить(ТекСтрока.Параметр, ТекСтрока.ПараметрЗначение);
            Запрос.Текст = Запрос.Текст + " " + ТекСтрока.Параметр + ",";
        КонецЕсли;
    КонецЦикла;
    
    Запрос.Текст = ЛЕВ(Запрос.Текст, СтрДлина(Запрос.Текст) - 1);
    Запрос.Текст = Запрос.Текст + " 
    |ИЗ
    |   РегистрСведений.ПараметрыРабочихСерверов
    |ГДЕ
    |   ОбъектКонтроля В (&РабочиеСерверы1С);
    |";
    
    Запрос.УстановитьПараметр("РабочиеСерверы1С", РабочиеСерверы1С);
    
    Результат = Запрос.Выполнить();
    
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        
        НужнаЗапись = Ложь;
        
        Для Каждого ТекРеквизит Из РеквизитыДляЗаписи Цикл
            
            Если Выборка[ТекРеквизит.Ключ] <> ТекРеквизит.Значение Тогда
                НужнаЗапись = Истина;
                Прервать;
            КонецЕсли;
            
        КонецЦикла;
        
        Если НужнаЗапись Тогда
            
            Настройки = Новый Структура;
            
            Для Каждого ТекРеквизит Из РеквизитыДляЗаписи Цикл
                Настройки.Вставить(ТекРеквизит.Ключ, ТекРеквизит.Значение);
            КонецЦикла;
            РегистрыСведений.ПараметрыРабочихСерверов.ЗаписатьНастройки(Выборка.ОбъектКонтроля, Настройки);
                        
        КонецЕсли;
                
    КонецЦикла;
    
    Компоновщик.Настройки.Отбор.Элементы.Очистить();
    
    Для Каждого ТекПараметр Из ПараметрыЗаписи Цикл
        ТекПараметр.ЕстьОтбор = Ложь;
    КонецЦикла;
    
    РабочиеСерверы1ССписок = Новый СписокЗначений;
    РабочиеСерверы1ССписок.ЗагрузитьЗначения(РабочиеСерверы1С);
    
    НовЭлемент = Компоновщик.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    НовЭлемент.Использование = Истина;
    НовЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РабочийСервер1С");
    НовЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
    НовЭлемент.ПравоеЗначение = РабочиеСерверы1ССписок;
    
    Список.КомпоновщикНастроек.ЗагрузитьНастройки(Компоновщик.ПолучитьНастройки());
    
    ЭтотОбъект.Элементы.Список.Обновить();
    
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьКомпоновщик()
    
    СКД = Новый СхемаКомпоновкиДанных();
	ИсточникСКД = СКД.ИсточникиДанных.Добавить();
	ИсточникСКД.Имя = "ИсточникДанных1";
	ИсточникСКД.ТипИсточникаДанных = "local";
    
    НаборДанных = СКД.НаборыДанных.Добавить(Тип("НаборДанныхОбъектСхемыКомпоновкиДанных"));
    НаборДанных.ИсточникДанных = ИсточникСКД.Имя;
    НаборДанных.Имя = "НаборДанных1";
    НаборДанных.ИмяОбъекта = "НаборДанных1";
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.Поле = "РабочийСервер1С";
    Поле.ПутьКДанным = "РабочийСервер1С";
    Поле.Заголовок = "Рабочий сервер 1С";
    Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ОбъектыКонтроля");
    Поле.ОграничениеИспользованияРеквизитов.Условие = Истина;
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.Поле = "Наименование";
    Поле.ПутьКДанным = "Наименование";
    Поле.Заголовок = "Наименование";
    Поле.ТипЗначения = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150));
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.Поле = "ДиапазонПортовОт";
    Поле.ПутьКДанным = "ДиапазонПортовОт";
    Поле.Заголовок = "Дипазон IP портов от";
    Поле.ТипЗначения = Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(5,0));
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.Поле = "ДиапазонПортовДо";
    Поле.ПутьКДанным = "ДиапазонПортовДо";
    Поле.Заголовок = "Дипазон IP портов до";
    Поле.ТипЗначения = Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(5,0));
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.Поле = "КаталогВременный";
    Поле.ПутьКДанным = "КаталогВременный";
    Поле.Заголовок = "Каталог временных файлов";
    Поле.ТипЗначения = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150));
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.Поле = "КаталогНастроекТЖ";
    Поле.ПутьКДанным = "КаталогНастроекТЖ";
    Поле.Заголовок = "Каталог настроек ТЖ локальный";
    Поле.ТипЗначения = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150));
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.Поле = "КаталогНастроекТЖСетевой";
    Поле.ПутьКДанным = "КаталогНастроекТЖСетевой";
    Поле.Заголовок = "Каталог настроек ТЖ сетевой";
    Поле.ТипЗначения = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150));
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.Поле = "КаталогОбменаДанными";
    Поле.ПутьКДанным = "КаталогОбменаДанными";
    Поле.Заголовок = "Каталог сбора данных ТЖ локальный";
    Поле.ТипЗначения = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150));
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.Поле = "КаталогОбменаДаннымиСетевой";
    Поле.ПутьКДанным = "КаталогОбменаДаннымиСетевой";
    Поле.Заголовок = "Каталог сбора данных ТЖ сетевой";
    Поле.ТипЗначения = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150));
                    
    URLСхемы = ПоместитьВоВременноеХранилище(СКД, Новый УникальныйИдентификатор());
    Компоновщик.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
    
КонецПроцедуры

&НаСервере
Процедура КомпоновщикНастройкиОтборПриИзмененииНаСервере()
    
    Если НЕ Компоновщик.ПолучитьНастройки().НаличиеОтбораУЭлемента(Компоновщик.ПолучитьНастройки()) Тогда
        Для Каждого ТекСтрока Из ПараметрыЗаписи Цикл
            ТекСтрока.ЕстьОтбор = Ложь;
        КонецЦикла;
    КонецЕсли;
    
    Список.КомпоновщикНастроек.ЗагрузитьНастройки(Компоновщик.ПолучитьНастройки());
    Элементы.Список.Обновить();
    
КонецПроцедуры

&НаКлиенте
Функция ГруппаНайтиОтличныеОт(Создать = Истина)
    
    ГруппаНайтиОтличныеОт = Неопределено;
    
    Для Каждого ТекЭлемент Из Компоновщик.Настройки.Отбор.Элементы Цикл
        
        Если ТипЗнч(ТекЭлемент) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") И ТекЭлемент.ИдентификаторПользовательскойНастройки = "b1c27381-4a1c-4dc2-9aea-3dc9b02baa72" Тогда
            ГруппаНайтиОтличныеОт = ТекЭлемент;
            Прервать;
        КонецЕсли;
        
    КонецЦикла;
    
    Если ГруппаНайтиОтличныеОт = Неопределено И Создать Тогда
        
        ГруппаНайтиОтличныеОт = Компоновщик.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
        ГруппаНайтиОтличныеОт.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
        ГруппаНайтиОтличныеОт.Использование = Истина;
        ГруппаНайтиОтличныеОт.ИдентификаторПользовательскойНастройки = "b1c27381-4a1c-4dc2-9aea-3dc9b02baa72";
        
    КонецЕсли;
    
    Возврат ГруппаНайтиОтличныеОт;
    
КонецФункции

&НаКлиенте
Процедура УстановитьОтборПоПараметру(Параметр, ПараметрЗначение)
    
    ГруппаНайтиОтличныеОт = ГруппаНайтиОтличныеОт();
        
    ЭлементОтбора = Неопределено;
    
    Для Каждого ТекЭлемент Из ГруппаНайтиОтличныеОт.Элементы Цикл
        Если Строка(ТекЭлемент.ЛевоеЗначение) = Параметр Тогда
            ЭлементОтбора = ТекЭлемент;
            Прервать;
        КонецЕсли;
    КонецЦикла;
    
    Если ЭлементОтбора = Неопределено Тогда
        ЭлементОтбора = ГруппаНайтиОтличныеОт.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    КонецЕсли;
    
    ЭлементОтбора.Использование = Истина;
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Параметр);
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
    ЭлементОтбора.ПравоеЗначение = ПараметрЗначение;
    
    Элементы.КомпоновщикНастройкиОтбор.ОбновитьТекстРедактирования();
    
    КомпоновщикНастройкиОтборПриИзмененииНаСервере();
    
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтборПоПараметру(Параметр)
    
    ГруппаНайтиОтличныеОт = ГруппаНайтиОтличныеОт(Ложь);
    
    Если ГруппаНайтиОтличныеОт <> Неопределено Тогда
                
        ЭлементОтбора = Неопределено;
        
        Для Каждого ТекЭлемент Из ГруппаНайтиОтличныеОт.Элементы Цикл
            Если Строка(ТекЭлемент.ЛевоеЗначение) = Параметр Тогда
                ЭлементОтбора = ТекЭлемент;
                Прервать;
            КонецЕсли;
        КонецЦикла;
        
        Если ЭлементОтбора = Неопределено Тогда
            ЭлементОтбора = ГруппаНайтиОтличныеОт.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
        КонецЕсли;
        
        Если ЭлементОтбора <> Неопределено Тогда
            
            ГруппаНайтиОтличныеОт.Элементы.Удалить(ЭлементОтбора);
            Элементы.КомпоновщикНастройкиОтбор.ОбновитьТекстРедактирования();
            
            Если ГруппаНайтиОтличныеОт.Элементы.Количество() = 0 Тогда
                Компоновщик.Настройки.Отбор.Элементы.Удалить(ГруппаНайтиОтличныеОт);
            КонецЕсли;
            
            КомпоновщикНастройкиОтборПриИзмененииНаСервере();
            
        КонецЕсли;
        
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти
