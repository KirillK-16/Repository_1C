
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
        ЭтотОбъект.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет;
        ЭтотОбъект.Элементы.Наименование.Видимость = Ложь;
        ЭтотОбъект.Элементы.ГруппаКоманднаяПанельНастройкиПоУмолчанию.Видимость = Истина;
        ЭтотОбъект.Элементы.ЗаписатьИЗАкрытьМоя.КнопкаПоУмолчанию = Истина;
    КонецЕсли;
    
    ЗаполнитьНастройкиПоУмолчанию();
    
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
    ЗаписатьНастройкиПоУмолчанию();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрытьМоя(Команда)
    
    ЗаписатьНастройкиПоУмолчанию();
    ЭтотОбъект.Закрыть();
    
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьМоя(Команда)
    ЗаписатьНастройкиПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    Диалог = Новый ДиалогРасписанияРегламентногоЗадания(ЭтотОбъект.Расписание);
	Диалог.Показать(Новый ОписаниеОповещения("ОткрытьРасписаниеЗавершение", ЭтотОбъект));
    
    СтандартнаяОбработка = Ложь;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНастройкиПоУмолчанию()
    
    НастройкиПоУмолчанию = РегистрыСведений.НастройкиКонтрольПамяти.ПрочитатьНастройки(Справочники.ВидыКонтрольныхПроцедур.КонтрольПотребленияПамяти());
    
    Для Каждого ТекНастройка Из НастройкиПоУмолчанию Цикл
        
        Если ТекНастройка.Ключ = "ПороговаяПамятьМБ" Тогда
            
            НовСтрока = ПараметрыПоУмолчанию.Добавить();
            
            НовСтрока.Параметр = ТекНастройка.Ключ;
            НовСтрока.ПараметрПредставление = "Пороговое оперативной памяти, Мб";
            НовСтрока.ПараметрЗначение = ТекНастройка.Значение;
            
        ИначеЕсли ТекНастройка.Ключ = "АвтоматическиУдалятьЗаписиСеансов" Тогда
            
            НовСтрока = ПараметрыПоУмолчанию.Добавить();
            
            НовСтрока.Параметр = ТекНастройка.Ключ;
            НовСтрока.ПараметрПредставление = "Автоматически удалять записи";
            НовСтрока.ПараметрЗначение = ТекНастройка.Значение;
            
        ИначеЕсли ТекНастройка.Ключ = "СрокХраненияДанных" Тогда
            
            НовСтрока = ПараметрыПоУмолчанию.Добавить();
            
            НовСтрока.Параметр = ТекНастройка.Ключ;
            НовСтрока.ПараметрПредставление = "Хранить данные, часов";
            НовСтрока.ПараметрЗначение = ТекНастройка.Значение;
            
        ИначеЕсли ТекНастройка.Ключ = "Расписание" Тогда
            
            ЭтотОбъект.Расписание = ТекНастройка.Значение;
            Если ЭтотОбъект.Расписание = Неопределено Тогда
                ЭтотОбъект.Расписание = Новый РасписаниеРегламентногоЗадания;
            КонецЕсли;
                       
        КонецЕсли;
        
    КонецЦикла;
    
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиПоУмолчанию()
    
    НастройкиПоУмолчанию = Новый Структура;
    
    Для Каждого ТекНастройка Из ПараметрыПоУмолчанию Цикл
        НастройкиПоУмолчанию.Вставить(ТекНастройка.Параметр, ТекНастройка.ПараметрЗначение);
    КонецЦикла;
    
    НастройкиПоУмолчанию.Вставить("Расписание", ЭтотОбъект.Расписание);
    
    РегистрыСведений.НастройкиКонтрольПамяти.ЗаписатьНастройки(Справочники.ВидыКонтрольныхПроцедур.КонтрольПотребленияПамяти(), НастройкиПоУмолчанию);
    
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписаниеЗавершение(НовоеРасписание, Неопределен) Экспорт
    
    Если НовоеРасписание <> Неопределено Тогда
		ЭтотОбъект.Расписание = НовоеРасписание;
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти
