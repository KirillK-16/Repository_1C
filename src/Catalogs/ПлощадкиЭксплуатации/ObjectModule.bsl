
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПредопределенныеПроцедуры    

Процедура ПередЗаписью(Отказ)
    
    Если ДополнительныеСвойства.Свойство("НеПроверять") И ДополнительныеСвойства.НеПроверять Тогда
        Возврат;
    КонецЕсли;
    
    Если ЭтотОбъект.Родитель.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.Площадка Тогда
        ЭтотОбъект.Площадка = ЭтотОбъект.Родитель;
    Иначе
        ЭтотОбъект.Площадка = Справочники.ПлощадкиЭксплуатации.ПолучитьПлощадкуКорень(ЭтотОбъект.Родитель);
    КонецЕсли;
        
    ЗначениеЗаполненоЭтотОбъектСсылка = ЗначениеЗаполнено(ЭтотОбъект.Ссылка);
    
    Если ЗначениеЗаполненоЭтотОбъектСсылка И ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.Корзина Тогда
        
        ОбщийКлиентСервер.СгенерироватьСообщениеПользователю("Для типа элемента ""Корзина"" данное действие запрещено!", "Список", ЭтотОбъект);
        Отказ = Истина;
        
    КонецЕсли;
    
    Если ЗначениеЗаполненоЭтотОбъектСсылка И ЭтотОбъект.ПометкаУдаления <> Ссылка.ПометкаУдаления Тогда
        
        Если ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.Оборудование Тогда
            ПередУстановкойПометкиУдаленияОборудование(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.Шлюз Тогда
            ПередУстановкойПометкиУдаленияРоли(ПометкаУдаления, Перечисления.ТипЭлементаПлощадки.ГруппаШлюзы);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ВебСерверApache Тогда
            ПередУстановкойПометкиУдаленияРоли(ПометкаУдаления, Перечисления.ТипЭлементаПлощадки.ГруппаВебСерверы);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ВебСерверIIS Тогда
            ПередУстановкойПометкиУдаленияРоли(ПометкаУдаления, Перечисления.ТипЭлементаПлощадки.ГруппаВебСерверы);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.MSSQL Тогда
            ПередУстановкойПометкиУдаленияРоли(ПометкаУдаления, Перечисления.ТипЭлементаПлощадки.ГруппаСУБД);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.PostgreSQL Тогда
            ПередУстановкойПометкиУдаленияРоли(ПометкаУдаления, Перечисления.ТипЭлементаПлощадки.ГруппаСУБД);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.РабочийСервер1С Тогда
            ПередУстановкойПометкиУдаленияРоли(ПометкаУдаления, Перечисления.ТипЭлементаПлощадки.ГруппаРабочиеСерверы1С);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ТерминальныйСервер Тогда
            ПередУстановкойПометкиУдаленияРоли(ПометкаУдаления, Перечисления.ТипЭлементаПлощадки.ГруппаТерминальныеСервера);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.VMware Тогда
            ПередУстановкойПометкиУдаленияРоли(ПометкаУдаления, Перечисления.ТипЭлементаПлощадки.ГруппаВиртуальныеМашины);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаОборудования Тогда
            ПередУстановкойПометкиУдаленияГруппаОборудование(ПометкаУдаления);    
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаШлюзы Тогда
            ПередУстановкойПометкиУдаленияГруппаРоли(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаВебСерверы Тогда
            ПередУстановкойПометкиУдаленияГруппаРоли(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаСУБД Тогда
            ПередУстановкойПометкиУдаленияГруппаРоли(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаРабочиеСерверы1С Тогда
            ПередУстановкойПометкиУдаленияГруппаРоли(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаВиртуальныеМашины Тогда
            ПередУстановкойПометкиУдаленияГруппаРоли(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаТерминальныеСервера Тогда
            ПередУстановкойПометкиУдаленияГруппаРоли(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.КонтрольПотребленияПамяти Тогда
            ПередУстановкойПометкиУдаленияКонтрольПотребленияПамяти(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольПотребленияПамяти Тогда
            ПередУстановкойПометкиУдаленияГруппаКонтрольПотребленияПамяти(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаБазовыеКонтрольныеПроцедуры Тогда
            ПередУстановкойПометкиУдаленияГруппаБазовыеКонтрольныеПроцедуры(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.КонтрольУстойчивости Тогда
            ПередУстановкойПометкиУдаленияКонтрольУстойчивости(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольУстойчивости Тогда
            ПередУстановкойПометкиУдаленияГруппаКонтрольУстойчивости(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.АнализВызововКластера1С Тогда
            ПередУстановкойПометкиУдаленияАнализВызововКластера1С(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.МониторингСистемныхОшибок Тогда
            ПередУстановкойПометкиУдаленияМониторингСистемныхОшибок(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаРасширенныеКонтрольныеПроцедуры Тогда
            ПередУстановкойПометкиУдаленияГруппаРасширенныеКонтрольныеПроцедуры(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаАнализВызововКластера1С Тогда
            ПередУстановкойПометкиУдаленияГруппаАнализВызововКластера1С(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаМониторингСистемныхОшибок Тогда
            ПередУстановкойПометкиУдаленияГруппаМониторингСистемныхОшибок(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.РабочийСерверКластера1С Тогда
            ПередУстановкойПометкиУдаленияРабочийСерверКластера1С(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаРабочиеСерверыКластера1С Тогда
            ПередУстановкойПометкиУдаленияГруппаРабочиеСерверыКластера1С(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.КонтрольПодключений Тогда
            ПередУстановкойПометкиУдаленияКонтрольПодключений(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольПодключений Тогда
            ПередУстановкойПометкиУдаленияГруппаКонтрольПодключений(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.КонтрольПроизводительности Тогда
            ПередУстановкойПометкиУдаленияКонтрольПроизводительности(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольПроизводительности Тогда
            ПередУстановкойПометкиУдаленияГруппаКонтрольПроизводительности(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.КонтрольРегламентныхЗаданий Тогда
            ПередУстановкойПометкиУдаленияКонтрольРегламентныхЗаданий(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольРегламентныхЗаданий Тогда
            ПередУстановкойПометкиУдаленияГруппаКонтрольРегламентныхЗаданий(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.КонтрольНагрузочныхТестов Тогда
            ПередУстановкойПометкиУдаленияКонтрольНагрузочныхТестов(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольНагрузочныхТестов Тогда
            ПередУстановкойПометкиУдаленияГруппаКонтрольНагрузочныхТестов(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ОценкаПользователей Тогда
            ПередУстановкойПометкиУдаленияОценкаПользователей(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаОценкаПользователей Тогда
            ПередУстановкойПометкиУдаленияГруппаОценкаПользователей(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ИнформационнаяБаза Тогда
            ПередУстановкойПометкиУдаленияИнформационнаяБаза(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаИнформационныеБазыКластера1С Тогда
            ПередУстановкойПометкиУдаленияГруппаИнформационныеБазыКластер1С(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаИнформационныеБазы Тогда
            ПередУстановкойПометкиУдаленияГруппаИнформационныеБазы(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.Кластер1С Тогда
            ПередУстановкойПометкиУдаленияКластер1С(ПометкаУдаления, Отказ);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаКластеры1С Тогда
            ПередУстановкойПометкиУдаленияГруппаКластеры1С(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаОборудования Тогда
            ПередУстановкойПометкиУдаленияГруппаОборудования(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.Площадка Тогда
            ПередУстановкойПометкиУдаленияПлощадка(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.Публикация Тогда
            ПередУстановкойПометкиУдаленияПубликация(ПометкаУдаления);
        ИначеЕсли ЭтотОбъект.ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ГруппаПубликации Тогда
            ПередУстановкойПометкиУдаленияГруппаПубликации(ПометкаУдаления);
        КонецЕсли;
               
    КонецЕсли;
    
КонецПроцедуры
 
Процедура ПередУдалением(Отказ)
    
    Если ЕдиницаКонтроля <> Неопределено Тогда
        
        Если ТипЭлемента = Перечисления.ТипЭлементаПлощадки.Оборудование Тогда
            ПередУдалениемОборудование();
        ИначеЕсли ТипЭлемента = Перечисления.ТипЭлементаПлощадки.Кластер1С Тогда
            ПередУдалениемКластер1С();
        ИначеЕсли ТипЭлемента = Перечисления.ТипЭлементаПлощадки.РабочийСерверКластера1С Тогда
            Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("НеУдалять") Тогда
                ПередУдалениемРабочегоСервера1С();
            КонецЕсли;
        ИначеЕсли ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ИнформационнаяБаза Тогда
            Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("НеУдалять") Тогда
                ПередУдалениемИнформационнойБазы();
            КонецЕсли;
        ИначеЕсли ТипЭлемента = Перечисления.ТипЭлементаПлощадки.АнализВызововКластера1С Тогда
            Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("НеУдалять") Тогда
                ПередУдалениемКонтрольнойПроцедуры();
            КонецЕсли;
        ИначеЕсли ТипЭлемента = Перечисления.ТипЭлементаПлощадки.КонтрольУстойчивости Тогда
            Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("НеУдалять") Тогда
                ПередУдалениемКонтрольнойПроцедуры();
            КонецЕсли;
        ИначеЕсли ТипЭлемента = Перечисления.ТипЭлементаПлощадки.МониторингСистемныхОшибок Тогда
            Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("НеУдалять") Тогда
                ПередУдалениемКонтрольнойПроцедуры();
            КонецЕсли;
        ИначеЕсли ТипЭлемента = Перечисления.ТипЭлементаПлощадки.КонтрольПодключений Тогда
            Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("НеУдалять") Тогда
                ПередУдалениемКонтрольнойПроцедуры();
            КонецЕсли;
        ИначеЕсли ТипЭлемента = Перечисления.ТипЭлементаПлощадки.КонтрольПроизводительности Тогда
            Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("НеУдалять") Тогда
                ПередУдалениемКонтрольнойПроцедуры();
            КонецЕсли;
        ИначеЕсли ТипЭлемента = Перечисления.ТипЭлементаПлощадки.КонтрольРегламентныхЗаданий Тогда
            Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("НеУдалять") Тогда
                ПередУдалениемКонтрольнойПроцедуры();
            КонецЕсли;
        ИначеЕсли ТипЭлемента = Перечисления.ТипЭлементаПлощадки.КонтрольНагрузочныхТестов Тогда
            Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("НеУдалять") Тогда
                ПередУдалениемКонтрольнойПроцедуры();
            КонецЕсли;
        ИначеЕсли ТипЭлемента = Перечисления.ТипЭлементаПлощадки.ОценкаПользователей Тогда
            Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("НеУдалять") Тогда
                ПередУдалениемКонтрольнойПроцедуры();
            КонецЕсли;
        КонецЕсли;
        
    КонецЕсли;
          
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПередУдалениемОборудование()
        
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   Ссылка
    |ИЗ
    |   Справочник.ПлощадкиЭксплуатации
    |ГДЕ
    |   ЕдиницаКонтроля = &ЕдиницаКонтроля
    |   И Ссылка <> &Ссылка
    |";
    
    Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
    Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
        СпрОбъект.Удалить();
    КонецЦикла;
    
    ЕдиницаКонтроляОбъект = ЕдиницаКонтроля.ПолучитьОбъект();
    Если ЕдиницаКонтроляОбъект <> Неопределено Тогда
        ЕдиницаКонтроляОбъект.Удалить();
    КонецЕсли;
            
КонецПроцедуры

Процедура ПередУдалениемКластер1С()
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   Ссылка
    |ИЗ
    |   Справочник.ПлощадкиЭксплуатации
    |ГДЕ
    |   ЕдиницаКонтроля = &ЕдиницаКонтроля
    |   И Ссылка <> &Ссылка
    |";
    
    Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
    Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
        СпрОбъект.Удалить();
    КонецЦикла;
    
    ЕдиницаКонтроляОбъект = ЕдиницаКонтроля.ПолучитьОбъект();
    Если ЕдиницаКонтроляОбъект <> Неопределено Тогда
        ЕдиницаКонтроляОбъект.Удалить();
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУдалениемРабочегоСервера1С()
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   Ссылка
    |ИЗ
    |   Справочник.ПлощадкиЭксплуатации
    |ГДЕ
    |   ЕдиницаКонтроля = &ЕдиницаКонтроля
    |   И Ссылка <> &Ссылка
    |";
    
    Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
    Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
        СпрОбъект.ДополнительныеСвойства.Вставить("НеУдалять", Истина);
        СпрОбъект.Удалить();
    КонецЦикла;
    
    ЕдиницаКонтроляОбъект = ЕдиницаКонтроля.ПолучитьОбъект();
    Если ЕдиницаКонтроляОбъект <> Неопределено Тогда
        ЕдиницаКонтроляОбъект.Удалить();
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУдалениемИнформационнойБазы()
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   Ссылка
    |ИЗ
    |   Справочник.ПлощадкиЭксплуатации
    |ГДЕ
    |   ЕдиницаКонтроля = &ЕдиницаКонтроля
    |   И Ссылка <> &Ссылка
    |";
    
    Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
    Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
        СпрОбъект.ДополнительныеСвойства.Вставить("НеУдалять", Истина);
        СпрОбъект.Удалить();
    КонецЦикла;
    
    ЕдиницаКонтроляОбъект = ЕдиницаКонтроля.ПолучитьОбъект();
    Если ЕдиницаКонтроляОбъект <> Неопределено Тогда
        ЕдиницаКонтроляОбъект.Удалить();
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУдалениемКонтрольнойПроцедуры()
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   Ссылка
    |ИЗ
    |   Справочник.ПлощадкиЭксплуатации
    |ГДЕ
    |   ЕдиницаКонтроля = &ЕдиницаКонтроля
    |   И Ссылка <> &Ссылка
    |";
    
    Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
    Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
        СпрОбъект.ДополнительныеСвойства.Вставить("НеУдалять", Истина);
        СпрОбъект.Удалить();
    КонецЦикла;
    
    ЕдиницаКонтроляОбъект = ЕдиницаКонтроля.ПолучитьОбъект();
    Если ЕдиницаКонтроляОбъект <> Неопределено Тогда
        ЕдиницаКонтроляОбъект.Удалить();
    КонецЕсли;
    
КонецПроцедуры

Процедура ПометкаУдаленияКонтрольнаяПроцедураОбщая(КонтрольнаяПроцедура, ПометкаУдаления)
    
    КонтрольнаяПроцедураОбъект = КонтрольнаяПроцедура.ПолучитьОбъект();
    КонтрольнаяПроцедураОбъект.ОбменДанными.Загрузка = Истина;
    КонтрольнаяПроцедураОбъект.ПометкаУдаления = ПометкаУдаления;
    КонтрольнаяПроцедураОбъект.Пауза = ПометкаУдаления;
    КонтрольнаяПроцедураОбъект.Записать();
    
    Если ЗначениеЗаполнено(КонтрольнаяПроцедураОбъект.КлючРегламентногоЗадания) Тогда 
        Задания = УправлениеЗаданиямиСервер.ПолучитьРегламентныеЗадания("Ключ", КонтрольнаяПроцедураОбъект.КлючРегламентногоЗадания);
        Если Задания.Количество() = 1 Тогда
            Задание = Задания[0];
            Задание.Использование = НЕ ПометкаУдаления;
            Задание.Записать();
        КонецЕсли;
    КонецЕсли;    
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияОборудование(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    
    Если ПометкаУдаления Тогда
        
        ЕдиницаКонтроляОбъект = ЭтотОбъект.ЕдиницаКонтроля.ПолучитьОбъект();
        Если ЕдиницаКонтроляОбъект <> Неопределено Тогда
            
            НужнаЗапись = Ложь;
            Если ЕдиницаКонтроляОбъект.ПлощадкаДляВосстановления <> ЕдиницаКонтроляОбъект.ПлощадкаЭксплуатации Тогда
                ЕдиницаКонтроляОбъект.ПлощадкаДляВосстановления = ЕдиницаКонтроляОбъект.ПлощадкаЭксплуатации;
                НужнаЗапись = НужнаЗапись ИЛИ Истина;
            КонецЕсли;
            
            Если ЕдиницаКонтроляОбъект.ПлощадкаЭксплуатации <> Корзина Тогда
                ЕдиницаКонтроляОбъект.ПометкаУдаления = Истина;
                ЕдиницаКонтроляОбъект.ПлощадкаЭксплуатации = Корзина;
                НужнаЗапись = НужнаЗапись ИЛИ Истина;
            КонецЕсли;
            
            Если НужнаЗапись Тогда
                ЕдиницаКонтроляОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                ЕдиницаКонтроляОбъект.Записать();
            КонецЕсли;
        КонецЕсли;
        
        ЭтотОбъект.Родитель = Корзина;
        
    Иначе
        
        ЕдиницаКонтроляОбъект = ЭтотОбъект.ЕдиницаКонтроля.ПолучитьОбъект();
        
        Если ЕдиницаКонтроляОбъект <> Неопределено Тогда
            
            Если ЕдиницаКонтроляОбъект.ПлощадкаДляВосстановления.ПометкаУдаления Тогда
                
                ПлощадкаЭксплуатацииОбъект = ЕдиницаКонтроляОбъект.ПлощадкаДляВосстановления.ПолучитьОбъект();
                ПлощадкаЭксплуатацииОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
                
            КонецЕсли;
            
            Если ЕдиницаКонтроляОбъект.ПлощадкаДляВосстановления <> Справочники.ПлощадкиЭксплуатации.Корзина() Тогда
                ЕдиницаКонтроляОбъект.ПлощадкаЭксплуатации = ЕдиницаКонтроляОбъект.ПлощадкаДляВосстановления;
            Иначе
                ЕдиницаКонтроляОбъект.ПлощадкаЭксплуатации = Справочники.ПлощадкиЭксплуатации.Основная();
            КонецЕсли;
            
            ЕдиницаКонтроляОбъект.ПлощадкаДляВосстановления = Справочники.ПлощадкиЭксплуатации.ПустаяСсылка();
            ЕдиницаКонтроляОбъект.ПометкаУдаления = Ложь;
            ЕдиницаКонтроляОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
            ЕдиницаКонтроляОбъект.Записать();
            
            ГруппаОборудование = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ЕдиницаКонтроляОбъект.ПлощадкаЭксплуатации, Перечисления.ТипЭлементаПлощадки.ГруппаОборудования);
            ЭтотОбъект.Родитель = ГруппаОборудование;
            
        КонецЕсли;
        
    КонецЕсли;
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   Ссылка
    |ИЗ
    |   Справочник.ПлощадкиЭксплуатации
    |ГДЕ
    |   ЕдиницаКонтроля = &ЕдиницаКонтроля
    |   И Ссылка <> &Ссылка
    |";
    
    Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
    Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
        СпрОбъект.УстановитьПометкуУдаления(ПометкаУдаления, Ложь);
    КонецЦикла;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияРоли(ПометкаУдаления, ТипЭлементаПлощадки)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
        
    Если ПометкаУдаления Тогда
        
        ЭтотОбъект.Родитель = Корзина;
        ЭтотОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
        
    Иначе
        
        Если ЕдиницаКонтроля.ПлощадкаЭксплуатации = Корзина Тогда
            ОбщийКлиентСервер.СгенерироватьСообщениеПользователю("Оборудование помечено на удаление! Снятие пометки удаления не возможно!", "Список", ЭтотОбъект.Ссылка);
            ЭтотОбъект.ПометкаУдаления = Истина;
        Иначе
            ГруппаПлощадки = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ЕдиницаКонтроля.ПлощадкаЭксплуатации, ТипЭлементаПлощадки);
            ЭтотОбъект.Родитель = ГруппаПлощадки;
        КонецЕсли;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаОборудование(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
            
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаРоли(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияКонтрольПотребленияПамяти(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    ТипРодителя = ЭтотОбъект.Ссылка.Родитель.ТипЭлемента; 
    
    Если ПометкаУдаления Тогда
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
                
        Если ТипРодителя = Перечисления.ТипЭлементаПлощадки.Кластер1С Тогда
            
            ЭтотОбъект.ПометкаУдаления = Ложь;
            ЭтотОбъект.Скрыть = Истина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                
                НеобходимоЗаписать = Ложь;
                
                Если НЕ СпрОбъект.ПометкаУдаления Тогда
                    СпрОбъект.ПометкаУдаления = Истина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если СпрОбъект.Родитель <> Корзина Тогда
                    СпрОбъект.Родитель = Корзина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если НеобходимоЗаписать Тогда
                    СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                    СпрОбъект.Записать();
                КонецЕсли;
                
            КонецЦикла;
            
        ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольПотребленияПамяти Тогда
            
            ЭтотОбъект.Родитель = Корзина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                СпрОбъект.Скрыть = Истина;
                СпрОбъект.Записать();
            КонецЦикла;
            
        КонецЕсли;
        
    Иначе
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        // Проверка, а не помечен ли кластер 1С на удаление
        Запрос = Новый Запрос;
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Родитель = &Корзина
        |";
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля);
        Запрос.УстановитьПараметр("Корзина", Корзина);
        Результат = Запрос.Выполнить();
        
        Если НЕ Результат.Пустой() Тогда
            
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
            
        КонецЕсли;    
        
        ОсновнаяПлощадка = ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля.ПлощадкаЭксплуатации;
        ГруппаБазовыеКонтрольныеПроцедуры = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ОсновнаяПлощадка, Перечисления.ТипЭлементаПлощадки.ГруппаБазовыеКонтрольныеПроцедуры);
        ГруппаКонтрольПотребленияПамяти = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ГруппаБазовыеКонтрольныеПроцедуры, Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольПотребленияПамяти);
        ЭтотОбъект.Родитель = ГруппаКонтрольПотребленияПамяти; 
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Ложь;
            СпрОбъект.Записать();
        КонецЦикла;
        
    КонецЕсли;
        
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаКонтрольПотребленияПамяти(ПометкаУдаления)

    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
     
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаБазовыеКонтрольныеПроцедуры(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияКонтрольУстойчивости(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    ТипРодителя = ЭтотОбъект.Ссылка.Родитель.ТипЭлемента; 
    
    Если ПометкаУдаления Тогда
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        Если ТипРодителя = Перечисления.ТипЭлементаПлощадки.РабочийСерверКластера1С Тогда
            
            ЭтотОбъект.ПометкаУдаления = Ложь;
            ЭтотОбъект.Скрыть = Истина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                
                НеобходимоЗаписать = Ложь;
                
                Если НЕ СпрОбъект.ПометкаУдаления Тогда
                    СпрОбъект.ПометкаУдаления = Истина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если СпрОбъект.Родитель <> Корзина Тогда
                    СпрОбъект.Родитель = Корзина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если НеобходимоЗаписать Тогда
                    СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                    СпрОбъект.Записать();
                КонецЕсли;
            
            КонецЦикла;
            
        ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольУстойчивости Тогда
            
            ЭтотОбъект.Родитель = Корзина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                СпрОбъект.Скрыть = Истина;
                СпрОбъект.Записать();
            КонецЦикла;
            
        КонецЕсли;
        
    Иначе
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        // Проверка, а не помечен ли рабочий сервер на удаление
        Запрос = Новый Запрос;
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Родитель = &Корзина
        |";
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля);
        Запрос.УстановитьПараметр("Корзина", Корзина);
        Результат = Запрос.Выполнить();
        
        Если НЕ Результат.Пустой() Тогда
            
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
            
        КонецЕсли;
        
        ОсновнаяПлощадка = ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля.ПлощадкаЭксплуатации;
        ГруппаБазовыеКонтрольныеПроцедуры = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ОсновнаяПлощадка, Перечисления.ТипЭлементаПлощадки.ГруппаБазовыеКонтрольныеПроцедуры);
        ГруппаКонтрольУстойчивости = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ГруппаБазовыеКонтрольныеПроцедуры, Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольУстойчивости);
        ЭтотОбъект.Родитель = ГруппаКонтрольУстойчивости; 
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Ложь;
            СпрОбъект.Записать();
            
            ВосстановитьВидимостьРодителей(Выборка.Ссылка);
            
        КонецЦикла;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаКонтрольУстойчивости(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияАнализВызововКластера1С(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    ТипРодителя = ЭтотОбъект.Ссылка.Родитель.ТипЭлемента; 
    
    Если ПометкаУдаления Тогда
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        Если ТипРодителя = Перечисления.ТипЭлементаПлощадки.РабочийСерверКластера1С Тогда
            
            ЭтотОбъект.ПометкаУдаления = Ложь;
            ЭтотОбъект.Скрыть = Истина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                
                НеобходимоЗаписать = Ложь;
                
                Если НЕ СпрОбъект.ПометкаУдаления Тогда
                    СпрОбъект.ПометкаУдаления = Истина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если СпрОбъект.Родитель <> Корзина Тогда
                    СпрОбъект.Родитель = Корзина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если НеобходимоЗаписать Тогда
                    СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                    СпрОбъект.Записать();
                КонецЕсли;
                
            КонецЦикла;
            
        ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаАнализВызововКластера1С Тогда
            
            ЭтотОбъект.Родитель = Корзина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                СпрОбъект.Скрыть = Истина;
                СпрОбъект.Записать();
            КонецЦикла;
            
        КонецЕсли;
        
    Иначе
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        // Проверка, а не помечен ли рабочий сервер на удаление
        Запрос = Новый Запрос;
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Родитель = &Корзина
        |";
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля);
        Запрос.УстановитьПараметр("Корзина", Корзина);
        Результат = Запрос.Выполнить();
        
        Если НЕ Результат.Пустой() Тогда
            
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
            
        КонецЕсли;
        
        ОсновнаяПлощадка = ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля.ПлощадкаЭксплуатации;
        ГруппаРасширенныеКонтрольныеПроцедуры = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ОсновнаяПлощадка, Перечисления.ТипЭлементаПлощадки.ГруппаРасширенныеКонтрольныеПроцедуры);
        ГруппаАнализВызововКластера1С = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ГруппаРасширенныеКонтрольныеПроцедуры, Перечисления.ТипЭлементаПлощадки.ГруппаАнализВызововКластера1С);
        ЭтотОбъект.Родитель = ГруппаАнализВызововКластера1С; 
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Ложь;
            СпрОбъект.Записать();
            
            ВосстановитьВидимостьРодителей(Выборка.Ссылка);
            
        КонецЦикла;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияМониторингСистемныхОшибок(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    ТипРодителя = ЭтотОбъект.Ссылка.Родитель.ТипЭлемента; 
    
    Если ПометкаУдаления Тогда
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        Если ТипРодителя = Перечисления.ТипЭлементаПлощадки.РабочийСерверКластера1С Тогда
            
            ЭтотОбъект.ПометкаУдаления = Ложь;
            ЭтотОбъект.Скрыть = Истина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                
                НеобходимоЗаписать = Ложь;
                
                Если НЕ СпрОбъект.ПометкаУдаления Тогда
                    СпрОбъект.ПометкаУдаления = Истина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если СпрОбъект.Родитель <> Корзина Тогда
                    СпрОбъект.Родитель = Корзина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если НеобходимоЗаписать Тогда
                    СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                    СпрОбъект.Записать();
                КонецЕсли;
            
            КонецЦикла;
            
        ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаМониторингСистемныхОшибок Тогда
            
            ЭтотОбъект.Родитель = Корзина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                СпрОбъект.Скрыть = Истина;
                СпрОбъект.Записать();
            КонецЦикла;
            
        КонецЕсли;
        
    Иначе
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        // Проверка, а не помечен ли рабочий сервер на удаление
        Запрос = Новый Запрос;
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Родитель = &Корзина
        |";
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля);
        Запрос.УстановитьПараметр("Корзина", Корзина);
        Результат = Запрос.Выполнить();
        
        Если НЕ Результат.Пустой() Тогда
            
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
            
        КонецЕсли;
        
        ОсновнаяПлощадка = ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля.ПлощадкаЭксплуатации;
        ГруппаРасширенныеКонтрольныеПроцедуры = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ОсновнаяПлощадка, Перечисления.ТипЭлементаПлощадки.ГруппаРасширенныеКонтрольныеПроцедуры);
        ГруппаМониторингСистемныхОшибок = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ГруппаРасширенныеКонтрольныеПроцедуры, Перечисления.ТипЭлементаПлощадки.ГруппаМониторингСистемныхОшибок);
        ЭтотОбъект.Родитель = ГруппаМониторингСистемныхОшибок; 
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Ложь;
            СпрОбъект.Записать();
            
            ВосстановитьВидимостьРодителей(Выборка.Ссылка);
            
        КонецЦикла;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаРасширенныеКонтрольныеПроцедуры(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаАнализВызововКластера1С(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаМониторингСистемныхОшибок(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияРабочийСерверКластера1С(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    ТипРодителя = ЭтотОбъект.Ссылка.Родитель.ТипЭлемента;
    
    Если ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаРабочиеСерверыКластера1С Тогда
        
        ЭтотОбъект.ПометкаУдаления = Ложь;
        ЭтотОбъект.Скрыть = Истина;
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            
            НеобходимоЗаписать = Ложь;
            
            Если НЕ СпрОбъект.ПометкаУдаления Тогда
                СпрОбъект.ПометкаУдаления = Истина;
                НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
            КонецЕсли;
            
            Если СпрОбъект.Родитель <> Корзина Тогда
                СпрОбъект.Родитель = Корзина;
                НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
            КонецЕсли;
            
            Если НеобходимоЗаписать Тогда
                СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                СпрОбъект.Записать();
            КонецЕсли;
        КонецЦикла;
        
    ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаРабочиеСерверы1С Тогда
        
        ЭтотОбъект.Родитель = Корзина;
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Истина;
            СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
            СпрОбъект.Записать();
            
            ЗапросПотомки = Новый Запрос;
            
            ЗапросПотомки.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   Родитель = &Родитель
            |";
            
            ЗапросПотомки.УстановитьПараметр("Родитель", Выборка.Ссылка);
            РезультатПотомки = ЗапросПотомки.Выполнить();
            ВыборкаПотомки = РезультатПотомки.Выбрать();
            Пока ВыборкаПотомки.Следующий() Цикл
                СпрОбъектПотомки = ВыборкаПотомки.Ссылка.ПолучитьОбъект();
                СпрОбъектПотомки.УстановитьПометкуУдаления(Истина, Ложь);
            КонецЦикла;
            
        КонецЦикла;
        
    ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.Корзина Тогда
        
        // Проверка, а не помечен ли кластер 1С на удаление
        Запрос = Новый Запрос;
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Родитель = &Корзина
        |";
        
        Кластер1С = Справочники.ОбъектыКонтроля.Свойство(ЭтотОбъект.ЕдиницаКонтроля, "Кластер");
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", Кластер1С);
        Запрос.УстановитьПараметр("Корзина", Корзина);
        Результат = Запрос.Выполнить();
        
        Если НЕ Результат.Пустой() Тогда
            
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
            
        КонецЕсли;
        
        ГруппаРабочиеСерверы1С = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ЕдиницаКонтроля.ПлощадкаЭксплуатации, Перечисления.ТипЭлементаПлощадки.ГруппаРабочиеСерверы1С);
        ЭтотОбъект.Родитель = ГруппаРабочиеСерверы1С;
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Ложь;
            СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
            СпрОбъект.Записать();
            
            ВосстановитьВидимостьРодителей(Выборка.Ссылка);
            
        КонецЦикла;
        
        ГруппаКластеры1С = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ЕдиницаКонтроля.ПлощадкаЭксплуатации, Перечисления.ТипЭлементаПлощадки.ГруппаКластеры1С);
        ПлощадкаКластер1С = Справочники.ПлощадкиЭксплуатации.ПолучитьЭлементГруппы(ГруппаКластеры1С, Кластер1С, Перечисления.ТипЭлементаПлощадки.Кластер1С);
        ГруппаРабочиеСерверы1С = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ПлощадкаКластер1С, Перечисления.ТипЭлементаПлощадки.ГруппаРабочиеСерверыКластера1С);
        ПлощадкаРабочийСервер = Справочники.ПлощадкиЭксплуатации.ПолучитьЭлементГруппы(ГруппаРабочиеСерверы1С, ЭтотОбъект.ЕдиницаКонтроля, Перечисления.ТипЭлементаПлощадки.РабочийСерверКластера1С);
            
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаРабочиеСерверыКластера1С(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияКонтрольПодключений(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    ТипРодителя = ЭтотОбъект.Ссылка.Родитель.ТипЭлемента; 
    
    Если ПометкаУдаления Тогда
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        Если ТипРодителя = Перечисления.ТипЭлементаПлощадки.ИнформационнаяБаза Тогда
            
            ЭтотОбъект.ПометкаУдаления = Ложь;
            ЭтотОбъект.Скрыть = Истина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                
                НеобходимоЗаписать = Ложь;
                
                Если НЕ СпрОбъект.ПометкаУдаления Тогда
                    СпрОбъект.ПометкаУдаления = Истина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если СпрОбъект.Родитель <> Корзина Тогда
                    СпрОбъект.Родитель = Корзина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если НеобходимоЗаписать Тогда
                    СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                    СпрОбъект.Записать();
                КонецЕсли;
           
            КонецЦикла;
            
        ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольПодключений Тогда
            
            ЭтотОбъект.Родитель = Корзина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                СпрОбъект.Скрыть = Истина;
                СпрОбъект.Записать();
            КонецЦикла;
            
        КонецЕсли;
        
    Иначе
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        // Проверка, а не помечен ли рабочий сервер на удаление
        Запрос = Новый Запрос;
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Родитель = &Корзина
        |";
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля);
        Запрос.УстановитьПараметр("Корзина", Корзина);
        Результат = Запрос.Выполнить();
        
        Если НЕ Результат.Пустой() Тогда
            
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
            
        КонецЕсли;
        
        ОсновнаяПлощадка = ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля.ПлощадкаЭксплуатации;
        ГруппаБазовыеКонтрольныеПроцедуры = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ОсновнаяПлощадка, Перечисления.ТипЭлементаПлощадки.ГруппаБазовыеКонтрольныеПроцедуры);
        ГруппаКонтрольПодключений = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ГруппаБазовыеКонтрольныеПроцедуры, Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольПодключений);
        ЭтотОбъект.Родитель = ГруппаКонтрольПодключений; 
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Ложь;
            СпрОбъект.Записать();
            
            ВосстановитьВидимостьРодителей(Выборка.Ссылка);
            
        КонецЦикла;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаКонтрольПодключений(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияКонтрольПроизводительности(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    ТипРодителя = ЭтотОбъект.Ссылка.Родитель.ТипЭлемента; 
    
    Если ПометкаУдаления Тогда
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        Если ТипРодителя = Перечисления.ТипЭлементаПлощадки.ИнформационнаяБаза Тогда
            
            ЭтотОбъект.ПометкаУдаления = Ложь;
            ЭтотОбъект.Скрыть = Истина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                
                НеобходимоЗаписать = Ложь;
                
                Если НЕ СпрОбъект.ПометкаУдаления Тогда
                    СпрОбъект.ПометкаУдаления = Истина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если СпрОбъект.Родитель <> Корзина Тогда
                    СпрОбъект.Родитель = Корзина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если НеобходимоЗаписать Тогда
                    СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                    СпрОбъект.Записать();
                КонецЕсли;
            
            КонецЦикла;
            
        ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольПроизводительности Тогда
            
            ЭтотОбъект.Родитель = Корзина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                СпрОбъект.Скрыть = Истина;
                СпрОбъект.Записать();
            КонецЦикла;
            
        КонецЕсли;
        
    Иначе
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        // Проверка, а не помечен ли рабочий сервер на удаление
        Запрос = Новый Запрос;
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Родитель = &Корзина
        |";
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля);
        Запрос.УстановитьПараметр("Корзина", Корзина);
        Результат = Запрос.Выполнить();
        
        Если НЕ Результат.Пустой() Тогда
            
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
            
        КонецЕсли;
        
        ОсновнаяПлощадка = ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля.ПлощадкаЭксплуатации;
        ГруппаБазовыеКонтрольныеПроцедуры = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ОсновнаяПлощадка, Перечисления.ТипЭлементаПлощадки.ГруппаБазовыеКонтрольныеПроцедуры);
        ГруппаКонтрольПроизводительности = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ГруппаБазовыеКонтрольныеПроцедуры, Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольПроизводительности);
        ЭтотОбъект.Родитель = ГруппаКонтрольПроизводительности; 
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Ложь;
            СпрОбъект.Записать();
            
            ВосстановитьВидимостьРодителей(Выборка.Ссылка);
            
        КонецЦикла;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаКонтрольПроизводительности(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияКонтрольРегламентныхЗаданий(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    ТипРодителя = ЭтотОбъект.Ссылка.Родитель.ТипЭлемента; 
    
    Если ПометкаУдаления Тогда
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        Если ТипРодителя = Перечисления.ТипЭлементаПлощадки.ИнформационнаяБаза Тогда
            
            ЭтотОбъект.ПометкаУдаления = Ложь;
            ЭтотОбъект.Скрыть = Истина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                
                НеобходимоЗаписать = Ложь;
                
                Если Не СпрОбъект.ПометкаУдаления Тогда
                    СпрОбъект.ПометкаУдаления = Истина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если СпрОбъект.Родитель <> Корзина Тогда
                    СпрОбъект.Родитель = Корзина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если НеобходимоЗаписать Тогда
                    СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                    СпрОбъект.Записать();
                КонецЕсли;
            
            КонецЦикла;
            
        ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольРегламентныхЗаданий Тогда
            
            ЭтотОбъект.Родитель = Корзина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                СпрОбъект.Скрыть = Истина;
                СпрОбъект.Записать();
            КонецЦикла;
            
        КонецЕсли;
        
    Иначе
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        // Проверка, а не помечен ли рабочий сервер на удаление
        Запрос = Новый Запрос;
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Родитель = &Корзина
        |";
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля);
        Запрос.УстановитьПараметр("Корзина", Корзина);
        Результат = Запрос.Выполнить();
        
        Если НЕ Результат.Пустой() Тогда
            
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
            
        КонецЕсли;
        
        ОсновнаяПлощадка = ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля.ПлощадкаЭксплуатации;
        ГруппаБазовыеКонтрольныеПроцедуры = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ОсновнаяПлощадка, Перечисления.ТипЭлементаПлощадки.ГруппаБазовыеКонтрольныеПроцедуры);
        ГруппаКонтрольРегламентныхЗаданий = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ГруппаБазовыеКонтрольныеПроцедуры, Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольРегламентныхЗаданий);
        ЭтотОбъект.Родитель = ГруппаКонтрольРегламентныхЗаданий; 
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Ложь;
            СпрОбъект.Записать();
            
            ВосстановитьВидимостьРодителей(Выборка.Ссылка);
            
        КонецЦикла;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаКонтрольРегламентныхЗаданий(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияКонтрольНагрузочныхТестов(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    ТипРодителя = ЭтотОбъект.Ссылка.Родитель.ТипЭлемента; 
    
    Если ПометкаУдаления Тогда
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        Если ТипРодителя = Перечисления.ТипЭлементаПлощадки.ИнформационнаяБаза Тогда
            
            ЭтотОбъект.ПометкаУдаления = Ложь;
            ЭтотОбъект.Скрыть = Истина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                
                НеобходимоЗаписать = Ложь;
                
                Если НЕ СпрОбъект.ПометкаУдаления Тогда
                    СпрОбъект.ПометкаУдаления = Истина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если СпрОбъект.Родитель <> Корзина Тогда
                    СпрОбъект.Родитель = Корзина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если НеобходимоЗаписать Тогда
                    СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                    СпрОбъект.Записать();
                КонецЕсли;
            
            КонецЦикла;
            
        ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольНагрузочныхТестов Тогда
            
            ЭтотОбъект.Родитель = Корзина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                СпрОбъект.Скрыть = Истина;
                СпрОбъект.Записать();
            КонецЦикла;
            
        КонецЕсли;
        
    Иначе
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        // Проверка, а не помечен ли рабочий сервер на удаление
        Запрос = Новый Запрос;
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Родитель = &Корзина
        |";
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля);
        Запрос.УстановитьПараметр("Корзина", Корзина);
        Результат = Запрос.Выполнить();
        
        Если НЕ Результат.Пустой() Тогда
            
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
            
        КонецЕсли;
        
        ОсновнаяПлощадка = ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля.ПлощадкаЭксплуатации;
        ГруппаРасширенныеКонтрольныеПроцедуры = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ОсновнаяПлощадка, Перечисления.ТипЭлементаПлощадки.ГруппаРасширенныеКонтрольныеПроцедуры);
        ГруппаКонтрольНагрузочныхТестов = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ГруппаРасширенныеКонтрольныеПроцедуры, Перечисления.ТипЭлементаПлощадки.ГруппаКонтрольНагрузочныхТестов);
        ЭтотОбъект.Родитель = ГруппаКонтрольНагрузочныхТестов; 
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Ложь;
            СпрОбъект.Записать();
            
            ВосстановитьВидимостьРодителей(Выборка.Ссылка);
            
        КонецЦикла;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаКонтрольНагрузочныхТестов(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияОценкаПользователей(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    ТипРодителя = ЭтотОбъект.Ссылка.Родитель.ТипЭлемента; 
    
    Если ПометкаУдаления Тогда
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        Если ТипРодителя = Перечисления.ТипЭлементаПлощадки.ИнформационнаяБаза Тогда
            
            ЭтотОбъект.ПометкаУдаления = Ложь;
            ЭтотОбъект.Скрыть = Истина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                
                НеобходимоЗаписать = Ложь;
                
                Если НЕ СпрОбъект.ПометкаУдаления Тогда
                    СпрОбъект.ПометкаУдаления = Истина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если СпрОбъект.Родитель <> Корзина Тогда
                    СпрОбъект.Родитель = Корзина;
                    НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
                КонецЕсли;
                
                Если НеобходимоЗаписать Тогда
                    СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                    СпрОбъект.Записать();
                КонецЕсли;
                
            КонецЦикла;
            
        ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаОценкаПользователей Тогда
            
            ЭтотОбъект.Родитель = Корзина;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                СпрОбъект.Скрыть = Истина;
                СпрОбъект.Записать();
            КонецЦикла;
            
        КонецЕсли;
        
    Иначе
        
        ПометкаУдаленияКонтрольнаяПроцедураОбщая(ЭтотОбъект.ЕдиницаКонтроля, ПометкаУдаления);
        
        // Проверка, а не помечен ли рабочий сервер на удаление
        Запрос = Новый Запрос;
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Родитель = &Корзина
        |";
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля);
        Запрос.УстановитьПараметр("Корзина", Корзина);
        Результат = Запрос.Выполнить();
        
        Если НЕ Результат.Пустой() Тогда
            
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
            
        КонецЕсли;
        
        ОсновнаяПлощадка = ЭтотОбъект.ЕдиницаКонтроля.ОбъектКонтроля.ПлощадкаЭксплуатации;
        ГруппаРасширенныеКонтрольныеПроцедуры = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ОсновнаяПлощадка, Перечисления.ТипЭлементаПлощадки.ГруппаРасширенныеКонтрольныеПроцедуры);
        ГруппаОценкаПользователей = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ГруппаРасширенныеКонтрольныеПроцедуры, Перечисления.ТипЭлементаПлощадки.ГруппаОценкаПользователей);
        ЭтотОбъект.Родитель = ГруппаОценкаПользователей; 
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Ложь;
            СпрОбъект.Записать();
            
            ВосстановитьВидимостьРодителей(Выборка.Ссылка);
            
        КонецЦикла;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаОценкаПользователей(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияИнформационнаяБаза(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    ТипРодителя = ЭтотОбъект.Ссылка.Родитель.ТипЭлемента;
    
    Если ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаИнформационныеБазыКластера1С Тогда
        
        ЭтотОбъект.ПометкаУдаления = Ложь;
        ЭтотОбъект.Скрыть = Истина;
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            
            НеобходимоЗаписать = Ложь;
            
            Если НЕ СпрОбъект.ПометкаУдаления Тогда
                СпрОбъект.ПометкаУдаления = Истина;
                НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
            КонецЕсли;
            
            Если СпрОбъект.Родитель <> Корзина Тогда
                СпрОбъект.Родитель = Корзина;
                НеобходимоЗаписать = НеобходимоЗаписать ИЛИ Истина;
            КонецЕсли;
            
            Если НеобходимоЗаписать Тогда               
                СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                СпрОбъект.Записать();
            КонецЕсли;
            
        КонецЦикла;
        
    ИначеЕсли ТипРодителя = Перечисления.ТипЭлементаПлощадки.ГруппаИнформационныеБазы Тогда
        
        ЭтотОбъект.Родитель = Корзина;
        
        Запрос = Новый Запрос;
        
        Запрос.Текст = "
        |ВЫБРАТЬ
        |   Ссылка
        |ИЗ
        |   Справочник.ПлощадкиЭксплуатации
        |ГДЕ
        |   ЕдиницаКонтроля = &ЕдиницаКонтроля
        |   И Ссылка <> &Ссылка
        |";
        
        Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
        Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Скрыть = Истина;
            СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
            СпрОбъект.Записать();
            
            ЗапросПотомки = Новый Запрос;
            
            ЗапросПотомки.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   Родитель = &Родитель
            |";
            
            ЗапросПотомки.УстановитьПараметр("Родитель", Выборка.Ссылка);
            РезультатПотомки = ЗапросПотомки.Выполнить();
            ВыборкаПотомки = РезультатПотомки.Выбрать();
            Пока ВыборкаПотомки.Следующий() Цикл
                СпрОбъектПотомки = ВыборкаПотомки.Ссылка.ПолучитьОбъект();
                СпрОбъектПотомки.УстановитьПометкуУдаления(Истина, Ложь);
            КонецЦикла;
            
        КонецЦикла;
        
    Иначе
        
        Если ЭтотОбъект.Ссылка.Родитель = Корзина Тогда
            
            // Проверка, а не помечен ли кластер 1С на удаление
            Запрос = Новый Запрос;
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Родитель = &Корзина
            |";
            
            Кластер1С = Справочники.ОбъектыКонтроля.Свойство(ЭтотОбъект.ЕдиницаКонтроля, "Кластер"); 
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", Кластер1С);
            Запрос.УстановитьПараметр("Корзина", Корзина);
            Результат = Запрос.Выполнить();
            
            Если НЕ Результат.Пустой() Тогда
                
                Выборка = Результат.Выбрать();
                Выборка.Следующий();
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                СпрОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
                
            КонецЕсли;
            
            ГруппаИнформационныеБазы = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ЕдиницаКонтроля.ПлощадкаЭксплуатации, Перечисления.ТипЭлементаПлощадки.ГруппаИнформационныеБазы);
            ЭтотОбъект.Родитель = ГруппаИнформационныеБазы;
            
            Запрос = Новый Запрос;
            
            Запрос.Текст = "
            |ВЫБРАТЬ
            |   Ссылка
            |ИЗ
            |   Справочник.ПлощадкиЭксплуатации
            |ГДЕ
            |   ЕдиницаКонтроля = &ЕдиницаКонтроля
            |   И Ссылка <> &Ссылка
            |";
            
            Запрос.УстановитьПараметр("ЕдиницаКонтроля", ЭтотОбъект.ЕдиницаКонтроля);
            Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                
                СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
                СпрОбъект.Скрыть = Ложь;
                СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
                СпрОбъект.Записать();
                
                ВосстановитьВидимостьРодителей(Выборка.Ссылка);
                
            КонецЦикла;
            
            ГруппаКластеры1С = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ЕдиницаКонтроля.ПлощадкаЭксплуатации, Перечисления.ТипЭлементаПлощадки.ГруппаКластеры1С);
            ПлощадкаКластер1С = Справочники.ПлощадкиЭксплуатации.ПолучитьЭлементГруппы(ГруппаКластеры1С,Кластер1С, Перечисления.ТипЭлементаПлощадки.Кластер1С);
            ГруппаИнформационныеБазыКластера1С = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ПлощадкаКластер1С, Перечисления.ТипЭлементаПлощадки.ГруппаИнформационныеБазыКластера1С);
            ПлощадкаИнформационнаяБаза = Справочники.ПлощадкиЭксплуатации.ПолучитьЭлементГруппы(ГруппаИнформационныеБазыКластера1С, ЭтотОбъект.ЕдиницаКонтроля, Перечисления.ТипЭлементаПлощадки.ИнформационнаяБаза);
            
        КонецЕсли;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаИнформационныеБазыКластер1С(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = Истина;
    ЭтотОбъект.ПометкаУдаления = Ложь;
            
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаИнформационныеБазы(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = Истина;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
    Запрос = Новый Запрос;
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   ИнформационныеБазы.Родитель,
    |   ИнформационныеБазы.Ссылка
    |ИЗ
    |   Справочник.ПлощадкиЭксплуатации КАК ГруппаКластеры1С
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   Справочник.ПлощадкиЭксплуатации КАК Кластер1С
    |ПО
    |   Кластер1С.Родитель = ГруппаКластеры1С.Ссылка
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   Справочник.ПлощадкиЭксплуатации КАК ГруппаИнформационныеБазы
    |ПО
    |   ГруппаИнформационныеБазы.Родитель = Кластер1С.Ссылка
    |   И ГруппаИнформационныеБазы.ТипЭлемента = &ГруппаИнформационныеБазы
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   Справочник.ПлощадкиЭксплуатации КАК ИнформационныеБазы
    |ПО
    |   ИнформационныеБазы.Родитель = ГруппаИнформационныеБазы.Ссылка
    |ГДЕ
    |   ГруппаКластеры1С.Родитель = &Родитель
    |   И ГруппаКластеры1С.ТипЭлемента = &ГруппаКластеры1С
    |";
    Запрос.УстановитьПараметр("Родитель", ЭтотОбъект.Родитель);
    Запрос.УстановитьПараметр("ГруппаКластеры1С", Перечисления.ТипЭлементаПлощадки.ГруппаКластеры1С);
    Запрос.УстановитьПараметр("ГруппаИнформационныеБазы", Перечисления.ТипЭлементаПлощадки.ГруппаИнформационныеБазы);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Родители = Новый Соответствие;
    
    Пока Выборка.Следующий() Цикл
        
        Если Родители[Выборка.Родитель] = Неопределено Тогда
            
            Родители.Вставить(Выборка.Родитель, Истина);
            РодительОбъект = Выборка.Родитель.ПолучитьОбъект();
            РодительОбъект.Скрыть = Истина;
            РодительОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
            РодительОбъект.Записать();                
            
        КонецЕсли;
        
        СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
        СпрОбъект.УстановитьПометкуУдаления(Истина, Истина);
        
    КонецЦикла;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияКластер1С(ПометкаУдаления, Отказ)
    
    Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
    
    Если ПометкаУдаления Тогда
        
        ЭтотОбъект.Родитель = Корзина;
                
    Иначе
        
        Если ЭтотОбъект.ЕдиницаКонтроля.ПлощадкаЭксплуатации.ПометкаУдаления Тогда
            ПлощадкаЭксплуатацииОбъект = ЭтотОбъект.ЕдиницаКонтроля.ПлощадкаЭксплуатации.ПолучитьОбъект();
            ПлощадкаЭксплуатацииОбъект.УстановитьПометкуУдаления(Ложь, Ложь);
        КонецЕсли;
        
        ГруппаКластеры1С = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ЭтотОбъект.ЕдиницаКонтроля.ПлощадкаЭксплуатации, Перечисления.ТипЭлементаПлощадки.ГруппаКластеры1С);
        ЭтотОбъект.Родитель = ГруппаКластеры1С;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаКластеры1С(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаОборудования(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияПлощадка(ПометкаУдаления)
    
    Если ПометкаУдаления Тогда
        ЭтотОбъект.Родитель = Справочники.ПлощадкиЭксплуатации.Корзина();
    Иначе
        ЭтотОбъект.Родитель = Неопределено;
    КонецЕсли;
        
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияПубликация(ПометкаУдаления)
    
    Если ПометкаУдаления Тогда
        
        Корзина = Справочники.ПлощадкиЭксплуатации.Корзина();
        
        ЕдиницаКонтроляОбъект = ЭтотОбъект.ЕдиницаКонтроля.ПолучитьОбъект();
        ЕдиницаКонтроляОбъект.ПлощадкаДляВосстановления = ЕдиницаКонтроляОбъект.ПлощадкаЭксплуатации;
        ЕдиницаКонтроляОбъект.ПлощадкаЭксплуатации = Корзина;
        ЕдиницаКонтроляОбъект.ПометкаУдаления = Истина;
        ЕдиницаКонтроляОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
        ЕдиницаКонтроляОбъект.Записать();
        
        ЭтотОбъект.Родитель = Корзина;
        
    Иначе
        
        ЕдиницаКонтроляОбъект = ЭтотОбъект.ЕдиницаКонтроля.ПолучитьОбъект();
        ЕдиницаКонтроляОбъект.ПлощадкаЭксплуатации = ЕдиницаКонтроляОбъект.ПлощадкаДляВосстановления;
        ЕдиницаКонтроляОбъект.ПлощадкаДляВосстановления = Справочники.ПлощадкиЭксплуатации.ПустаяСсылка();
        ЕдиницаКонтроляОбъект.ПометкаУдаления = Истина;
        ЕдиницаКонтроляОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
        ЕдиницаКонтроляОбъект.Записать();
        
        ГруппаПубликации = Справочники.ПлощадкиЭксплуатации.ДобавитьВПлощадкуГруппу(ЭтотОбъект.ЕдиницаКонтроля.ПлощадкаЭксплуатации, Перечисления.ТипЭлементаПлощадки.ГруппаПубликации);
        ЭтотОбъект.Родитель = ГруппаПубликации;
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПередУстановкойПометкиУдаленияГруппаПубликации(ПометкаУдаления)
    
    ЭтотОбъект.Скрыть = ПометкаУдаления;
    ЭтотОбъект.ПометкаУдаления = Ложь;
    
КонецПроцедуры

Процедура ВосстановитьВидимостьРодителей(Ссылка)
    
    Если ЗначениеЗаполнено(Ссылка.Родитель) Тогда
        
        Если Ссылка.Родитель.Скрыть Тогда
            РодительОбъект = Ссылка.ПолучитьОбъект();
            РодительОбъект.Скрыть = Ложь;
            РодительОбъект.ДополнительныеСвойства.Вставить("НеПроверять", Истина);
            РодительОбъект.Записать();
        КонецЕсли;
        
        ВосстановитьВидимостьРодителей(Ссылка.Родитель);
        
    КонецЕсли;
        
КонецПроцедуры

#КонецОбласти
    
#КонецЕсли