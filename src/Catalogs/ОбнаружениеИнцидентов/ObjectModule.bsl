#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ОбновлениеИБ") И ЭтотОбъект.ДополнительныеСвойства.ОбновлениеИБ Тогда
		Возврат;
	КонецЕсли;
    
    Если НЕ ЗначениеЗаполнено(ТипИнцидента) Тогда
        ТипИнцидента = Справочники.ТипыИнцидентов.СоздатьЭлементПоНаименованию("ЦКК.Показатели." + Наименование, Справочники.ТипыИнцидентов.ПараметрыСозданияПоУмолчанию(Ответственный, УровеньИнцидента, Ссылка));
    КонецЕсли;
    
	Если НЕ ПроверитьУникальностьНаименования() Тогда
		ВызватьИсключение "Не уникальное наименование";
    КонецЕсли;
               	
	Если ДополнительныеСвойства.Свойство("Расписание") Тогда
		УстановитьРасписание(ДополнительныеСвойства.Расписание, ДополнительныеСвойства.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
   	
	Если ДополнительныеСвойства.Свойство("ПоказателиИнцидентовУдалить") Тогда
		Для Каждого ТекПоказательИнцидента Из ДополнительныеСвойства.ПоказателиИнцидентовУдалить Цикл
			ПоказательИнцидентаОбъект = ТекПоказательИнцидента.ПолучитьОбъект();
            Если ПоказательИнцидентаОбъект <> Неопределено Тогда
                ПоказательИнцидентаОбъект.Удалить();
            КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИсполняющееЗадание = Неопределено;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ЗначениеЗаполнено(ТипИнцидента) И ЭтоКрайнееОбнаружение() Тогда
		Запись = ТипИнцидента.ПолучитьОбъект();
		Если Запись <> Неопределено Тогда
			Запись.Удалить();
		КонецЕсли;
	КонецЕсли;
	
	Если Общий.СсылкаСуществует(ИсполняющееЗадание) Тогда
		ИсполняющееЗадание.ПолучитьОбъект().Удалить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьРасписание(Знач Расписание, Знач ТекущийОбъектСсылка)
	
	Если Общий.СсылкаСуществует(ИсполняющееЗадание) Тогда
		ОчередьЗаданий.ИзменитьЗадание(ИсполняющееЗадание, Новый Структура("Расписание, Использование",	Расписание, ИсполняющееЗадание.Использование));
	Иначе
		ПараметрыСоздания = Новый Структура;
		
		ПараметрыЗадания = Новый Массив;
		ПараметрыЗадания.Добавить(ТекущийОбъектСсылка);
		ПараметрыСоздания.Вставить("НавигационнаяСсылкаВладельцаЗадания", ПолучитьНавигационнуюСсылку(ТекущийОбъектСсылка));
		ПараметрыСоздания.Вставить("Использование", Ложь);
		ПараметрыСоздания.Вставить("Расписание", Расписание);
		ПараметрыСоздания.Вставить("ИмяМетода", "Справочники.ОбнаружениеИнцидентов.ВыполнитьЗамер");
		ПараметрыСоздания.Вставить("Параметры", ПараметрыЗадания);
		ПараметрыСоздания.Вставить("Наименование", Наименование);
				
		ИсполняющееЗадание = ОчередьЗаданий.ДобавитьЗадание(ПараметрыСоздания);
	КонецЕсли;
	
КонецПроцедуры

// Проверяет корректность заполнения данных перед включением оповещения
//
// Параметры:
//  СообщатьОбОшибках - Булево - признак того, что нужно формировать сообщения о незаполненных полях
//
// Возвращаемое значение:
//  Булево
//
Функция ПроверитьКорректностьЗаполнения(Знач СообщатьОбОшибках) Экспорт
	
	Результат = Истина;
	Если ИсполняющееЗадание = Неопределено Тогда
		Если СообщатьОбОшибках Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Поле = "РасписаниеПредставление";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Текст = "Укажите расписание!";
			Сообщение.Сообщить();
		КонецЕсли;
		Результат = Ложь;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоказателиИнцидентов.Ссылка
	               |ИЗ
	               |	Справочник.ПоказателиИнцидентов КАК ПоказателиИнцидентов
	               |ГДЕ
	               |	ПоказателиИнцидентов.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец", Ссылка);
	Если Запрос.Выполнить().Пустой() Тогда
		Если СообщатьОбОшибках Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Поле = "Показатели";
			Сообщение.Текст = "Укажите хотя бы один показатель!";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
		КонецЕсли;
		Результат = Ложь;
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

Функция ПроверитьУникальностьНаименования()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Количество(*) КАК КоличествоЭлементов
	|ИЗ
	|	Справочник.ОбнаружениеИнцидентов
	|ГДЕ
	|	Наименование = &Наименование
	|	И Ссылка <> &Ссылка
    |   И ТипИнцидента <> &ТипИнцидента
	|";
	
	Запрос.УстановитьПараметр("Наименование", ЭтотОбъект.Наименование);
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
    Запрос.УстановитьПараметр("ТипИнцидента", ЭтотОбъект.ТипИнцидента);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат ?(Выборка.КоличествоЭлементов = 0, Истина, Ложь);
	
КонецФункции

Функция ЭтоКрайнееОбнаружение()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Ссылка) КАК Количество
	|ИЗ
	|	Справочник.ОбнаружениеИнцидентов
	|ГДЕ
	|	Ссылка <> &Ссылка
	|	И ТипИнцидента = &ТипИнцидента
	|";
	
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ТипИнцидента", ЭтотОбъект.ТипИнцидента);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Количество() = 0; 
	
КонецФункции


#КонецОбласти

#КонецЕсли

