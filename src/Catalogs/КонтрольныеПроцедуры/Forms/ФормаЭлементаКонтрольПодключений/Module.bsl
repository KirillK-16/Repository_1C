
#Область Обработчики_событий_формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьНастройки();
	УстановитьВидимостьКомандЗапуска(ЭтотОбъект);
	ЭтотОбъект.Справка = Общий.ТекстHTMLМакета(Объект.Владелец.ИмяБизнесПроцесса);
    
    Если ЭтотОбъект.Параметры.Свойство("Источник") Тогда
        ЭтотОбъект.Источник = ЭтотОбъект.Параметры.Источник; 
    Иначе
        ЭтотОбъект.Источник = Объект.Ссылка;
    КонецЕсли;
    
    ИсторияВыполнения.Параметры.УстановитьЗначениеПараметра("КонтрольнаяПроцедура", ЭтотОбъект.Источник);
    ИсторияВыполнения.Параметры.УстановитьЗначениеПараметра("ОбъектКонтроля", Объект.ОбъектКонтроля);
    	
	ЗаполнитьПараметрыИнцидентов();
	    
    Если Объект.ОбъектКонтроля.ПлощадкаЭксплуатации.ПометкаУдаления ИЛИ Объект.ОбъектКонтроля.ПлощадкаЭксплуатации = Справочники.ПлощадкиЭксплуатации.Корзина() Тогда
        ЭтотОбъект.ТолькоПросмотр = Истина;
        ЭтотОбъект.Элементы.ГруппаУправлениеПроцедурой.Доступность = Ложь;
    КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Настройки = ПолучитьНастройки();
	ПараметрыЗаписи.Вставить("Настройки", Настройки);
	Объект.НастройкаВыполнена = Истина;
	Объект.Сохранено = Истина;
	Если НЕ ЗначениеЗаполнено(Объект.КлючРегламентногоЗадания) Тогда
		Объект.КлючРегламентногоЗадания = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Для Каждого ТекПараметр Из ПараметрыЗаписи Цикл
		ТекущийОбъект.ДополнительныеСвойства.Вставить(ТекПараметр.Ключ, ТекПараметр.Значение);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Изменение.Справочник.КонтрольныеПроцедуры",,ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область Обработчики_команд_формы

&НаКлиенте
Процедура Старт(Команда)
	
	Если НастройкиВыполнены(Объект.Ссылка) Тогда
		Объект.Выполнять = Истина;
		Объект.Пауза = Ложь;
		УстановитьВидимостьКомандЗапуска(ЭтотОбъект);
	Иначе
		Сообщить("Ошибка настроек!
		|Не настроена информационная база контрольной процедуры
		|или не заполнены параметры подключения!
		|Выполните тест настроек!");
	КонецЕсли;
	
	СохранитьНастройки(Команда);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СтартНаСервере(КонтрольнаяПроцедура, Доступность, Описание)
    
    ПараметрыДоступности = Новый Структура("Доступность, ДополнительнаяИнформация", Доступность, Описание);
    КонтрольПодключенийСервер.ЗаписатьДанныеОДоступности(КонтрольнаяПроцедура.ОбъектКонтроля, ПараметрыДоступности);
    
	Параметры = Новый Структура;
    Параметры.Вставить("ИнформационнаяБаза", КонтрольнаяПроцедура.ОбъектКонтроля);
    Параметры.Вставить("Источник", Справочники.ОбъектыКонтроля.ЦентрКонтроляКачества());
    
	РегистрыСведений.КонтрольПодключенийТекущееСостояние.ЗаписатьТекущееСостояние(Параметры, ?(Доступность=1,Истина, Ложь));
    
КонецПроцедуры

&НаКлиенте
Процедура Пауза(Команда)
	
	Объект.Выполнять = Ложь;
	Объект.Пауза = Истина;
	УстановитьВидимостьКомандЗапуска(ЭтотОбъект);
	СохранитьНастройки(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Стоп(Команда)
	
	Объект.Выполнять = Ложь;
	Объект.Пауза = Ложь;
	УстановитьВидимостьКомандЗапуска(ЭтотОбъект);
	СохранитьНастройки(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	ЭтотОбъект.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	ЭтотОбъект.Записать();
	ЭтотОбъект.Закрыть();
		
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчас(Команда)
	
	Если ЭтотОбъект.Модифицированность = Истина Тогда
		Сообщить("Для тестирования необходимо СОХРАНИТЬ настройки!");
	Иначе
		Попытка
			Результат = ВыполнитьСейчасСервер(Объект.Ссылка);
		Исключение
			Результат = Новый Структура("Успешно, Результат, Описание", Ложь, "Проблемы есть", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
		Если Результат.Успешно Тогда
			Сообщить("Тест настроек - УСПЕШНО");
		Иначе
			Сообщить("Тест настроек - ОШИБКА!
			|" + Результат.Описание);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Обработчики_событий_элементов_формы

&НаКлиенте
Процедура СпособПодключенияПриИзменении(Элемент)
	Если ЭтотОбъект.СпособПодключения = ПредопределенноеЗначение("Перечисление.МеханизмыПроверкиПодключения.COMСоединитель") Тогда
		ЭтотОбъект.СтрокаСоединения = ПолучитьСтрокуСоединенияНаСервере(Объект.Ссылка);
        ЭтотОбъект.Элементы.ГруппаПрокси.Доступность = Ложь;
        ЭтотОбъект.Элементы.ГруппаТаймаутВыполнения.Доступность = Ложь;
	ИначеЕсли ЭтотОбъект.СпособПодключения = ПредопределенноеЗначение("Перечисление.МеханизмыПроверкиПодключения.WEBСервис") Тогда
		ЭтотОбъект.СтрокаСоединения = "http://host/base";
        ЭтотОбъект.Элементы.ГруппаПрокси.Доступность = Истина;
        ЭтотОбъект.Элементы.ГруппаТаймаутВыполнения.Доступность = Истина;
	КонецЕсли;
	
	ЭтотОбъект.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СтрокаСоединенияПриИзменении(Элемент)
	ЭтотОбъект.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	ЭтотОбъект.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	ЭтотОбъект.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПроксиПриИзменении(Элемент)
    
    ЭтотОбъект.Элементы.ПроксиСервер.Доступность = ЭтотОбъект.ИспользоватьПрокси;
    ЭтотОбъект.Элементы.ПроксиПорт.Доступность = ЭтотОбъект.ИспользоватьПрокси;
        
КонецПроцедуры

&НаКлиенте
Процедура ИсточникПриИзменении(Элемент)
    ИсторияВыполнения.Параметры.УстановитьЗначениеПараметра("КонтрольнаяПроцедура", ЭтотОбъект.Источник);
КонецПроцедуры

#КонецОбласти

#Область Служебные_процедуры_и_функции_на_сервере

&НаСервере
Процедура ЗагрузитьНастройки()
	Настройки = Справочники.КонтрольныеПроцедуры.ПолучитьНастройкиКонтрольПодключений(Объект.Ссылка);
	
	Если Настройки <> Неопределено  Тогда
        
        ЭтотОбъект.Ответственный = Настройки.Ответственный;
                
		ЭтотОбъект.СпособПодключения = Настройки.МеханизмПроверкиОбрабатыватьИзменения;
		
		ЗагрузитьНастройкиПодключения(Настройки);
		
		ЭтотОбъект.ПроверятьПоЖурналуРегистрации = НЕ Настройки.НеПроверятьПоЖурналуРегистрации;
		ЭтотОбъект.ТаймаутВыполнения = Настройки.Таймаут;
        
        ЭтотОбъект.Элементы.ПроксиСервер.Доступность = Настройки.ИспользоватьПрокси;
        ЭтотОбъект.Элементы.ПроксиПорт.Доступность = Настройки.ИспользоватьПрокси;
        
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиПодключения(Настройки)
	Если Настройки.МеханизмПроверкиОбрабатыватьИзменения = Перечисления.МеханизмыПроверкиПодключения.COMСоединитель Тогда
		СтрокиСоединенияМассив = СтрРазделить(Настройки.СтрокаСоединения, ";", Ложь);
		Для Каждого ПараметрСоединения Из СтрокиСоединенияМассив Цикл
			КлючЗначение = СтрРазделить(ПараметрСоединения, "=", Ложь);
			Если ВРЕГ(КлючЗначение[0]) = "SRVR" Тогда
				Сервер = КлючЗначение[1];
			ИначеЕсли ВРЕГ(КлючЗначение[0]) = "REF" Тогда
				ИБ = КлючЗначение[1];
			ИначеЕсли ВРЕГ(КлючЗначение[0]) = "USR" Тогда
				Пользователь = СтрЗаменить(КлючЗначение[1],"""", "");
			ИначеЕсли ВРЕГ(КлючЗначение[0]) = "PWD" Тогда
				Пароль = СтрЗаменить(КлючЗначение[1],"""", "");
			КонецЕсли;
		КонецЦикла;
		ЭтотОбъект.СтрокаСоединения = "Srvr=" + Сервер + ";Ref=" + ИБ + ";";
		ЭтотОбъект.Пользователь = Пользователь;
		ЭтотОбъект.Пароль = Пароль;
        ЭтотОбъект.Элементы.ГруппаПрокси.Доступность = Ложь;
        ЭтотОбъект.Элементы.ГруппаТаймаутВыполнения.Доступность = Ложь;
	ИначеЕсли Настройки.МеханизмПроверкиОбрабатыватьИзменения = Перечисления.МеханизмыПроверкиПодключения.WEBСервис Тогда
		ЭтотОбъект.СтрокаСоединения = Настройки.URLОпубликованнойИнформационнойБазы;
		ЭтотОбъект.Пользователь = Настройки.ЛогинПриПодключении;
		ЭтотОбъект.Пароль = Настройки.ПарольПриПодключении;
        ЭтотОбъект.ИспользоватьПрокси = Настройки.ИспользоватьПрокси;
        ЭтотОбъект.ПроксиСервер = Настройки.ПроксиСервер;
        ЭтотОбъект.ПроксиПорт = Настройки.ПроксиПорт;
        ЭтотОбъект.Элементы.ГруппаПрокси.Доступность = Истина;
        ЭтотОбъект.Элементы.ГруппаТаймаутВыполнения.Доступность = Истина;
	ИначеЕсли Настройки.МеханизмПроверкиОбрабатыватьИзменения = Перечисления.МеханизмыПроверкиПодключения.ПустаяСсылка() Тогда
		ЭтотОбъект.СтрокаСоединения = Настройки.URLОпубликованнойИнформационнойБазы;
		ЭтотОбъект.Пользователь = Настройки.ЛогинПриПодключении;
		ЭтотОбъект.Пароль = Настройки.ПарольПриПодключении;
		ЭтотОбъект.СпособПодключения = Перечисления.МеханизмыПроверкиПодключения.WEBСервис;
        ЭтотОбъект.СтрокаСоединения = "http://host/base";
    КонецЕсли;
    
    ЭтотОбъект.ПериодКонтроля = Настройки.ПериодКонтроля;
    ЭтотОбъект.МинимальныйПроцентДоступности = Настройки.МинимальныйПроцентДоступности;
    ЭтотОбъект.ДопустимоНетДанных = Настройки.ДопустимоНетДанных;
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтрокуСоединенияНаСервере(КонтрольнаяПроцедураСсылка)
	
	СтрокаСоединения = "";
	
	Кластер = Справочники.ОбъектыКонтроля.Свойство(КонтрольнаяПроцедураСсылка.ОбъектКонтроля, "Кластер");
	АдресКластера = Справочники.ОбъектыКонтроля.Свойство(Кластер, "АдресКластера");
	ПортКластера = Справочники.ОбъектыКонтроля.Свойство(Кластер, "ПортКластера");
	ИмяБазыВКластере = Справочники.ОбъектыКонтроля.Свойство(КонтрольнаяПроцедураСсылка.ОбъектКонтроля, "ИмяБазыВКластере");
	
	Если ПортКластера = 1541 Тогда
		СтрокаСоединения = "Srvr=""" + АдресКластера + """;Ref=""";
	Иначе
		СтрокаСоединения = "Srvr=""" + АдресКластера + ":" + Формат(ПортКластера, "ЧГ=0") + """;Ref=""" + ИмяБазыВКластере + """";
	КонецЕсли;
	
	Возврат СтрокаСоединения;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВыполнитьСейчасСервер(Ссылка)
	
	Если ИнформационнаяБазаНастроена(Ссылка) Тогда
		Возврат КонтрольПодключенийСервер.КонтрольПодключенияТестНастроек(Ссылка);
	Иначе
		ПРОБЛЕМЫ_ЕСТЬ = "Проблемы есть";
		Ответ = Новый Структура("Успешно, Результат, Описание");
		Ответ.Успешно = Ложь;
		Ответ.Результат = ПРОБЛЕМЫ_ЕСТЬ;
		Ответ.Описание = "Не настроена информационная база контрольной процедуры!";
		
		Возврат Ответ;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция НастройкиВыполнены(Ссылка)
	Возврат ИнформационнаяБазаНастроена(Ссылка) И КонтрольнаяПроцедураНастроена(Ссылка); 
КонецФункции

&НаСервереБезКонтекста
Функция ИнформационнаяБазаНастроена(Ссылка)
	
	ПараметрыИБ = РегистрыСведений.ПараметрыИнформационныхБаз.ПрочитатьНастройки(Ссылка.ОбъектКонтроля);
	Если ПараметрыИБ.Кластер = Неопределено ИЛИ ПараметрыИБ.ИмяБазыВКластере = Неопределено Тогда
		БазаНастроена = Ложь;
	Иначе
		БазаНастроена = Истина;
	КонецЕсли;
	
	Возврат БазаНастроена;
	
КонецФункции

&НаСервереБезКонтекста
Функция КонтрольнаяПроцедураНастроена(Ссылка)
	
	КонтрольнаяПроцедураНастроена = Ложь;
	Настройки = КонтрольПодключенийСервер.ПолучитьНастройки(Ссылка, Истина);
	Если Настройки.Количество() = 1 Тогда
		Параметры = Настройки[0];
		КонтрольнаяПроцедураНастроена = Истина;
		Если Параметры.СпособПодключения = Перечисления.МеханизмыПроверкиПодключения.COMСоединитель И НЕ ЗначениеЗаполнено(Параметры.ВерсияПлатформы) Тогда
			КонтрольнаяПроцедураНастроена = Ложь;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Параметры.СпособПодключения) Тогда
			КонтрольнаяПроцедураНастроена = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат КонтрольнаяПроцедураНастроена;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПараметрыИнцидентов()
	
	ВидКонтрольПроизводительности = Справочники.ВидыКонтрольныхПроцедур.НайтиПоНаименованию("Контроль производительности");
	ВидКонтрольПотребленияПамяти = Справочники.ВидыКонтрольныхПроцедур.НайтиПоНаименованию("Контроль потребления памяти");
	ВидКонтрольПодключений = Справочники.ВидыКонтрольныхПроцедур.НайтиПоНаименованию("Контроль подключений");
	
	Если Объект.Владелец = ВидКонтрольПодключений Тогда
		ЗаполнитьПараметрыИнцидентовКонтрольПодключений();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыИнцидентовКонтрольПодключений()
	
	ПараметрыИнформационнойБазы = РегистрыСведений.ПараметрыИнформационныхБаз.ПрочитатьНастройки(Объект.ОбъектКонтроля);
		
	ПараметрыИнцидентаНетДанных = КонтрольПодключенийСервер.ПолучитьПараметрыИнцидента(ПараметрыИнформационнойБазы.Кластер, "НетДанных", Перечисления.УровниИнцидентов.Предупреждение);
	НовСтрока = ЭтотОбъект.ПараметрыИнцидентов.Добавить();
	НовСтрока.ТипИнцидента = ПараметрыИнцидентаНетДанных.НаименованиеТипаИнцидента;
	НовСтрока.КодИнцидента = ПараметрыИнцидентаНетДанных.КодИнцидента;
	
	ПараметрыИнцидентаПроблемы = КонтрольПодключенийСервер.ПолучитьПараметрыИнцидента(ПараметрыИнформационнойБазы.Кластер, "Проблемы", Перечисления.УровниИнцидентов.Ошибка);
	НовСтрока = ЭтотОбъект.ПараметрыИнцидентов.Добавить();
	НовСтрока.ТипИнцидента = ПараметрыИнцидентаПроблемы.НаименованиеТипаИнцидента;
	НовСтрока.КодИнцидента = ПараметрыИнцидентаПроблемы.КодИнцидента;
	
	ПараметрыИнцидентаНедоступен = КонтрольПодключенийСервер.ПолучитьПараметрыИнцидента(ПараметрыИнформационнойБазы.Кластер, "Недоступен", Перечисления.УровниИнцидентов.КритическаяОшибка);
	НовСтрока = ЭтотОбъект.ПараметрыИнцидентов.Добавить();
	НовСтрока.ТипИнцидента = ПараметрыИнцидентаНедоступен.НаименованиеТипаИнцидента;
	НовСтрока.КодИнцидента = ПараметрыИнцидентаНедоступен.КодИнцидента;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьКлючЗаписиИнцидента(КодИнцидента, ТипИнцидента)
    
    КодИнцидентаСсылка = Справочники.Инциденты.НайтиСсылкуПоНаименованию(КодИнцидента);
    ТипИнцидентаСсылка = Справочники.ТипыИнцидентов.НайтиПоНаименованию(ТипИнцидента);
    
    Если КодИнцидентаСсылка = Справочники.Инциденты.ПустаяСсылка() Тогда
        КодИнцидентаСсылка = Неопределено;
    КонецЕсли;
    
    Если ТипИнцидентаСсылка = Справочники.ТипыИнцидентов.ПустаяСсылка() Тогда
        ТипИнцидентаСсылка = Неопределено;
    КонецЕсли;
        
	ЗначениеКлюча = Новый Структура("Инцидент, ТипИнцидента", КодИнцидентаСсылка, ТипИнцидентаСсылка);
	КлючЗаписи = РегистрыСведений.Инциденты.СоздатьКлючЗаписи(ЗначениеКлюча);
	
	Возврат КлючЗаписи;
	
КонецФункции

#КонецОбласти

#Область Служебные_процедуры_и_функции_на_клиенте

&НаКлиенте
Функция ПолучитьНастройки()
	
	Настройки = Новый Структура(
		"МеханизмПроверкиОбрабатыватьИзменения,
		|URLОпубликованнойИнформационнойБазы,
		|ЛогинПриПодключении,
		|ПарольПриПодключении,
		|СтрокаСоединения,
		|НеПроверятьПоЖурналуРегистрации,
		|Таймаут,
		|Ответственный,
        |ИспользоватьПрокси,
        |ПроксиСервер,
        |ПроксиПорт,
        |ПериодКонтроля,
        |МинимальныйПроцентДоступности,
        |ДопустимоНетДанных");
		
		
	Настройки.МеханизмПроверкиОбрабатыватьИзменения = ЭтотОбъект.СпособПодключения;
	
	Если ЭтотОбъект.СпособПодключения = ПредопределенноеЗначение("Перечисление.МеханизмыПроверкиПодключения.COMСоединитель") Тогда
		Настройки.СтрокаСоединения = ЭтотОбъект.СтрокаСоединения;
							
		Если ЗначениеЗаполнено(ЭтотОбъект.Пользователь) Тогда
			Если Прав(Настройки.СтрокаСоединения, 1) <> ";" Тогда
				Настройки.СтрокаСоединения = Настройки.СтрокаСоединения + ";";
			КонецЕсли;
			Настройки.СтрокаСоединения = Настройки.СтрокаСоединения + "Usr=""" + ЭтотОбъект.Пользователь + """";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭтотОбъект.Пароль) Тогда
			Если Прав(Настройки.СтрокаСоединения, 1) <> ";" Тогда
				Настройки.СтрокаСоединения = Настройки.СтрокаСоединения + ";";
			КонецЕсли;
			Настройки.СтрокаСоединения = Настройки.СтрокаСоединения + "Pwd=""" + ЭтотОбъект.Пароль + """";
		КонецЕсли;
		
		Настройки.URLОпубликованнойИнформационнойБазы = "";
		Настройки.ЛогинПриПодключении = "";
		Настройки.ПарольПриПодключении = "";
	ИначеЕсли ЭтотОбъект.СпособПодключения = ПредопределенноеЗначение("Перечисление.МеханизмыПроверкиПодключения.WEBСервис") Тогда
		Настройки.СтрокаСоединения = "";
		
		Настройки.URLОпубликованнойИнформационнойБазы = ЭтотОбъект.СтрокаСоединения;
		Настройки.ЛогинПриПодключении = ЭтотОбъект.Пользователь;
		Настройки.ПарольПриПодключении = ЭтотОбъект.Пароль;
    КонецЕсли;
    
    Настройки.ИспользоватьПрокси = ЭтотОбъект.ИспользоватьПрокси;
    Настройки.ПроксиСервер = ЭтотОбъект.ПроксиСервер;
    Настройки.ПроксиПорт = ЭтотОбъект.ПроксиПорт;
    
	Настройки.НеПроверятьПоЖурналуРегистрации = НЕ ЭтотОбъект.ПроверятьПоЖурналуРегистрации;
	Настройки.Таймаут = ЭтотОбъект.ТаймаутВыполнения;
	Настройки.Ответственный = ЭтотОбъект.Ответственный;
    Настройки.ПериодКонтроля = ЭтотОбъект.ПериодКонтроля;
    Настройки.МинимальныйПроцентДоступности = ЭтотОбъект.МинимальныйПроцентДоступности;
    Настройки.ДопустимоНетДанных = ЭтотОбъект.ДопустимоНетДанных;
	
	Возврат Настройки;
    
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьКомандЗапуска(ЭтотОбъект)
	Если НЕ ЭтотОбъект.Объект.Выполнять И НЕ ЭтотОбъект.Объект.Пауза Тогда
		ЭтотОбъект.Элементы.ФормаСтарт.Доступность = Истина;
		ЭтотОбъект.Элементы.ФормаПауза.Доступность = Ложь;
		ЭтотОбъект.Элементы.ФормаСтоп.Доступность = Ложь;
	ИначеЕсли НЕ ЭтотОбъект.Объект.Выполнять И ЭтотОбъект.Объект.Пауза Тогда
		ЭтотОбъект.Элементы.ФормаСтарт.Доступность = Истина;
		ЭтотОбъект.Элементы.ФормаПауза.Доступность = Ложь;
		ЭтотОбъект.Элементы.ФормаСтоп.Доступность = Истина;
	ИначеЕсли ЭтотОбъект.Объект.Выполнять И НЕ ЭтотОбъект.Объект.Пауза Тогда
		ЭтотОбъект.Элементы.ФормаСтарт.Доступность = Ложь;
		ЭтотОбъект.Элементы.ФормаПауза.Доступность = Истина;
		ЭтотОбъект.Элементы.ФормаСтоп.Доступность = Истина;
	ИначеЕсли ЭтотОбъект.Объект.Выполнять И ЭтотОбъект.Объект.Пауза Тогда
		ЭтотОбъект.Элементы.ФормаСтарт.Доступность = Истина;
		ЭтотОбъект.Элементы.ФормаПауза.Доступность = Ложь;
		ЭтотОбъект.Элементы.ФормаСтоп.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыИнцидентовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	КлючЗаписи = СоздатьКлючЗаписиИнцидента(ЭтотОбъект.Элементы.ПараметрыИнцидентов.ТекущиеДанные.КодИнцидента, ЭтотОбъект.Элементы.ПараметрыИнцидентов.ТекущиеДанные.ТипИнцидента);
    
    Если НЕ КлючЗаписи.Пустой() Тогда
        ПараметрыОткрытия = Новый Структура("Ключ", КлючЗаписи);
        Попытка
            ОткрытьФорму("РегистрСведений.Инциденты.Форма.ФормаЗаписи", ПараметрыОткрытия);
        Исключение
            ОбщийКлиентСервер.СгенерироватьСообщениеПользователю("Инцидент с такими параметрами еще не зарегистрирован!", "ПараметрыИнцидентов", ЭтотОбъект);
        КонецПопытки;
        
    КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Попытка
		Результат = ВыполнитьСейчасСервер(Объект.Ссылка);
	Исключение
		Результат = Новый Структура("Успешно, Результат, Описание", Ложь, "Проблемы есть", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Если Результат.Успешно Тогда
		СтартНаСервере(Объект.Ссылка, 1, Результат.Описание);
	Иначе
		СтартНаСервере(Объект.Ссылка, 0, Результат.Описание);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


