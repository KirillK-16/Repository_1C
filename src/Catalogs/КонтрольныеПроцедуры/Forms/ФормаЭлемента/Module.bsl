&НаКлиенте
Перем РасписаниеЗадания Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Общий.ЭтоНовыйОбъект(Объект) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
    
	Элементы.ИсторияВыполненияСтраница.Видимость = Объект.НастройкаВыполнена; 
	ИсторияВыполнения.Параметры.УстановитьЗначениеПараметра("КонтрольнаяПроцедура", Объект.Ссылка);
    ИсторияВыполнения.Параметры.УстановитьЗначениеПараметра("ОбъектКонтроля", Объект.ОбъектКонтроля);
	
	ОбновитьСостояние();
	ОбновитьРекомендации();
	СброситьВыполнениеКонтрольнойПроцедуры();
	Объект.Ссылка.ПолучитьОбъект().ОбщиеНастройкиФормы(Объект, ЭтотОбъект);
	
	ПоУмолчанию = НЕ Объект.Сохранено;
	ЭтотОбъект.Параметры.ПараметрыПриОткрытии = Новый Структура("РасписаниеЗадания", Неопределено);
	ЗаполнитьНастройки(ПоУмолчанию);
    
    Если Объект.ОбъектКонтроля.ПлощадкаЭксплуатации.ПометкаУдаления ИЛИ Объект.ОбъектКонтроля.ПлощадкаЭксплуатации = Справочники.ПлощадкиЭксплуатации.Корзина() Тогда
        ЭтотОбъект.ТолькоПросмотр = Истина;
        ЭтотОбъект.Элементы.ГруппаУправлениеПроцедурой.Доступность = Ложь;
        ЭтотОбъект.Элементы.НастройкиСтраница.ТолькоПросмотр = Истина;
        ЭтотОбъект.Элементы.ОповещениеНастройка.ТолькоПросмотр = Истина;
        ЭтотОбъект.Элементы.НастройкиБизнесПроцесса.ТолькоПросмотр = Истина;
    КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройки(ПоУмолчанию = Ложь)
	
	Если ПоУмолчанию Тогда
		ВладелецНастроек = Объект.Владелец;
		УстановитьПоУмолчаниюСписокРассылки();
	Иначе
		ВладелецНастроек = Объект.Ссылка;
	КонецЕсли;
	
	РасписаниеПоУмолчанию = ПолучитьРасписаниеНаФормеНаСервере(ВладелецНастроек);
	
	ЭтотОбъект.Параметры.ПараметрыПриОткрытии.РасписаниеЗадания = РасписаниеПоУмолчанию;
	ЭтотОбъект.РасписаниеСтрока = ?(РасписаниеПоУмолчанию = Неопределено, "", Строка(РасписаниеПоУмолчанию));
	
	АдресВременногоХранилищаРасписания = ПоместитьВоВременноеХранилище(РасписаниеПоУмолчанию, ЭтотОбъект.УникальныйИдентификатор);	
	ЗаполнитьДинамическиеНастройки(ВладелецНастроек);
	
	ЭтотОбъект.Модифицированность = ?(ПоУмолчанию, Истина, ЭтотОбъект.Модифицированность);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПоУмолчанию = НЕ Объект.Сохранено;
	ЭтотОбъект.РасписаниеЗадания = ЭтотОбъект.Параметры.ПараметрыПриОткрытии.РасписаниеЗадания;
	Если ПоУмолчанию Тогда
		ЭтотОбъект.Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Пауза ИЛИ (ПринятоРешение И НЕ Выполнять) Тогда
		Возврат;
	КонецЕсли;
	
	ИменаОбязательныхРеквизитов = РеквизитФормыВЗначение("ИменаОбязательныхНастроекБизнесПроцесса");
	Для Каждого СтрокаТаблицы Из ИменаОбязательныхРеквизитов Цикл
		ПроверяемыеРеквизиты.Добавить(СтрокаТаблицы.ИмяРеквизита);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПринятоРешение Тогда 
		ТекущийОбъект.НастройкаВыполнена = Истина;
	КонецЕсли;
	
	ТекущийОбъект.Выполнять = Выполнять;
	ТекущийОбъект.Пауза = Пауза;
	
	ТребуетсяЗапускБизнесПроцесса = ТекущийОбъект.Выполнять И НЕ Объект.Ссылка.Выполнять;
	
	// Если расписание было выставлено, то оно должно содержать что-то осмысленное 
	Если НЕ ПустаяСтрока(АдресВременногоХранилищаРасписания) Тогда
		Расписание = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаРасписания);
		Если Расписание = Неопределено Тогда 
			Отказ = Истина;
			ОбщийКлиентСервер.СгенерироватьСообщениеПользователю(
				НСтр("ru = 'Расписание контрольной процедуры не настроено.Сохранение невозможно.'"),
				"РасписаниеСтрока",
				ЭтотОбъект
			);
			Возврат;
		КонецЕсли;
		ТекущийОбъект.Расписание = Новый ХранилищеЗначения(Расписание, Новый СжатиеДанных(9));
	КонецЕсли;
	ТекущийОбъект.Сохранено = Истина;
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	НастройкиСервер.РазобратьИСохранитьДинамическиеНастройки(ТекущийОбъект.Ссылка, ЭтотОбъект, "НастройкиБизнесПроцесса");	
	НастройкиСервер.СохранитьОтветственных(ТекущийОбъект.Ссылка, ЭтотОбъект, "ОтветственныеГруппа");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОповеститьОбИзменениях();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Старт(Команда)
	
	ВключитьКонтрольнуюПроцедуру(Истина);
	ПринятоРешение = Истина;
	
	ПараметрыЖР = Новый Структура("Ссылка, ИмяСобытия, Комментарий");
	ПараметрыЖР.Ссылка = Объект.Ссылка;
	ПараметрыЖР.ИмяСобытия = НСтр("ru = 'Контрольная процедура: Старт'");
	ПараметрыЖР.Комментарий = Объект.Наименование + ": <" + Объект.Ссылка.УникальныйИдентификатор() + ">";
	ЗакрытьЭтуФорму(Истина, ПараметрыЖР);
	
КонецПроцедуры

&НаКлиенте
Процедура Пауза(Команда)
	
	ПоставитьНаПаузуКонтрольнуюПроцедуру();
	
	ПараметрыЖР = Новый Структура("Ссылка, ИмяСобытия, Комментарий");
	ПараметрыЖР.Ссылка = Объект.Ссылка;
	ПараметрыЖР.ИмяСобытия = НСтр("ru = 'Контрольная процедура: Пауза'");
	ПараметрыЖР.Комментарий = Объект.Наименование + ": <" + Объект.Ссылка.УникальныйИдентификатор() + ">";
	ЗакрытьЭтуФорму(, ПараметрыЖР);
	
КонецПроцедуры

&НаКлиенте
Процедура Стоп(Команда)
	
	ТекстПредупреждения = Нстр("ru='
		|Вы уверены, что желаете отказать от выполнения контрольной процедуры?'");
	Режим = РежимДиалогаВопрос.ДаНет;
	ОписаниеОповещения = Новый ОписаниеОповещения("СтопЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстПредупреждения, Режим, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура СтопЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ВключитьКонтрольнуюПроцедуру(Ложь);
		
		ТекстПредупреждения = Нстр("ru='Пометить как выполненные все задачи, связанные с контрольной процедурой?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		ОписаниеОповещения = Новый ОписаниеОповещения("СтопЗавершениеЗадачи", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстПредупреждения, Режим, 0);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтопЗавершениеЗадачи(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Объект.ДеактивацияТолькоСлужебныхЗадачПриОтключении = РезультатВопроса = КодВозвратаДиалога.Нет;
	ПринятоРешение = Истина;
	
	ПараметрыЖР = Новый Структура("Ссылка, ИмяСобытия, Комментарий");
	ПараметрыЖР.Ссылка = Объект.Ссылка;
	ПараметрыЖР.ИмяСобытия = НСтр("ru = 'Контрольная процедура: Стоп'");
	ПараметрыЖР.Комментарий = Объект.Наименование + ": <" + Объект.Ссылка.УникальныйИдентификатор() + ">";
	ЗакрытьЭтуФорму(, ПараметрыЖР);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчас(Команда)
	ВыполнитьСейчасСервер();
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект);
	РасписаниеКлиент.НастроитьРасписаниеПоложитьВоВременноеХранилище(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(Адрес, ДополнительныеПараметры) Экспорт
	Если Адрес <> Неопределено Тогда
		АдресВременногоХранилищаРасписания = Адрес;
		
		ПериодПовтораСек = ПолучитьИзВременногоХранилища(Адрес).ПериодПовтораВТечениеДня;
		Для Каждого ТекТипЗадачи Из Объект.ПараметрыОповещенияПриСбое Цикл
			ТекТипЗадачи.ПериодОповещенияСек = ТекТипЗадачи.ПериодОповещения * ПериодПовтораСек;
		КонецЦикла;	
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНастройкиПоУмолчаниюКоманда(Команда)
	Если Объект.Владелец.Пустая() Тогда
		Возврат;
	КонецЕсли;	
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = "ru = ""Продолжить выполнение операции?"";"
    	 + " en = ""Do you want to continue?""";
		 
	ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьНастройкиПоУмолчаниюКомандаЗавершение", ЭтотОбъект);	 
	ПоказатьВопрос(ОписаниеОповещения, Текст, Режим, 0);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНастройкиПоУмолчаниюКомандаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьНастройки(Истина);
		
		ПараметрыЖР = Новый Структура("Ссылка, ИмяСобытия, Комментарий");
		ПараметрыЖР.Ссылка = Объект.Ссылка;
		ПараметрыЖР.ИмяСобытия = НСтр("ru = 'Контрольная процедура: Установить настройки по умолчанию'");
		ПараметрыЖР.Комментарий = Объект.Наименование + ": <" + Объект.Ссылка.УникальныйИдентификатор() + ">";
		
		ЗаписатьВЖурналРегистрации(ПараметрыЖР);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	СброситьВыполнениеКонтрольнойПроцедуры();
	ПринятоРешение = Объект.НастройкаВыполнена;
	
	ПараметрыЖР = Новый Структура("Ссылка, ИмяСобытия, Комментарий");
	ПараметрыЖР.Ссылка = Объект.Ссылка;
	ПараметрыЖР.ИмяСобытия = НСтр("ru = 'Контрольная процедура: Записать и закрыть'");
	ПараметрыЖР.Комментарий = Объект.Наименование + ": <" + Объект.Ссылка.УникальныйИдентификатор() + ">";
	ЗакрытьЭтуФорму(, ПараметрыЖР);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	СброситьВыполнениеКонтрольнойПроцедуры();
	ПринятоРешение = Объект.НастройкаВыполнена;
	ОчиститьСообщения();
	Если ЭтотОбъект.ПроверитьЗаполнение() Тогда
		ПараметрыЖР = Новый Структура("Ссылка, ИмяСобытия, Комментарий");
		ПараметрыЖР.Ссылка = Объект.Ссылка;
		ПараметрыЖР.ИмяСобытия = НСтр("ru = 'Контрольная процедура: Записать'");
		ПараметрыЖР.Комментарий = Объект.Наименование + ": <" + Объект.Ссылка.УникальныйИдентификатор() + ">";
		ЗаписатьВЖурналРегистрации(ПараметрыЖР);
		
		ЭтотОбъект.Записать();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ "ИсторияВыполнения"

&НаКлиенте
Процедура ИсторияВыполненияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    ТекущиеДанные = Элементы.ИсторияВыполнения.ТекущиеДанные;
    
    ПараметрыОткрытия = Новый Структура("КонтрольнаяПроцедура, Результат, Период, Описание", Объект.Ссылка, ТекущиеДанные.Результат, ТекущиеДанные.Период, ТекущиеДанные.Описание);
    ОткрытьФорму("РегистрСведений.ЖурналКонтроля.Форма.СтраницаЖурналаРегистрации", ПараметрыОткрытия);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ВыполнитьСейчасСервер()
	ПараметрыЖР = Новый Структура("Ссылка, ИмяСобытия, Комментарий");
	ПараметрыЖР.Ссылка = Объект.Ссылка;
	ПараметрыЖР.ИмяСобытия = НСтр("ru = 'Контрольная процедура: Выполнить сейчас'");
	ПараметрыЖР.Комментарий = Объект.Наименование + ": <" + Объект.Ссылка.УникальныйИдентификатор() + ">";
	ЗаписатьВЖурналРегистрации(ПараметрыЖР);
	
	УправлениеЗаданиямиСервер.ЗапускКонтрольнойПроцедуры(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьЭтуФорму(ЗапускКонтрольнойПроцедуры = Ложь, ПараметрыЖР = Неопределено)
	ОчиститьСообщения();
	Если ЭтотОбъект.ПроверитьЗаполнение() Тогда
		Если ПараметрыЖР <> Неопределено Тогда
			ЗаписатьВЖурналРегистрации(ПараметрыЖР);
		КонецЕсли;
		
		ЭтотОбъект.Записать();
		ЭтотОбъект.Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьВЖурналРегистрации(ПараметрыЖР)
	Справочники.КонтрольныеПроцедуры.ЗаписатьВЖурналРегистрации(ПараметрыЖР);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРасписаниеНаФормеНаСервере(Ссылка)
	Возврат РасписаниеСервер.ПолучитьРасписание(Ссылка);
КонецФункции

&НаСервере
Процедура ЗаполнитьДинамическиеНастройки(ОбъектСсылка)
	
	ИменаОбязательныхРеквизитов = РеквизитФормыВЗначение("ИменаОбязательныхНастроекБизнесПроцесса");
	ИменаОбязательныхРеквизитов.Очистить();	
	
	ИменаНовыхЭлементов = НастройкиСервер.ЗаполнитьПоляДинамическихНастроекНаФорме(
		ОбъектСсылка, 
		ЭтотОбъект, 
		"НастройкиБизнесПроцесса", 
		ИменаОбязательныхРеквизитов
	);
		
	НастройкиСервер.ЗаполнитьПоляОтветственныхПоКонтрольнойПроцедуре(
		ОбъектСсылка, 
		ЭтотОбъект, 
		"ОтветственныеГруппа",
		ИменаОбязательныхРеквизитов
	);
	
	ЗначениеВРеквизитФормы(ИменаОбязательныхРеквизитов, "ИменаОбязательныхНастроекБизнесПроцесса");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПоУмолчаниюСписокРассылки()
	ВидПроцедуры = Объект.Владелец;
	Объект.ДополнительноеОповещение.Очистить();
	Для Каждого ПоУмолчаниюЗапись Из ВидПроцедуры.ДополнительноеОповещение Цикл
		НоваяЗапись = Объект.ДополнительноеОповещение.Добавить();	
		НоваяЗапись.Пользователь = ПоУмолчаниюЗапись.Пользователь;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВключитьКонтрольнуюПроцедуру(ВыполнятьНовоеЗначение)
	
	Выполнять = ВыполнятьНовоеЗначение;
	Пауза = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПоставитьНаПаузуКонтрольнуюПроцедуру()
	
	Пауза = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСостояние()
	ЗапретитьКнопки = Новый Массив;
	
	Если НЕ Объект.Ссылка.НастройкаВыполнена Тогда
		ЗапретитьКнопки.Добавить("ФормаПауза");
		ЗапретитьКнопки.Добавить("ВыполнитьСейчас");
		СостояниеСтрока = ": НАСТРОЙКА";
	ИначеЕсли НЕ Объект.Ссылка.Выполнять Тогда
		ЗапретитьКнопки.Добавить("ФормаПауза");
		ЗапретитьКнопки.Добавить("ФормаСтоп");
		ЗапретитьКнопки.Добавить("ВыполнитьСейчас");
		СостояниеСтрока = ": ОСТАНОВЛЕНА";	
	ИначеЕсли Объект.Ссылка.Пауза Тогда
		ЗапретитьКнопки.Добавить("ФормаПауза");
		СостояниеСтрока = ": ПАУЗА";	
	Иначе
		ЗапретитьКнопки.Добавить("ФормаСтарт");
		СостояниеСтрока = ": ВЫПОЛНЯЕТСЯ";	
	КонецЕсли;	
		
	ЭтотОбъект.Заголовок = Строка(Объект.Владелец.Наименование) + СостояниеСтрока;

	Элементы.ФормаСтарт.Доступность = Истина;	
	Элементы.ФормаПауза.Доступность = Истина;
	Элементы.ФормаСтоп.Доступность = Истина;
	Для Каждого ИмяКнопки Из ЗапретитьКнопки Цикл
		Элементы[ИмяКнопки].Доступность = Ложь;	
	КонецЦикла;	

	ЭтотОбъект.Прочитать();
КонецПроцедуры	

&НаКлиенте
Процедура ОповеститьОбИзменениях()
	Оповестить("Изменение.Справочник.КонтрольныеПроцедуры");	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРекомендации()
	
	ИмяМакета = НазваниеСтраницыСправки();
	Если ИмяМакета <> Неопределено Тогда
		Справка = Общий.ТекстHTMLМакета(ИмяМакета);
		Формы = РасширяемыеПараметрыЯдра.НазванияВнешнихФормНаФормеКонтрольнойПроцедуры(Объект.Владелец);
		НомерФормы = 0;
		Для Каждого ДанныеПоФорме Из Формы Цикл
			НомерФормы = НомерФормы + 1;
			ДобавитьКомандуНаФорму(
				"ОткрытиеВнешнейФормы" + НомерФормы,
				ДанныеПоФорме.Название,
				ДанныеПоФорме.ПутьКФорме, 
				Новый Структура("ОбъектКонтроля", Объект.ОбъектКонтроля)
			);
		КонецЦикла;
	Иначе
		Элементы.Рекомендации.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НазваниеСтраницыСправки()
	
	Возврат Объект.Владелец.ИмяБизнесПроцесса;	
	
КонецФункции

&НаСервере
Процедура ДобавитьКомандуНаФорму(ИмяКоманды, Заголовок, ИмяФормы, ПараметрыОткрытия)
	
	НоваяКоманда = Команды.Добавить(ИмяКоманды); 
	НоваяКоманда.Действие = "ОткрытьВспомогательнуюФорму"; 
	
	НовыйЭлемент = Элементы.Добавить(ИмяКоманды,Тип("КнопкаФормы"),Элементы.ГруппаПерейти); 
	НовыйЭлемент.ИмяКоманды = ИмяКоманды; 
	НовыйЭлемент.Вид = ВидКнопкиФормы.Гиперссылка;
	НовыйЭлемент.Заголовок = Заголовок;
	
	ТекущиеПараметры = РеквизитФормыВЗначение("СсылкиНаВнешниеФормы");
	НоваяСтрока = ТекущиеПараметры.Добавить();
	НоваяСтрока.ИмяКоманды = ИмяКоманды;
	НоваяСтрока.ИмяФормы = ИмяФормы;
	
	Для Каждого ИмяЗначениеПараметра Из ПараметрыОткрытия Цикл
		НоваяСтрока = ТекущиеПараметры.Добавить();
		НоваяСтрока.ИмяКоманды = ИмяКоманды;

		НоваяСтрока.ИмяПараметраОткрытия = ИмяЗначениеПараметра.Ключ;
		НоваяСтрока.ЗначениеПараметраОткрытия = ИмяЗначениеПараметра.Значение;
	КонецЦикла;	
		
	ЗначениеВРеквизитФормы(ТекущиеПараметры, "СсылкиНаВнешниеФормы");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВспомогательнуюФорму(Команда)
	ПараметрыФормы = ПараметрыВнешнейФормы(Команда.Имя);
		
	ОткрытьФорму(
		ПараметрыФормы.ИмяФормы,
		ПараметрыФормы.ПараметрыОткрытия
	);
	
КонецПроцедуры	

&НаСервере
Функция ПараметрыВнешнейФормы(ИмяКоманды)
	
	СтрокиПараметров = СсылкиНаВнешниеФормы.НайтиСтроки(
		Новый Структура("ИмяКоманды", ИмяКоманды)
	);
	
	Результат = Новый Структура; 
	ПараметрыОткрытия = Новый Структура;
	Для Каждого СтрокаПараметров Из СтрокиПараметров Цикл
		Если НЕ ПустаяСтрока(СтрокаПараметров.ИмяФормы) Тогда
			Результат.Вставить("ИмяФормы", СтрокаПараметров.ИмяФормы);
		КонецЕсли;
		Если НЕ ПустаяСтрока(СтрокаПараметров.ИмяПараметраОткрытия) Тогда
			ПараметрыОткрытия.Вставить(
				СтрокаПараметров.ИмяПараметраОткрытия, 
				СтрокаПараметров.ЗначениеПараметраОткрытия
			);		
		КонецЕсли;
	КонецЦикла;	
	Результат.Вставить("ПараметрыОткрытия", ПараметрыОткрытия);
	Возврат Результат;
		
КонецФункции

&НаСервере
Процедура СброситьВыполнениеКонтрольнойПроцедуры()
	
	Выполнять = Объект.Ссылка.Выполнять;
	Пауза = Объект.Ссылка.Пауза;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНеВыбранныеТипыЗадачНаСервере(ОбъектСсылка, ВыбранныеТипы)
	Возврат ОбъектСсылка.ПолучитьОбъект().ПолучитьТипыЗадач(ВыбранныеТипы);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПериодПовтораПоРасписанию(ОбъектСсылка)
	Возврат ОбъектСсылка.Расписание.Получить().ПериодПовтораВТечениеДня;
КонецФункции

&НаКлиенте
Функция ПолучитьНеВыбранныеТипыЗадач(ВыбранныеТипы)
	Возврат ПолучитьНеВыбранныеТипыЗадачНаСервере(Объект.Ссылка, ВыбранныеТипы);
КонецФункции

&НаКлиенте
Процедура ПараметрыОповещенияПриСбоеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ТипыЗадач = Новый СписокЗначений;
	Для Каждого ТекТипЗадачи Из Объект.ПараметрыОповещенияПриСбое Цикл
		Если ТекТипЗадачи.ТипЗадачи <> Неопределено Тогда
			ТипыЗадач.Добавить(ТекТипЗадачи.ТипЗадачи);
		КонецЕсли;
	КонецЦикла;
	
	СписокВыбора = ПолучитьНеВыбранныеТипыЗадач(ТипыЗадач);
	Если СписокВыбора <> Неопределено Тогда
		Если СписокВыбора.Количество() = 0 Тогда
			ПоказатьПредупреждение(,"Все типы задач выбраны!", 30);
			Отказ = Истина;
		КонецЕсли;
	Иначе
		СправочникСиноним = ПолучитьСинонимСправочникаПоВидуКонтрольнойПроцедуры(Объект.Ссылка);
		ПоказатьПредупреждение(,"Не заполнен справочник """ + СправочникСиноним  + """!", 30);
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСинонимСправочникаПоВидуКонтрольнойПроцедуры(ОбъектСсылка)
	Возврат ОбъектСсылка.ПолучитьОбъект().ПолучитьСвойствоСправочникаПоВидуКонтрольнойПроцедуры("Синоним");
КонецФункции

&НаКлиенте
Процедура ПараметрыОповещенияПриСбоеТипЗадачиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Элемент.СписокВыбора.Очистить();
	
	ТипыЗадач = Новый СписокЗначений;
	Для Каждого ТекТипЗадачи Из Объект.ПараметрыОповещенияПриСбое Цикл
		Если ТекТипЗадачи.ТипЗадачи <> Неопределено Тогда
			ТипыЗадач.Добавить(ТекТипЗадачи.ТипЗадачи);
		КонецЕсли;
	КонецЦикла;
		
	ДанныеВыбора = ПолучитьНеВыбранныеТипыЗадач(ТипыЗадач);
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыОповещенияПриСбоеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Оповещать = Истина;
		Элемент.ТекущиеДанные.РежимОповещения = "Однократно";
		Элемент.ТекущиеДанные.ПериодОповещения = 0;
		Элемент.ТекущиеДанные.ПериодОповещенияСек = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыОповещенияПриСбоеРежимОповещенияПриИзменении(Элемент)
	ТекДанные = ЭтотОбъект.Элементы.ПараметрыОповещенияПриСбое.ТекущиеДанные;
	Если ТекДанные.РежимОповещения = "Однократно" Тогда
		ТекДанные.ПериодОповещения = 0;
		ТекДанные.ПериодОповещенияСек = 0;
	ИначеЕсли ТекДанные.РежимОповещения = "Периодически" Тогда
		Если АдресВременногоХранилищаРасписания <> Неопределено Тогда
			ПериодПовтораСек = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаРасписания).ПериодПовтораВТечениеДня;
		Иначе
			ПериодПовтораСек = ПолучитьПериодПовтораПоРасписанию(Объект.Ссылка);
		КонецЕсли;
		
		ТекДанные.ПериодОповещения = 1;
		ТекДанные.ПериодОповещенияСек = ТекДанные.ПериодОповещения * ПериодПовтораСек;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыОповещенияПриСбоеПериодОповещенияПриИзменении(Элемент)
	Если АдресВременногоХранилищаРасписания <> Неопределено Тогда
		ПериодПовтораСек = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаРасписания).ПериодПовтораВТечениеДня;
	Иначе
		ПериодПовтораСек = ПолучитьПериодПовтораПоРасписанию(Объект.Ссылка);
	КонецЕсли;
	ТекДанные = ЭтотОбъект.Элементы.ПараметрыОповещенияПриСбое.ТекущиеДанные;
	ТекДанные.ПериодОповещенияСек = ТекДанные.ПериодОповещения * ПериодПовтораСек;
	
	Если ТекДанные.ПериодОповещения = 0 Тогда
		ТекДанные.РежимОповещения = "Однократно";
	Иначе
		ТекДанные.РежимОповещения = "Периодически";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОповещатьОСбоеПриИзменении(Элемент)
	Если Объект.ОповещатьОСбое Тогда
		ЭтотОбъект.Элементы.ПараметрыОповещенияПриСбое.Доступность = Истина;
	Иначе
		ЭтотОбъект.Элементы.ПараметрыОповещенияПриСбое.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеСтрокаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект);
	РасписаниеКлиент.НастроитьРасписаниеПоложитьВоВременноеХранилище(ОписаниеОповещения);
	
КонецПроцедуры
