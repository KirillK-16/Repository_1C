
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МониторингКлиентСервер.ЗагрузитьСписокЗначенийМасштаба(Элементы.Масштаб);
    МассивПоказателей = Обработки.Мониторинг.Создать().СписокПоказателей();
    Для Каждого ТекПоказатель Из МассивПоказателей Цикл
        ЭтотОбъект.СписокПоказателей.Добавить(ТекПоказатель.НазваниеСправочника, ТекПоказатель.Название);
    КонецЦикла;
        
	ТекПоказательМетаданные = Метаданные.НайтиПоТипу(ТипЗнч(Объект.Показатель));
    Если ТекПоказательМетаданные <> Неопределено Тогда
        ЭтотОбъект.ПоказательМониторинга = ЭтотОбъект.СписокПоказателей.НайтиПоЗначению(ТекПоказательМетаданные.Имя).Представление;
	КонецЕсли;
		
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.Масштаб = 1;
		Объект.ТолщинаЛинии = 2;
		Объект.ТипЛинии = "Сплошная";
		Объект.Номер = Параметры.Номер;
		
		Объект.Номер = МониторингСервер.СледующийНомер(Объект.Владелец);
		
		Объект.КоличествоУсредняемыхЗначений = 10;
		Элементы.КоличествоУсредняемыхЗначений.Видимость = Ложь;
		
		Цвет = Новый Цвет(191, 191, 191);
		Объект.Цвет = ЗначениеВСтрокуВнутр(Цвет);
		Объект.АвтоМасштаб = Истина;
		
		ДанныеОбъекта = РеквизитФормыВЗначение("Объект");
		ДанныеОбъекта.Записать();
		ЗначениеВРеквизитФормы(ДанныеОбъекта, "Объект");
		ЭтоНовый = Истина;
		
	Иначе
		
		Цвет = ЗначениеИзСтрокиВнутр(Объект.Цвет);
		Если НЕ Объект.ПоказыватьТренд Тогда
			
			Элементы.КоличествоУсредняемыхЗначений.Видимость = Ложь;
			
		КонецЕсли;
		Если ЗначениеЗаполнено(Параметры.Масштаб) И Объект.АвтоМасштаб Тогда
			Объект.Масштаб = Параметры.Масштаб;
		КонецЕсли;
	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Показатель) Тогда
		ПоказательОбъект = Объект.Показатель.ПолучитьОбъект();
		Если ПоказательОбъект <> Неопределено Тогда
			ПоказательСтрокой = ПоказательОбъект.Описание;
			ИдентификаторВариантаПоказателя = ПоказательОбъект.ИдентификаторВариантаПоказателя();
			ИмяСправочникаПоказателя = Объект.Показатель.Метаданные().Имя;
		Иначе
			Объект.Показатель = Неопределено;
		КонецЕсли;
	КонецЕсли;

	НастроитьОтображениеЦвета();
	
	Элементы.ВременноеСмещение.Доступность = Объект.ПоказатьДанныеЗаПрошлыйПериод;
	
	Если Параметры.Свойство("ОткрытаИзМониторинга") Тогда
		ОткрытаИзМониторинга = Параметры.ОткрытаИзМониторинга;
	КонецЕсли;
	
	Элементы.Масштаб.Доступность = НЕ Объект.АвтоМасштаб;
	Если НЕ Объект.ПоказыватьТренд Тогда
		Объект.КоличествоУсредняемыхЗначений = 10;
		Элементы.ПараметрыТипаСглаживания.Видимость = Ложь;
	Иначе
		Если Объект.ТипСглаживания = ПредопределенноеЗначение("Перечисление.ТипыСглаживания.СкользящееСреднее") Тогда
			Элементы.КоличествоУсредняемыхЗначений.Видимость = Истина;
		Иначе
			Элементы.КоличествоУсредняемыхЗначений.Видимость = Ложь;
			Объект.КоличествоУсредняемыхЗначений = 10;
		КонецЕсли;
		Элементы.ПараметрыТипаСглаживания.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = Неопределено ИЛИ Источник.ВладелецФормы <> ЭтотОбъект Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяСобытия = "ЗакрытьФорму" Тогда
		ЭтотОбъект.Закрыть();
		Возврат;
	КонецЕсли;
	
	ПоказательСтрокой = Параметр.Описание;
	ИдентификаторВариантаПоказателя = Параметр.ИдентификаторВариантаПоказателя;
	
	Если Не ЗначениеЗаполнено(Объект.Показатель) ИЛИ Объект.Показатель <> Параметр.Ссылка Тогда
		Объект.Показатель = Параметр.Ссылка;
        ЭтотОбъект.ПоказательМониторинга = ПолучитьПредставлениеПоказателя(Объект.Показатель); 
		Объект.Наименование = Параметр.Описание;
		Объект.АвтоМасштаб = Параметр.АвтоМасштаб;
		Объект.Масштаб = Параметр.Масштаб;
		Цвет = Параметр.Цвет;
		НастроитьОтображениеЦвета();
		ПоказательИзменен = Истина;
		Записать();
		Возврат;
	КонецЕсли;
	
	Если Параметр.Изменился Тогда
		ПараметрОповещения = МониторингКлиентСервер.ПараметрОповещенияПоказательМониторингаСозданИзменен(
			ПолныйИдентификаторВариантаПоказателя(), Объект.Ссылка, Параметр.СтарыйИдентификаторТипа);
		ПараметрОповещения.ИзменилисьДанные = Истина;
		Оповестить("ПоказательМониторингаИзменен", ПараметрОповещения, ЭтотОбъект);
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПредставлениеПоказателя(Показатель)
    
    Если ТипЗнч(Показатель) = Тип("СправочникСсылка.ТекущееЧислоВызововСервера") Тогда
        ПредставлениеПоказателя = "Активных вызовов сервера";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ИспользованиеОперативнойПамятиПроцессамиКластера") Тогда
        ПредставлениеПоказателя = "Использование оперативной памяти процессами кластера (в мегабайтах)";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ОценкаПользователей") Тогда
        ПредставлениеПоказателя = "Оценка пользователей";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ПоказателиAPDEX") Тогда
        ПредставлениеПоказателя = "Оценка производительности";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ПроцентДоступностиСервисаВсеБазы") Тогда
        ПредставлениеПоказателя = "Процент доступности информационных баз";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ПроцентДоступностиСервисаВсеРесурсы") Тогда
        ПредставлениеПоказателя = "Процент доступности сервисов";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ПоказателиСкоростиВыполненияТипичныхОпераций") Тогда
        ПредставлениеПоказателя = "Скорость выполнения ключевых операций (в секундах)";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.СформированоОтчетов") Тогда
        ПредставлениеПоказателя = "Сформировано отчетов";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ПоказателиСчетчиков") Тогда
        ПредставлениеПоказателя = "Счетчики";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ЧислоИсключенийПоТехнологическомуЖурналу") Тогда
        ПредставлениеПоказателя = "Число excp по технологическому журналу";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ЧислоПаденийРабочихПроцессов") Тогда
        ПредставлениеПоказателя = "Число аварийных завершений процессов";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ЧислоНовыхОбъектов") Тогда
        ПредставлениеПоказателя = "Число новых и измененных объектов";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ЧислоНерешенныхПроблем") Тогда
        ПредставлениеПоказателя = "Число новых проблем";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.СкоростьРазбораПроблем") Тогда
        ПредставлениеПоказателя = "Число решенных проблем";
    ИначеЕсли ТипЗнч(Показатель) = Тип("СправочникСсылка.ЧислоСеансовПользователей") Тогда
        ПредставлениеПоказателя = "Число сеансов";
    КонецЕсли;
    
    Возврат ПредставлениеПоказателя;
    
КонецФункции


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.Цвет = ЗначениеВСтрокуВнутр(Цвет);
	
	ПараметрОповещения = МониторингКлиентСервер.ПараметрОповещенияПоказательМониторингаСозданИзменен();
	ПараметрОповещения.ИзменилисьДанные = ИзменилисьДанные();
	ПараметрОповещения.ИзменилсяВид = ИзменилсяВид();
	ПараметрОповещения.ИзменилосьСглаживание = ИзменилосьСглаживание();
	
	Если ЗначениеЗаполнено(Объект.Показатель) Тогда
		ПоказательОбъект = Объект.Показатель.ПолучитьОбъект();
		Если ПоказательОбъект <> Неопределено Тогда
			ПоказательОбъект.Описание = ПоказательСтрокой;
			ПоказательОбъект.Записать();
			
			ПараметрОповещения.ИзменилсяВид = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрОповещения.Ссылка = Объект.Ссылка;
	ПараметрОповещения.ИдентификаторВариантаПоказателя = ПолныйИдентификаторВариантаПоказателя();
	ПараметрОповещения.Вставить("Цвет", ЭтотОбъект.Цвет);
	ПараметрОповещения.Вставить("ТолщинаЛинии", Объект.ТолщинаЛинии);
	ПараметрОповещения.Вставить("ТипЛинии", Объект.ТипЛинии);
	ПараметрОповещения.Вставить("Автомасштаб", Объект.АвтоМасштаб);
	ПараметрОповещения.Вставить("Масштаб", Объект.Масштаб);
	
	Оповестить(?(ЭтоНовый, "ПоказательМониторингаСоздан", "ПоказательМониторингаИзменен"), 
		ПараметрОповещения, ЭтотОбъект);
		
	ЭтоНовый = Ложь;
	ПоказательИзменен = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ЦветНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЦветНачалоВыбораЗавершение", ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура("Красный, Зеленый, Синий", Цвет.Красный, Цвет.Зеленый, Цвет.Синий);
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораЦвета", ПараметрыОткрытия,,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		Цвет = РезультатЗакрытия;
		НастроитьОтображениеЦвета();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСглаживанияПриИзменении(Элемент)
	НастроитьОтображениеДополнительныхПараметровСглаживания();
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьТрендПриИзменении(Элемент)
	
	НастроитьОтображениеПараметровСглаживания();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоМасштабПриИзменении(Элемент)
	НастроитьОтображениеМасштаба();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДанныеЗаПрошлыйПериодПриИзменении(Элемент)
	Элементы.ВременноеСмещение.Доступность = Объект.ПоказатьДанныеЗаПрошлыйПериод;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура НастроитьОтображениеЦвета()
	
	ДанныеОЦвете = МониторингКлиентСервер.ДанныеЦветаЛинии(Цвет);
	Если ДанныеОЦвете <> Неопределено Тогда
		НазваниеЦвета = ДанныеОЦвете.Название;
		ИзображениеЦвета = БиблиотекаКартинок[ДанныеОЦвете.ИмяКартинки];
		ИзображениеЦветаСтрока = "ggggg";
		ЭтотОбъект.Элементы.ИзображениеЦветаСтрока.ЦветТекста = Цвет;
		ЭтотОбъект.ЦветКрасный = Цвет.Красный;
		ЭтотОбъект.ЦветЗеленый = Цвет.Зеленый;
		ЭтотОбъект.ЦветСиний = Цвет.Синий;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеПараметровСглаживания()
	
	Если НЕ Объект.ПоказыватьТренд Тогда
		
		Объект.КоличествоУсредняемыхЗначений = 10;
		Элементы.ПараметрыТипаСглаживания.Видимость = Ложь;
		
	Иначе
		
		НастроитьОтображениеДополнительныхПараметровСглаживания();
		Элементы.ПараметрыТипаСглаживания.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеДополнительныхПараметровСглаживания()
	
	Если Объект.ТипСглаживания = ПредопределенноеЗначение("Перечисление.ТипыСглаживания.СкользящееСреднее") Тогда
		Элементы.КоличествоУсредняемыхЗначений.Видимость = Истина;
	Иначе
		Элементы.КоличествоУсредняемыхЗначений.Видимость = Ложь;
		Объект.КоличествоУсредняемыхЗначений = 10;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеМасштаба()
	Элементы.Масштаб.Доступность = НЕ Объект.АвтоМасштаб;
КонецПроцедуры

&НаСервере
Функция ИзменилосьСглаживание()
	
	Возврат Объект.ПоказыватьТренд <> Объект.Ссылка.ПоказыватьТренд
		ИЛИ Объект.ТипСглаживания <> Объект.Ссылка.ТипСглаживания
		ИЛИ Объект.КоличествоУсредняемыхЗначений <> Объект.Ссылка.КоличествоУсредняемыхЗначений
		ИЛИ Объект.Масштаб <> Объект.Ссылка.Масштаб
		ИЛИ Объект.АвтоМасштаб <> Объект.Ссылка.АвтоМасштаб;
	
КонецФункции

&НаСервере
Функция ИзменилисьДанные()
	
	Если Объект.ПоказатьДанныеЗаПрошлыйПериод <> Объект.Ссылка.ПоказатьДанныеЗаПрошлыйПериод Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Объект.ПоказатьДанныеЗаПрошлыйПериод И Объект.ВременноеСмещение <> Объект.Ссылка.ВременноеСмещение Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ИзменилсяВид()
	
	Возврат Объект.ТипЛинии <> Объект.Ссылка.ТипЛинии
		ИЛИ Объект.ТолщинаЛинии <> Объект.Ссылка.ТолщинаЛинии
		ИЛИ ЗначениеВСтрокуВнутр(Цвет) <> Объект.Ссылка.Цвет;
	
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ЭтоНовый Или ПоказательИзменен Тогда
		ПриЗакрытииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	Если ЭтоНовый Тогда
		УдалениеОбъекта = Новый УдалениеОбъекта(Объект.Ссылка);
		УдалениеОбъекта.Записать();
	ИначеЕсли ПоказательИзменен Тогда
		УдалениеОбъекта = Новый УдалениеОбъекта(Объект.Показатель);
		УдалениеОбъекта.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолныйИдентификаторВариантаПоказателя()
	
	Возврат ИдентификаторВариантаПоказателя 
		+ МониторингКлиентСервер.СуффиксИдентификатораВариантаПоказателяМониторинга(Объект);
	
КонецФункции

&НаКлиенте
Функция ИмяФормыРедактированияПоказателя(Знач ИмяСправочника)
	Возврат "Справочник." + ИмяСправочника + ".ФормаОбъекта";
КонецФункции

&НаКлиенте
Процедура ОткрытьПоказатель(Команда)
	Если Не ЗначениеЗаполнено(Объект.Показатель) И Модифицированность Тогда
		Записать();
	КонецЕсли;	
		
	ПараметрыФормы = Новый Структура("Ключ", Объект.Показатель);
	
	Если Не ЗначениеЗаполнено(Объект.Показатель) Тогда
		Если Не ЗначениеЗаполнено(ЭтотОбъект.ПоказательМониторинга) Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПоказательЗавершение", ЭтотОбъект, ПараметрыФормы);
			ОткрытьФорму("Обработка.Мониторинг.Форма.ВыборПоказателя",,ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			ИмяСправочникаПоказателя = ЭтотОбъект.ПоказательМониторинга;
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("Владелец", Объект.Ссылка));
			ОткрытьПоказательОбщая(ПараметрыФормы);
		КонецЕсли;
	Иначе
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("Владелец", Объект.Ссылка));
		ОткрытьПоказательОбщая(ПараметрыФормы);
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПоказательЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		ИмяСправочникаПоказателя = РезультатЗакрытия.ИмяСправочника;
		ДополнительныеПараметры.Вставить("ЗначенияЗаполнения", Новый Структура("Владелец", Объект.Ссылка));
		ОткрытьПоказательОбщая(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПоказательОбщая(ПараметрыФормы)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПоказательОбщаяЗавершение", ЭтотОбъект);
	ОткрытьФорму(ИмяФормыРедактированияПоказателя(ИмяСправочникаПоказателя), ПараметрыФормы, ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПоказательОбщаяЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		Если РезультатЗакрытия = "Закрыть" ИЛИ ОткрытаИзМониторинга Тогда
			ЭтотОбъект.Закрыть();
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказательМониторингаПриИзменении(Элемент)
	
	ПараметрыФормы = Новый Структура("Ключ", Объект.Показатель);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("Владелец", Объект.Ссылка));
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказательМониторингаПриИзмененииЗаверешение", ЭтотОбъект);
    Если ЗначениеЗаполнено(ЭтотОбъект.ПоказательМониторинга) Тогда
        ОткрытьФорму(ИмяФормыРедактированияПоказателя(ЭтотОбъект.ПоказательМониторинга), ПараметрыФормы, ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПоказательМониторингаПриИзмененииЗаверешение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		Если РезультатЗакрытия = "Закрыть" ИЛИ ОткрытаИзМониторинга Тогда
			ЭтотОбъект.Закрыть();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЦветНаКлиенте()
	НовыйЦвет = Новый Цвет(ЭтотОбъект.ЦветКрасный, ЭтотОбъект.ЦветЗеленый, ЭтотОбъект.ЦветСиний);
	ЭтотОбъект.Элементы.ИзображениеЦветаСтрока.ЦветТекста = НовыйЦвет;
	ЭтотОбъект.НазваниеЦвета = "Произвольный(" + ЭтотОбъект.ЦветКрасный + ", " + ЭтотОбъект.ЦветЗеленый + ", " + ЭтотОбъект.ЦветСиний + ")";;
КонецПроцедуры

&НаКлиенте                                                                     
Процедура ЦветКрасныйПриИзменении(Элемент)
	Если ЭтотОбъект.ЦветКрасный > 255 Тогда
		ЭтотОбъект.ЦветКрасный = 255;
	КонецЕсли;
	ИзменитьЦветНаКлиенте();	
КонецПроцедуры

&НаКлиенте
Процедура ЦветКрасныйПолзунокПриИзменении(Элемент)
	ИзменитьЦветНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ЦветЗеленыйПриИзменении(Элемент)
	Если ЭтотОбъект.ЦветЗеленый > 255 Тогда
		ЭтотОбъект.ЦветЗеленый = 255;
	КонецЕсли;
	ИзменитьЦветНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ЦветЗеленыйПозунокПриИзменении(Элемент)
	ИзменитьЦветНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ЦветСинийПриИзменении(Элемент)
	Если ЭтотОбъект.ЦветСиний > 255 Тогда
		ЭтотОбъект.ЦветСиний = 255;
	КонецЕсли;
	ИзменитьЦветНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ЦветСинийПолзунокПриИзменении(Элемент)
	ИзменитьЦветНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ЭтотОбъект.Цвет = Новый Цвет(ЭтотОбъект.ЦветКрасный, ЭтотОбъект.ЦветЗеленый, ЭтотОбъект.ЦветСиний);
КонецПроцедуры


