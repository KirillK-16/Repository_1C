
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
        Объект.Владелец = ПараметрыСеанса.ТекущийПользователь;
    КонецЕсли;
            
    Если Объект.Владелец <> ПараметрыСеанса.ТекущийПользователь Тогда
        ЭтотОбъект.ТолькоПросмотр = Истина;
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьПрофильКлючевыхОпераций(Команда)
    
    ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогВыбора.Заголовок = "Выбирите файл профиля ключевых операций";
    ДиалогВыбора.Фильтр = "Файлы профиля ключевых операций (*.xml)|*.xml";
    
	ОписаниеОповещения = Новый ОписаниеОповещения("ДиалогВыбораФайлаЗавершение", ЭтотОбъект, Неопределено);
	ДиалогВыбора.Показать(ОписаниеОповещения);
        
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПрофильКлючевыхОпераций(Команда)
    
    ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
    ДиалогВыбора.Заголовок = "Сохранить профиль ключевых операций в файл";
    ДиалогВыбора.Фильтр = "Файлы профиля ключевых операций (*.xml)|*.xml";
    
    ОписаниеОповещения = Новый ОписаниеОповещения("ДиалогСохраненияФайлаЗавершение", ЭтотОбъект, Неопределено);
	ДиалогВыбора.Показать(ОписаниеОповещения);
    
КонецПроцедуры

&НаКлиенте
Процедура ПоискКлючевыхОпераций(Команда)
    ПоискКлючевыхОперацийНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТекущееСостояние(Команда)
    ПечатьТекущееСостояниеНаСервере(Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПреобразоватьИмяПриИзменении(Элемент)
    
    Для Каждого ТекСтрока Из Объект.КлючевыеОперацииПрофиля Цикл
        Если Объект.ПреобразоватьИмя Тогда
            ТекСтрока.ИмяПредставление = РазложитьСтрокуПоСловам(ТекСтрока.Имя);
        Иначе
            ТекСтрока.ИмяПредставление = ТекСтрока.Имя;
        КонецЕсли;
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВводЧисла(Команда)
	ПараметрыВвода = ПараметрыЧисловойКоманды(Команда.Имя);	
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЧисла", ЭтотОбъект, ПараметрыВвода.ДополнительныеПараметры);	
	ПоказатьВводЧисла(Оповещение, 0, ПараметрыВвода.Заголовок, ПараметрыВвода.Длина, ПараметрыВвода.Точность);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЧисла(Результат, Параметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ИдентификаторСтроки Из Элементы.КлючевыеОперацииПрофиля.ВыделенныеСтроки Цикл
		СтрокаКО = Объект.КлючевыеОперацииПрофиля.НайтиПоИдентификатору(ИдентификаторСтроки);
		СтрокаКО[Параметры.ИмяРеквизита] = Результат;
	КонецЦикла;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтветственного(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеВыбораОтветственного", ЭтотОбъект);
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", , ЭтаФорма,,,, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораОтветственного(Результат, Параметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ИдентификаторСтроки Из Элементы.КлючевыеОперацииПрофиля.ВыделенныеСтроки Цикл
		СтрокаКО = Объект.КлючевыеОперацииПрофиля.НайтиПоИдентификатору(ИдентификаторСтроки);
		СтрокаКО.Ответственный = Результат;
	КонецЦикла;
	Модифицированность = Истина;
КонецПроцедуры


&НаКлиенте
Функция ПараметрыЧисловойКоманды(ИмяКоманды)
	ПараметрыВвода = Новый Структура;
	Если ИмяКоманды = "УстановитьМинимальноеКоличествоЗамеров" Тогда
		ПараметрыВвода.Вставить("ДополнительныеПараметры", Новый Структура("ИмяРеквизита", "МинимальноеКоличествоЗамеров"));
		ПараметрыВвода.Вставить("Заголовок", "Введит минимальное количество замеров (для анализа производительности)");
		ПараметрыВвода.Вставить("Длина", 10);
		ПараметрыВвода.Вставить("Точность", 0);
	ИначеЕсли ИмяКоманды = "УстановитьЦелевоеВремя" Тогда
		ПараметрыВвода.Вставить("ДополнительныеПараметры", Новый Структура("ИмяРеквизита", "ЦелевоеВремя"));
		ПараметрыВвода.Вставить("Заголовок", "Введитецелевое время");
		ПараметрыВвода.Вставить("Длина", 5);
		ПараметрыВвода.Вставить("Точность", 1);
	ИначеЕсли ИмяКоманды = "УстановитьВажность" Тогда
		ПараметрыВвода.Вставить("ДополнительныеПараметры", Новый Структура("ИмяРеквизита", "Важность"));
		ПараметрыВвода.Вставить("Заголовок", "Введите важность");
		ПараметрыВвода.Вставить("Длина", 1);
		ПараметрыВвода.Вставить("Точность", 0);
	КонецЕсли;
	Возврат ПараметрыВвода;
КонецФункции



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДиалогВыбораФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
    
    Если ВыбранныеФайлы <> Неопределено Тогда
        
        Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
            ФайлИмя = Новый Файл(ВыбранныеФайлы[0]);
            Объект.Наименование = ФайлИмя.ИмяБезРасширения;
        КонецЕсли;
                
        ДвоичныеДанные = Новый ДвоичныеДанные(ВыбранныеФайлы[0]);
        АдресХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтотОбъект.УникальныйИдентификатор);
        ЗагрузитьПрофильКлючевыхОперацийНаСервере(АдресХранилища);
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ДиалогСохраненияФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
    
    Если ВыбранныеФайлы <> Неопределено Тогда
        АдресХранилища = СохранитьПрофильКлючевыхОперацийНаСервере();    
        ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХранилища);
        ДвоичныеДанные.Записать(ВыбранныеФайлы[0]);
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Функция СохранитьПрофильКлючевыхОперацийНаСервере()
    
    ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
    
    ЗаписьXML = Новый ЗаписьXML;
    ЗаписьXML.ОткрытьФайл(ИмяВременногоФайла);
    
    ЗаписьXML.ЗаписатьНачалоЭлемента("Items");
    ЗаписьXML.ЗаписатьАтрибут("Description", Объект.Наименование);
    ЗаписьXML.ЗаписатьАтрибут("Columns", "Имя,ЦелевоеВремя,Важность");
    
    Для Каждого ТекСтрока Из Объект.КлючевыеОперацииПрофиля Цикл
        ЗаписьXML.ЗаписатьНачалоЭлемента("Item");
        ЗаписьXML.ЗаписатьАтрибут("Имя", ТекСтрока.Имя);
        ЗаписьXML.ЗаписатьАтрибут("ЦелевоеВремя", Формат(ТекСтрока.ЦелевоеВремя, "ЧГ=0"));
        ЗаписьXML.ЗаписатьАтрибут("Важность", Формат(ТекСтрока.Важность, "ЧГ=0"));
        ЗаписьXML.ЗаписатьКонецЭлемента();
    КонецЦикла;
        
    ЗаписьXML.ЗаписатьКонецЭлемента();
    
    ЗаписьXML.Закрыть();
    
    ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
    АдресХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтотОбъект.УникальныйИдентификатор);
    
    УдалитьФайлы(ИмяВременногоФайла);
    
    Возврат АдресХранилища;
    
КонецФункции

&НаСервере
Функция ЗагрузитьПрофильКлючевыхОперацийНаСервере(АдресХранилища)
    
    ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХранилища);
        
    ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
    ДвоичныеДанные.Записать(ИмяВременногоФайла);
    
    ЧтениеXML = Новый ЧтениеXML;
    ЧтениеXML.ОткрытьФайл(ИмяВременногоФайла);
    КлючевыеОперации = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
    
    Колонки = СтрРазделить(КлючевыеОперации["Columns"], ",",Ложь);
    
    Если ТипЗнч(КлючевыеОперации["Item"]) = Тип("ОбъектXDTO") Тогда
        ЗагрузитьОбъектXDTO(КлючевыеОперации["Item"], Колонки);
    Иначе
        Для Каждого ТекЭлемент Из КлючевыеОперации["Item"] Цикл
            ЗагрузитьОбъектXDTO(ТекЭлемент, Колонки);
        КонецЦикла;
    КонецЕсли;
            
    ЧтениеXML.Закрыть();
    УдалитьФайлы(ИмяВременногоФайла);
    
КонецФункции

&НаСервере
Процедура ЗагрузитьОбъектXDTO(ОбъектXDTO, Колонки)
    
    ТекЭлемент = ОбъектXDTO;
    
    ПараметрыОтбора = Новый Структура("Имя", ТекЭлемент.Имя);
    НайденныеСтроки = Объект.КлючевыеОперацииПрофиля.НайтиСтроки(ПараметрыОтбора);
    
    Если НайденныеСтроки.Количество() = 0 Тогда
        
        НовСтрока = Объект.КлючевыеОперацииПрофиля.Добавить();
        
        Для Каждого ТекКолонка Из Колонки Цикл
            Если НовСтрока.Свойство(ТекКолонка) И ТекЭлемент.Свойства().Получить(ТекКолонка) <> Неопределено Тогда
                НовСтрока[ТекКолонка] = ТекЭлемент[ТекКолонка];
            КонецЕсли;
        КонецЦикла;
        
        Если НЕ ЗначениеЗаполнено(НовСтрока.Важность) Тогда
            НовСтрока.Важность = 5;
        КонецЕсли;
        
        Если НЕ ЗначениеЗаполнено(НовСтрока.Ответственный) Тогда
            НовСтрока.Ответственный = ПараметрыСеанса.ТекущийПользователь;
        КонецЕсли;
        
        Если Объект.ПреобразоватьИмя Тогда
            НовСтрока.ИмяПоиск = РазложитьСтрокуПоСловам(НовСтрока.Имя);
        Иначе
            НовСтрока.ИмяПоиск = НовСтрока.Имя;
        КонецЕсли;
    Иначе
        Для Каждого НовСтрока Из НайденныеСтроки Цикл
            Для Каждого ТекКолонка Из Колонки Цикл
                Если НовСтрока.Свойство(ТекКолонка) И ТекЭлемент.Свойства().Получить(ТекКолонка) <> Неопределено Тогда
                    НовСтрока[ТекКолонка] = ТекЭлемент[ТекКолонка];
                КонецЕсли;
            КонецЦикла;
        КонецЦикла;
    КонецЕсли;
    
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РазложитьСтрокуПоСловам(Знач Строка)
	
	МассивСлов = Новый Массив;
	
	ПозицииСлов = Новый Массив;
	Для ПозицияСимвола = 1 По СтрДлина(Строка) Цикл
		ТекСимвол = Сред(Строка, ПозицияСимвола, 1);
		Если ТекСимвол = ВРег(ТекСимвол) И (ТолькоКириллицаВСтроке(ТекСимвол) ИЛИ ТолькоЛатиницаВСтроке(ТекСимвол)) Тогда
			ПозицииСлов.Добавить(ПозицияСимвола);
		КонецЕсли;
	КонецЦикла;
	
	Если ПозицииСлов.Количество() > 0 Тогда
		ПредыдущаяПозиция = 0;
		Для Каждого Позиция Из ПозицииСлов Цикл
			Если ПредыдущаяПозиция > 0 Тогда
				Подстрока = Сред(Строка, ПредыдущаяПозиция, Позиция - ПредыдущаяПозиция);
				Если Не ПустаяСтрока(Подстрока) Тогда
					МассивСлов.Добавить(СокрЛП(Подстрока));
                КонецЕсли;
            Иначе
                Подстрока = Лев(Строка,  Позиция - 1);
                Если Не ПустаяСтрока(Подстрока) Тогда
					МассивСлов.Добавить(СокрЛП(Подстрока));
                КонецЕсли;
			КонецЕсли;
			ПредыдущаяПозиция = Позиция;
		КонецЦикла;
		
		Подстрока = Сред(Строка, Позиция);
		Если Не ПустаяСтрока(Подстрока) Тогда
			МассивСлов.Добавить(СокрЛП(Подстрока));
		КонецЕсли;
	КонецЕсли;
	
	Для Индекс = 1 По МассивСлов.ВГраница() Цикл
		МассивСлов[Индекс] = НРег(МассивСлов[Индекс]);
	КонецЦикла;
	
	Если МассивСлов.Количество() <> 0 Тогда
		Результат = СтрСоединить(МассивСлов, " ");
	Иначе
		Результат = Строка;
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТолькоКириллицаВСтроке(Знач СтрокаПроверки, Знач УчитыватьРазделителиСлов = Истина, ДопустимыеСимволы = "") Экспорт
	
	Если ТипЗнч(СтрокаПроверки) <> Тип("Строка") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтрокаПроверки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	КодыДопустимыхСимволов = Новый Массив;
	КодыДопустимыхСимволов.Добавить(1105); // "ё"
	КодыДопустимыхСимволов.Добавить(1025); // "Ё"
	
	Для Индекс = 1 По СтрДлина(ДопустимыеСимволы) Цикл
		КодыДопустимыхСимволов.Добавить(КодСимвола(Сред(ДопустимыеСимволы, Индекс, 1)));
	КонецЦикла;
	
	Для Индекс = 1 По СтрДлина(СтрокаПроверки) Цикл
		КодСимвола = КодСимвола(Сред(СтрокаПроверки, Индекс, 1));
		Если ((КодСимвола < 1040) Или (КодСимвола > 1103)) 
			И (КодыДопустимыхСимволов.Найти(КодСимвола) = Неопределено) 
			И Не (Не УчитыватьРазделителиСлов И ЭтоРазделительСлов(КодСимвола)) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТолькоЛатиницаВСтроке(Знач СтрокаПроверки, Знач УчитыватьРазделителиСлов = Истина, ДопустимыеСимволы = "") Экспорт
	
	Если ТипЗнч(СтрокаПроверки) <> Тип("Строка") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтрокаПроверки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	КодыДопустимыхСимволов = Новый Массив;
	
	Для Индекс = 1 По СтрДлина(ДопустимыеСимволы) Цикл
		КодыДопустимыхСимволов.Добавить(КодСимвола(Сред(ДопустимыеСимволы, Индекс, 1)));
	КонецЦикла;
	
	Для Индекс = 1 По СтрДлина(СтрокаПроверки) Цикл
		КодСимвола = КодСимвола(Сред(СтрокаПроверки, Индекс, 1));
		Если ((КодСимвола < 65) Или (КодСимвола > 90 И КодСимвола < 97) Или (КодСимвола > 122))
			И (КодыДопустимыхСимволов.Найти(КодСимвола) = Неопределено) 
			И Не (Не УчитыватьРазделителиСлов И ЭтоРазделительСлов(КодСимвола)) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоРазделительСлов(КодСимвола, РазделителиСлов = Неопределено)
	
	Если РазделителиСлов <> Неопределено Тогда
		Возврат СтрНайти(РазделителиСлов, Символ(КодСимвола)) > 0;
	КонецЕсли;
		
	Диапазоны = Новый Массив;
	Диапазоны.Добавить(Новый Структура("Мин,Макс", 48, 57)); 		// цифры
	Диапазоны.Добавить(Новый Структура("Мин,Макс", 65, 90)); 		// латиница большие
	Диапазоны.Добавить(Новый Структура("Мин,Макс", 97, 122)); 		// латиница маленькие
	Диапазоны.Добавить(Новый Структура("Мин,Макс", 1040, 1103)); 	// кириллица
	Диапазоны.Добавить(Новый Структура("Мин,Макс", 1025, 1025)); 	// символ "Ё"
	Диапазоны.Добавить(Новый Структура("Мин,Макс", 1105, 1105)); 	// символ "ё"
	Диапазоны.Добавить(Новый Структура("Мин,Макс", 95, 95)); 		// символ "_"
	
	Для Каждого Диапазон Из Диапазоны Цикл
		Если КодСимвола >= Диапазон.Мин И КодСимвола <= Диапазон.Макс Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ПоискКлючевыхОперацийНаСервере()
    
    КлючевыеОперацииПрофиля = Объект.КлючевыеОперацииПрофиля.Выгрузить();
    
    КлючевыеОперацииПрофиляПолноеСоответствие = Новый ТаблицаЗначений;
    КлючевыеОперацииПрофиляПроцентСправа = Новый ТаблицаЗначений;
    КлючевыеОперацииПрофиляПроцентСлева = Новый ТаблицаЗначений;
    КлючевыеОперацииПрофиляПроцентСлеваСправа = Новый ТаблицаЗначений;
    
    СтрокиДляКопирования = Новый Массив;
    СтрокиДляКопирования.Добавить(КлючевыеОперацииПрофиля[0]);
    КлючевыеОперацииПрофиляПолноеСоответствие = КлючевыеОперацииПрофиля.Скопировать(СтрокиДляКопирования, "ИмяПредставление");
    КлючевыеОперацииПрофиляПолноеСоответствие.Очистить();
    КлючевыеОперацииПрофиляПолноеСоответствие.Колонки.Добавить("НомерСтрокиОсновнойТаблицы", Новый ОписаниеТипов("Число"));
    
    КлючевыеОперацииПрофиляПроцентСправа = КлючевыеОперацииПрофиляПолноеСоответствие.Скопировать();
    КлючевыеОперацииПрофиляПроцентСлева = КлючевыеОперацииПрофиляПолноеСоответствие.Скопировать();
    КлючевыеОперацииПрофиляПроцентСлеваСправа = КлючевыеОперацииПрофиляПолноеСоответствие.Скопировать();
    
    Для Каждого КлючеваяОперацияПрофиля Из КлючевыеОперацииПрофиля Цикл
        
        Если СтрНайти(КлючеваяОперацияПрофиля.ИмяПредставление, "%") = 0 Тогда
            НовСтрока = КлючевыеОперацииПрофиляПолноеСоответствие.Добавить(); 
        Иначе
            ПроцентСлева = СтрНачинаетсяС(КлючеваяОперацияПрофиля.ИмяПредставление, "%");
            ПроцентСправа = СтрЗаканчиваетсяНа(КлючеваяОперацияПрофиля.ИмяПредставление, "%");
            
            Если ПроцентСлева И ПроцентСправа Тогда
                НовСтрока = КлючевыеОперацииПрофиляПроцентСлеваСправа.Добавить();
            ИначеЕсли ПроцентСлева И НЕ ПроцентСправа Тогда
                НовСтрока = КлючевыеОперацииПрофиляПроцентСлева.Добавить();
            ИначеЕсли НЕ ПроцентСлева И ПроцентСправа Тогда
                НовСтрока = КлючевыеОперацииПрофиляПроцентСправа.Добавить();
            Иначе
                Продолжить;
            КонецЕсли;
        КонецЕсли;
        
        НовСтрока.ИмяПредставление = КлючеваяОперацияПрофиля.ИмяПредставление;
        НовСтрока.НомерСтрокиОсновнойТаблицы = КлючеваяОперацияПрофиля.НомерСтроки;
                
    КонецЦикла;
       
    
    Запрос = Новый Запрос;
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   НомерСтроки,
    |   Имя,
    |   ИмяПредставление,
    |   Важность,
    |   ЦелевоеВремя
    |ПОМЕСТИТЬ
    |   КлючевыеОперацииПрофиля
    |ИЗ
    |   &КлючевыеОперацииПрофиля КАК КлючевыеОперацииПрофиля
    |;
    |
    |ВЫБРАТЬ
    |   НомерСтрокиОсновнойТаблицы,
    |   ИмяПредставление
    |ПОМЕСТИТЬ
    |   КлючевыеОперацииПрофиляПолноеСоответствие
    |ИЗ
    |   &КлючевыеОперацииПрофиляПолноеСоответствие КАК КлючевыеОперацииПрофиляПолноеСоответствие
    |;
    |
    |ВЫБРАТЬ
    |   НомерСтрокиОсновнойТаблицы,
    |   ИмяПредставление
    |ПОМЕСТИТЬ
    |   КлючевыеОперацииПрофиляПроцентСправа
    |ИЗ
    |   &КлючевыеОперацииПрофиляПроцентСправа КАК КлючевыеОперацииПрофиляПроцентСправа
    |;
    |
    |ВЫБРАТЬ
    |   НомерСтрокиОсновнойТаблицы,
    |   ИмяПредставление
    |ПОМЕСТИТЬ
    |   КлючевыеОперацииПрофиляПроцентСлева
    |ИЗ
    |   &КлючевыеОперацииПрофиляПроцентСлева КАК КлючевыеОперацииПрофиляПроцентСлева
    |;
    |ВЫБРАТЬ
    |   НомерСтрокиОсновнойТаблицы,
    |   ИмяПредставление
    |ПОМЕСТИТЬ
    |   КлючевыеОперацииПрофиляПроцентСлеваСправа
    |ИЗ
    |   &КлючевыеОперацииПрофиляПроцентСлеваСправа КАК КлючевыеОперацииПрофиляПроцентСлеваСправа
    |;
    |
    |ВЫБРАТЬ
    |   КлючевыеОперацииПрофиля.НомерСтроки,
    |   КлючевыеОперацииПрофиля.Имя,
    |   КлючевыеОперацииПрофиля.ИмяПредставление,
    |   КлючевыеОперацииПрофиля.Важность,
    |   КлючевыеОперацииПрофиля.ЦелевоеВремя,
    |   ВЫБОР
    |       КОГДА НЕ КлючевыеОперации.Ссылка IS NULL ТОГДА КлючевыеОперации.Ссылка
    |       КОГДА НЕ КлючевыеОперацииПроцентСправа.Ссылка IS NULL ТОГДА КлючевыеОперацииПроцентСправа.Ссылка
    |       КОГДА НЕ КлючевыеОперацииПроцентСлева.Ссылка IS NULL ТОГДА КлючевыеОперацииПроцентСлева.Ссылка
    |       КОГДА НЕ КлючевыеОперацииПроцентСлеваСправа.Ссылка IS NULL ТОГДА КлючевыеОперацииПроцентСлеваСправа.Ссылка
    |   КОНЕЦ КАК КлючеваяОперация
    |ИЗ
    |   КлючевыеОперацииПрофиля КАК КлючевыеОперацииПрофиля
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   КлючевыеОперацииПрофиляПолноеСоответствие КАК КлючевыеОперацииПрофиляПолноеСоответствие
    |ПО
    |   КлючевыеОперацииПрофиляПолноеСоответствие.НомерСтрокиОсновнойТаблицы = КлючевыеОперацииПрофиля.НомерСтроки 
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   Справочник.КлючевыеОперацииЦентрМониторинга КАК КлючевыеОперации
    |ПО
    |   КлючевыеОперации.Наименование = КлючевыеОперацииПрофиляПолноеСоответствие.ИмяПредставление
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   КлючевыеОперацииПрофиляПроцентСправа КАК КлючевыеОперацииПрофиляПроцентСправа
    |ПО
    |   КлючевыеОперацииПрофиляПроцентСправа.НомерСтрокиОсновнойТаблицы = КлючевыеОперацииПрофиля.НомерСтроки
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   Справочник.КлючевыеОперацииЦентрМониторинга КАК КлючевыеОперацииПроцентСправа
    |ПО
    |   КлючевыеОперацииПроцентСправа.Наименование LIKE КлючевыеОперацииПрофиляПроцентСправа.ИмяПредставление
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   КлючевыеОперацииПрофиляПроцентСлева КАК КлючевыеОперацииПрофиляПроцентСлева
    |ПО
    |   КлючевыеОперацииПрофиляПроцентСлева.НомерСтрокиОсновнойТаблицы = КлючевыеОперацииПрофиля.НомерСтроки
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   Справочник.КлючевыеОперацииЦентрМониторинга КАК КлючевыеОперацииПроцентСлева
    |ПО
    |   КлючевыеОперацииПроцентСлева.Наименование LIKE КлючевыеОперацииПрофиляПроцентСлева.ИмяПредставление
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   КлючевыеОперацииПрофиляПроцентСлеваСправа КАК КлючевыеОперацииПрофиляПроцентСлеваСправа
    |ПО
    |   КлючевыеОперацииПрофиляПроцентСлеваСправа.НомерСтрокиОсновнойТаблицы = КлючевыеОперацииПрофиля.НомерСтроки
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   Справочник.КлючевыеОперацииЦентрМониторинга КАК КлючевыеОперацииПроцентСлеваСправа
    |ПО
    |   КлючевыеОперацииПроцентСлеваСправа.Наименование LIKE КлючевыеОперацииПрофиляПроцентСлеваСправа.ИмяПредставление
    |";
    
    Запрос.УстановитьПараметр("КлючевыеОперацииПрофиля", КлючевыеОперацииПрофиля); 
    Запрос.УстановитьПараметр("КлючевыеОперацииПрофиляПолноеСоответствие", КлючевыеОперацииПрофиляПолноеСоответствие);
    Запрос.УстановитьПараметр("КлючевыеОперацииПрофиляПроцентСправа", КлючевыеОперацииПрофиляПроцентСправа);
    Запрос.УстановитьПараметр("КлючевыеОперацииПрофиляПроцентСлева", КлючевыеОперацииПрофиляПроцентСлева);
    Запрос.УстановитьПараметр("КлючевыеОперацииПрофиляПроцентСлеваСправа", КлючевыеОперацииПрофиляПроцентСлеваСправа);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    //ПараметрыОтбора = Новый Структура("НомерСтроки", 0);
    Объект.КлючевыеОперацииПрофиля.Очистить();
    Пока Выборка.Следующий() Цикл
        НовСтрока = Объект.КлючевыеОперацииПрофиля.Добавить();
        НовСтрока.КлючеваяОперация = Выборка.КлючеваяОперация;
        НовСтрока.Имя = Выборка.Имя;
        //НовСтрока.ИмяПредставление = Выборка.ИмяПредставление;
        НовСтрока.ИмяПредставление = Выборка.КлючеваяОперация.Наименование;
        НовСтрока.Важность = Выборка.Важность;
        НовСтрока.ЦелевоеВремя = Выборка.ЦелевоеВремя;
        
        //ПараметрыОтбора.НомерСтроки = Выборка.НомерСтроки;
        //МассивСтрок = Объект.КлючевыеОперацииПрофиля.НайтиСтроки(ПараметрыОтбора);
        //Для Каждого ТекСтрока Из МассивСтрок Цикл
        //    ТекСтрока.КлючеваяОперация = Выборка.КлючеваяОперация;
        //КонецЦикла;
    КонецЦикла;
        
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПечатьТекущееСостояниеНаСервере(Ссылка)
    
    Запрос = Новый Запрос;
    Справочники.ПрофилиКлючевыхОпераций.ДобавитьВременнуюТаблицуКлючевыхОпераций(Ссылка, Запрос, "КлючевыеОперации");
    Запрос.Текст = Запрос.Текст + "
    |ВЫБРАТЬ
    |   *
    |ИЗ
    |   КлючевыеОперации
    |";
    
    Результат = Запрос.Выполнить();
    
КонецПроцедуры




#КонецОбласти
