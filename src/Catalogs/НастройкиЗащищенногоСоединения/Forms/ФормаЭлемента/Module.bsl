// Установить значения реквизитов формы на основе настроек соединения.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СертификатКлиента = СертификатКлиентаИзПеречисления(Объект.ВыбранныйКлиентскийСертификат);
	СертификатСервера = СертификатСервераИзПеречисления(Объект.ВыбранныйСерверныйСертификат);
	
КонецПроцедуры

// Проверка правильности заполнения настроек.
//
&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если СертификатКлиента = 1 Тогда
		Если Объект.ПарольФайлаСертификатаКлиента <> ПарольФайлаСертификатаКлиентаПодтверждение
		   И Объект.Ссылка.ПарольФайлаСертификатаКлиента <> Объект.ПарольФайлаСертификатаКлиента Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Не совпадают пароль и подтверждение пароля файла клиентского сертификата.'");
			Сообщение.Поле = "Объект.ПарольФайлаСертификатаКлиента";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если СертификатСервера = 1 Тогда
		Если Объект.ПарольФайлаСертификатаУдостоверяющегоЦентра <> ПарольФайлаСертификатаУдостоверяющегоЦентраПодтверждение
		   И Объект.Ссылка.ПарольФайлаСертификатаУдостоверяющегоЦентра <> Объект.ПарольФайлаСертификатаУдостоверяющегоЦентра Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Не совпадают пароль и подтверждение пароля файла сертификата удостоверяющего центра.'");
			Сообщение.Поле = "Объект.ПарольФайлаСертификатаУдостоверяющегоЦентра";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Установить доступность элементов формы при ее открытии.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриИзмененииВыбора();
	
КонецПроцедуры

// Установить доступность элементов формы.
//
&НаКлиенте
Процедура ПриИзмененииВыбора(Элемент = Неопределено)
	
	Элементы.ФайлСертификатаКлиента.Доступность = (СертификатКлиента = 1);
	Элементы.ФайлСертификатаКлиента.АвтоОтметкаНезаполненного = (СертификатКлиента = 1);
	Элементы.ПарольФайлаСертификатаКлиента.Доступность = (СертификатКлиента = 1);
	Элементы.ПарольФайлаСертификатаКлиентаПодтверждение.Доступность = (СертификатКлиента = 1);
	Элементы.СпособВыбораСертификатаКлиента.Доступность = (СертификатКлиента = 2);
	Элементы.СпособВыбораСертификатаКлиента.АвтоОтметкаНезаполненного = (СертификатКлиента = 2);
	Элементы.СерверныйФайл.Доступность = (СертификатКлиента <> 3);
	Элементы.СерверныйWindows.Доступность = (СертификатКлиента <> 3);
	Элементы.ФайлСертификатаУдостоверяющегоЦентра.Доступность = (СертификатСервера = 1);
	Элементы.ФайлСертификатаУдостоверяющегоЦентра.АвтоОтметкаНезаполненного = (СертификатСервера = 1);
	Элементы.ПарольФайлаСертификатаУдостоверяющегоЦентра.Доступность = (СертификатСервера = 1);
	Элементы.ПарольФайлаСертификатаУдостоверяющегоЦентраПодтверждение.Доступность = (СертификатСервера = 1);
	ПриИзмененииПароля();
			
	Объект.ВыбранныйКлиентскийСертификат = СертификатКлиентаИзКода(СертификатКлиента);
	Объект.ВыбранныйСерверныйСертификат = СертификатСервераИзКода(СертификатСервера);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПароля(Элемент = Неопределено)
	
	Элементы.ПарольФайлаСертификатаКлиента.АвтоОтметкаНезаполненного = (СертификатКлиента = 1 И Не ПустаяСтрока(ПарольФайлаСертификатаКлиентаПодтверждение));
	Элементы.ПарольФайлаСертификатаУдостоверяющегоЦентра.АвтоОтметкаНезаполненного = (СертификатСервера = 1 И Не ПустаяСтрока(ПарольФайлаСертификатаУдостоверяющегоЦентраПодтверждение));
	
КонецПроцедуры

// Открыть диалог выбора файла OpenSSL сертификата клиента при выборе на форме.
//
&НаКлиенте
Процедура ФайлСертификатаКлиентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьПодключениеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, "ФайлСертификатаКлиента");
	НачатьПодключениеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьПодключениеРасширенияРаботыСФайламиЗавершение(Подключено, ДополнительныеПараметры) Экспорт
	
	Если Подключено Тогда
		ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ОписаниеОповещения = Новый ОписаниеОповещения("ДиалогВыбораФайлаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДиалогВыбора.Показать(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		Объект[ДополнительныеПараметры] = ВыбранныеФайлы[0];
	КонецЕсли;
	
КонецПроцедуры

// Открыть диалог выбора файла OpenSSL сертификата сервера при выборе на форме.
//
&НаКлиенте
Процедура ФайлСертификатаУдостоверяющегоЦентраНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьПодключениеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, "ФайлСертификатаУдостоверяющегоЦентра");
	НачатьПодключениеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

// Получить код сертификата защищенного соединения для клиента по перечислению.
//
// Параметры:
//  Значение - ПеречислениеСсылка.ТипыСертификатаЗащищенногоСоединенияДляКлиента.
//
// Возвращаемое значение:
//  Число - кодовое представление типа, используемое на форме.
//
&НаСервере
Функция СертификатКлиентаИзПеречисления(Значение)
	
	Если Значение = Перечисления.ТипыСертификатаЗащищенногоСоединенияДляКлиента.Файл Тогда
		Возврат 1;
	ИначеЕсли Значение = Перечисления.ТипыСертификатаЗащищенногоСоединенияДляКлиента.Windows Тогда
		Возврат 2;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

// Получить код сертификата защищенного соединения для сервера по перечислению.
//
// Параметры:
//  Значение - ПеречислениеСсылка.ТипыСертификатаЗащищенногоСоединенияДляСервера.
//
// Возвращаемое значение:
//  Число - кодовое представление типа, используемое на форме.
//
&НаСервере
Функция СертификатСервераИзПеречисления(Значение)
	
	Если Значение = Перечисления.ТипыСертификатаЗащищенногоСоединенияДляСервера.Файл Тогда
		Возврат 1;
	ИначеЕсли Значение = Перечисления.ТипыСертификатаЗащищенногоСоединенияДляСервера.Windows Тогда
		Возврат 2;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

// Получить тип сертификата защищенного соединения для клиента по коду.
//
// Параметры:
//  Значение - Число, кодовое представление типа, используемое на форме.
//
// Возвращаемое значение:
//  ПеречислениеСсылка.ТипыСертификатаЗащищенногоСоединенияДляКлиента.
//
&НаСервере
Функция СертификатКлиентаИзКода(Значение)
	
	Если Значение = 1 Тогда
		Возврат Перечисления.ТипыСертификатаЗащищенногоСоединенияДляКлиента.Файл;
	ИначеЕсли Значение = 2 Тогда
		Возврат Перечисления.ТипыСертификатаЗащищенногоСоединенияДляКлиента.Windows;
	Иначе
		Возврат Перечисления.ТипыСертификатаЗащищенногоСоединенияДляКлиента.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

// Получить тип сертификата защищенного соединения для сервера по коду.
//
// Параметры:
//  Значение - Число, кодовое представление типа, используемое на форме.
//
// Возвращаемое значение:
//  ПеречислениеСсылка.ТипыСертификатаЗащищенногоСоединенияДляСервера.
//
&НаСервере
Функция СертификатСервераИзКода(Значение)
	
	Если Значение = 1 Тогда
		Возврат Перечисления.ТипыСертификатаЗащищенногоСоединенияДляСервера.Файл;
	ИначеЕсли Значение = 2 Тогда
		Возврат Перечисления.ТипыСертификатаЗащищенногоСоединенияДляСервера.Windows;
	Иначе
		Возврат Перечисления.ТипыСертификатаЗащищенногоСоединенияДляСервера.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции
