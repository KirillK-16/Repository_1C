////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Выборка = Общий.ВыборкаКластеров();
	ПервыйКластер = Истина;
	Пока Выборка.Следующий() Цикл
		
		Кластер = Выборка.Ссылка;
		Элементы.Кластер.СписокВыбора.Добавить(Кластер);
		
	КонецЦикла;
	
	Если Объект.Ссылка.Пустая() И Элементы.Кластер.СписокВыбора.Количество() > 0 Тогда
		
		Кластер = Элементы.Кластер.СписокВыбора[0].Значение;
		Объект.Кластер = Кластер;
		Объект.ВсеКластеры = Истина;
		
	КонецЕсли;
	
	НастроитьСписокИнформационныхБаз(ЗначениеЗаполнено(Объект.Ссылка));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НастроитьВидимостьКластеров();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ИнформационныеБазы.Очистить();
	Для Каждого СтрокаБазы Из СписокИнформационныхБаз Цикл
		Если СтрокаБазы.Выбрано Тогда
			СтрокаОбъекта = ТекущийОбъект.ИнформационныеБазы.Добавить();
			СтрокаОбъекта.ИнформационнаяБазаСсылка = СтрокаБазы.ИнформационнаяБаза;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрОповещения = МониторингСервер.ПараметрОповещенияПоказательЗаписан(ТекущийОбъект);
	ПараметрОповещения.Изменился = ОбъектИзменился();

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрОповещения.Ссылка = Объект.Ссылка;
	ПараметрОповещения.Описание = Объект.Описание;
	Оповестить("ПоказательЗаписан", ПараметрОповещения, ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КластерПриИзменении(Элемент)
	НастроитьСписокИнформационныхБаз();
КонецПроцедуры

&НаКлиенте
Процедура ВсеКластерыПриИзменении(Элемент)
	НастроитьВидимостьКластеров();
	НастроитьСписокИнформационныхБаз();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СписокИнформационныхБаз

&НаКлиенте
Процедура ВыбратьВсеБазы(Команда)
	ВыбратьВсеБазыСервер();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыборВсехБаз(Команда)
	ВыбратьВсеБазыСервер(Ложь);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура НастроитьВидимостьКластеров()
	ПоказыватьПоВсемКластерам = Объект.ВсеКластеры;
	Элементы.Кластер.Видимость = НЕ ПоказыватьПоВсемКластерам;
КонецПроцедуры

&НаСервере
Функция ОбъектИзменился()
	
	ИнформационныеБазыСсылка = Объект.Ссылка.ИнформационныеБазы;
	ВыбранныеБазы = ВыбранныеБазы();
	
	Если ВыбранныеБазы.Количество() <> ИнформационныеБазыСсылка.Количество() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для Каждого СтрокаБазы Из ИнформационныеБазыСсылка Цикл
		
		Если ВыбранныеБазы.Найти(СтрокаБазы.ИнформационнаяБазаСсылка) = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ВыбратьВсеБазыСервер(ЗначениеВыбора = Истина)
	ЧислоСтрок = СписокИнформационныхБаз.Количество();
	ИндексСтроки = 0;
	Пока ИндексСтроки < ЧислоСтрок Цикл
		СтрокаБазы = СписокИнформационныхБаз[ИндексСтроки];
		СтрокаБазы.Выбрано = ЗначениеВыбора;
		ИндексСтроки = ИндексСтроки + 1;
	КонецЦикла;
	ОбновитьСтроковоеПредставлениеБаз();
КонецПроцедуры

&НаКлиенте
Процедура СписокИнформационныхБазВыбраноПриИзменении(Элемент)
	ОбновитьСтроковоеПредставлениеБаз();
КонецПроцедуры

&НаСервере
Функция ВыбранныеБазы()
	Результат = Новый Массив;
	ЧислоСтрок = СписокИнформационныхБаз.Количество();
	ИндексСтроки = 0;
	Пока ИндексСтроки < ЧислоСтрок Цикл
		СтрокаБазы = СписокИнформационныхБаз[ИндексСтроки];
		Если СтрокаБазы.Выбрано Тогда
			Результат.Добавить(СтрокаБазы.ИнформационнаяБаза);
		КонецЕсли;
		ИндексСтроки = ИндексСтроки + 1;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Процедура НастроитьСписокИнформационныхБаз(СинхронизоватьВыбранныеИСохраненныеЗначения = Ложь)
	
	ИнформационныеБазыВСтроку = "";
	СписокИнформационныхБаз.Очистить();
	
	Если НЕ Объект.ВсеКластеры И Объект.Кластер.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидИнформационнаяБаза", Справочники.ВидыОбъектовКонтроля.ИнформационнаяБаза);
	ЗапросТекст = "ВЫБРАТЬ
	|	Базы.ОбъектКонтроля КАК База,
	|	Кластеры.ОбъектКонтроля КАК Кластер
	|ИЗ
	|	РегистрСведений.ПараметрыИнформационныхБаз КАК Базы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКластеров КАК Кластеры
	|		ПО Базы.Кластер = Кластеры.ОбъектКонтроля
	|ГДЕ
	|	Базы.ОбъектКонтроля.Владелец = &ВидИнформационнаяБаза %УсловиеНаКластер";
	
	Если НЕ Объект.ВсеКластеры И НЕ Объект.Кластер.Пустая() Тогда
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "%УсловиеНаКластер", " И  Кластеры.ОбъектКонтроля = &Кластер ");
		Запрос.УстановитьПараметр("Кластер", Объект.Кластер);
	Иначе
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "%УсловиеНаКластер", "");
	КонецЕсли;
	
	Запрос.Текст = ЗапросТекст;
	БазыВыборка = Запрос.Выполнить().Выбрать();
	
	ТекущиеБазыСсылка = Объект.ИнформационныеБазы;
	
	Пока БазыВыборка.Следующий() Цикл
		
		СтрокаБазы = СписокИнформационныхБаз.Добавить();
		БазаВыборки = БазыВыборка.База;
		КластерВыборки = БазыВыборка.Кластер;
		
		Если СинхронизоватьВыбранныеИСохраненныеЗначения Тогда
			ВыбранныеСтроки = ТекущиеБазыСсылка.НайтиСтроки(Новый Структура("ИнформационнаяБазаСсылка", БазаВыборки));
			Если ВыбранныеСтроки.Количество() > 0 Тогда
				СтрокаБазы.Выбрано = Истина;
				ИнформационныеБазыВСтроку = ИнформационныеБазыВСтроку + ";"
			КонецЕсли;
		Иначе
			СтрокаБазы.Выбрано = Истина;
		КонецЕсли;
		
		СтрокаБазы.ИнформационнаяБаза = БазаВыборки;
		СтрокаБазы.Кластер = КластерВыборки;
		
	КонецЦикла;
	ОбновитьСтроковоеПредставлениеБаз();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтроковоеПредставлениеБаз()
	ИнформационныеБазыВСтроку = "";
	ЧислоСтрок = СписокИнформационныхБаз.Количество();
	ИндексСтроки = 0;
	Пока ИндексСтроки < ЧислоСтрок Цикл
		СтрокаБазы = СписокИнформационныхБаз[ИндексСтроки];
		Если СтрокаБазы.Выбрано Тогда
			ИнформационныеБазыВСтроку = ИнформационныеБазыВСтроку + ";" + СтрокаБазы.ИнформационнаяБаза + ", " + СтрокаБазы.Кластер;
		КонецЕсли;
		ИндексСтроки = ИндексСтроки + 1;
	КонецЦикла;
	Если НЕ ПустаяСтрока(ИнформационныеБазыВСтроку) Тогда
		ИнформационныеБазыВСтроку = Прав(ИнформационныеБазыВСтроку, СтрДлина(ИнформационныеБазыВСтроку) - 1);
	КонецЕсли;
КонецПроцедуры

