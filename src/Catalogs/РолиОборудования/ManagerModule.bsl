#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

// Получает оборудование по выбранной роли.
//
// Параметры:
//  Ссылка - СправочникСсылка.РолиОборудования - роль получения оборудования.
//  Все    - Булево                            - если Истина, будут выбраны все, в том числе и
//                                               помеченные на удаление. Значение по умолчанию Ложь.
// Возвращаемое значение:
//  - Массив - массив СправочникСсылка.РабочиеСервера.
//
Функция ПолучитьОборудование(Ссылка, Все = Ложь) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   Оборудование.Ссылка
    |ИЗ
    |   Справочник.Оборудование КАК Оборудование
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   Справочник.Оборудование.РолиОборудования КАК РольСервера
    |ПО
    |   РольСервера.Ссылка = Оборудование.Ссылка
    |ГДЕ
    |   РольСервера.Роль = &Роль
    |   {И Оборудование.ПометкаУдаления}
    |УПОРЯДОЧИТЬ ПО
    |   Оборудование.Наименование
    |";
    
    Если Все Тогда
        Запрос.Текст = СтрЗаменить
        (
            Запрос.Текст,
            "{И Оборудование.ПометкаУдаления}",
            ""
        );
    Иначе
        Запрос.Текст = СтрЗаменить
        (
            Запрос.Текст,
            "{И Оборудование.ПометкаУдаления}",
            "И НЕ Оборудование.ПометкаУдаления"
        );
    КонецЕсли;
    
    Запрос.УстановитьПараметр("Роль", Ссылка);
    Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
    
    Возврат Результат;
    
КонецФункции

// Получает предопределенные счетчики производительности выбранной роли.
//
// Параметры:
//  Ссылка - СправочникСсылка.РолиРабочихСерверов - роль для получения счетчиков производительности. 
//
// Возвращаемое значение:
//  - Массив - массив СправочникСсылка.РабочиеСервера.
//
Функция ПолучитьСчетчикиПроизводительностиПредопределенного(Ссылка, СчетчикПроизводительностиПрименимо) Экспорт
    
    Счетчики = Справочники.СчетчикиПроизводительности.ПредопределенныеСчетчики(Ссылка, СчетчикПроизводительностиПрименимо);
	
	Возврат Счетчики;
    
КонецФункции

// Получает счетчики производительности выбранных ролей.
//
// Параметры:
//  РолиОборудования - Массив - массив элементов СправочникСсылка.РолиОборудования.
// Возвращаемое значение:
//  - Массив - массив структур с ключами
//             * СчетчикПроизводительности - СправочникСсылка.СчетчикПроизводительности.
//             * РольОборудования - СправочникСсылка.РолиОборудования.
//
Функция ПолучитьСчетчикиПроизводительности(РолиОборудования, Знач ТипОС = Неопределено) Экспорт
    
    Если ТипОС = Неопределено Тогда
        ТипОС = Перечисления.ТипОС.Windows;
    КонецЕсли;
    
    
    Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
    |   РолиОборудованияСчетчикиПроизводительности.СчетчикПроизводительности КАК СчетчикПроизводительности,
    |   РолиОборудованияСчетчикиПроизводительности.Ссылка КАК РольОборудования
	|ИЗ
	|	Справочник.РолиОборудования.СчетчикиПроизводительности%ТипОС% КАК РолиОборудованияСчетчикиПроизводительности
	|ГДЕ
	|	РолиОборудованияСчетчикиПроизводительности.Ссылка В (&РолиОборудования)
	|";
    
    Если ТипОС = Перечисления.ТипОС.Windows Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ТипОС%", "");
    ИначеЕсли ТипОС = Перечисления.ТипОС.Linux Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ТипОС%", "Linux");
    КонецЕсли;
    
	Запрос.УстановитьПараметр("РолиОборудования", РолиОборудования);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Счетчики = Новый Массив;
    Пока Выборка.Следующий() Цикл
        Счетчик = Новый Структура("СчетчикПроизводительности, РольОборудования", Выборка.СчетчикПроизводительности, Выборка.РольОборудования);
		Счетчики.Добавить(Счетчик);
	КонецЦикла;
	
	Возврат Счетчики;
    
КонецФункции

#КонецОбласти

#КонецЕсли