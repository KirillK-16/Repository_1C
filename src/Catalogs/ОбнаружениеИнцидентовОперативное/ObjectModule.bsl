#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПредопределенныеПроцедуры    
    
Процедура ПередЗаписью(Отказ)
    
    Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Ссылка) Тогда
        ЭтотОбъект.УстановитьСсылкуНового(Справочники.ОбнаружениеИнцидентовОперативное.ПолучитьСсылку());
    КонецЕсли;
        
    Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ТипИнцидента) Тогда
        ЭтотОбъект.ТипИнцидента = ПолучитьТипИнцидента();
    Иначе
        Если ЭтотОбъект.ТипИнцидента.Наименование <> ЭтотОбъект.Наименование Тогда
            ТипИнцидентаОбъект = ЭтотОбъект.ТипИнцидента.ПолучитьОбъект();
            ТипИнцидентаОбъект.Наименование = ЭтотОбъект.Наименование;
            ТипИнцидентаОбъект.Записать();
        КонецЕсли;
    КонецЕсли;
    
    Если ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателей.Счетчики Тогда
        ПередЗаписьюСчетчики();
    ИначеЕсли ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателей.ИспользованиеОперативнойПамятиПроцессами Тогда
        ПередЗаписьюИспользованиеОперативнойПамятиПроцессами();
    ИначеЕсли ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателей.ЧислоАварийноЗавершенныхПроцессов Тогда
        ПередЗаписьюЧислоАварийноЗавершенныхПроцессов();
    ИначеЕсли ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателей.ЧислоСеансов Тогда
        ПередЗаписьюЧислоСеансов();
    КонецЕсли;
        
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
    
    Если ТипПоказателя = Перечисления.ТипыПоказателей.Счетчики Тогда
        ПриЗаписиСчетчики();
    ИначеЕсли ТипПоказателя = Перечисления.ТипыПоказателей.ИспользованиеОперативнойПамятиПроцессами Тогда
        ПриЗаписиИспользованиеОперативнойПамятиПроцессами();
    ИначеЕсли ТипПоказателя = Перечисления.ТипыПоказателей.ЧислоАварийноЗавершенныхПроцессов Тогда
        ПриЗаписиЧислоАварийноЗавершенныхПроцессов();
    ИначеЕсли ТипПоказателя = Перечисления.ТипыПоказателей.ЧислоСеансов Тогда
        ПриЗаписиЧислоСеансов();
    КонецЕсли;
        
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
    
    ТипИнцидента = Неопределено;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПередЗаписью

Процедура ПередЗаписьюСчетчики()
    
    Для Каждого ТекСтрока Из Счетчики Цикл
        
        Если ЗначениеЗаполнено(ЭтотОбъект.Ссылка) Тогда
            СсылкаСтрока = Строка(ЭтотОбъект.Ссылка.УникальныйИдентификатор());
        Иначе
            СсылкаСтрока = Строка(ЭтотОбъект.ПолучитьСсылкуНового().УникальныйИдентификатор());
        КонецЕсли;
        
        Данные = СсылкаСтрока + Строка(ТекСтрока.Счетчик.УникальныйИдентификатор());
        ТекСтрока.ХешИнцидента = Справочники.Инциденты.ХешИнцидента(Данные);
        
    КонецЦикла;
    
    УдалитьОбщая(ИспользованиеОперативнойПамятиПроцессами);
    УдалитьОбщая(ЧислоАварийноЗавершенныхПроцессов);
    УдалитьОбщая(ЧислоСеансов);    
    
КонецПроцедуры

Процедура ПередЗаписьюИспользованиеОперативнойПамятиПроцессами()
    
    Для Каждого ТекСтрока Из ИспользованиеОперативнойПамятиПроцессами Цикл
        
        Если ЗначениеЗаполнено(ЭтотОбъект.Ссылка) Тогда
            СсылкаСтрока = Строка(ЭтотОбъект.Ссылка.УникальныйИдентификатор());
        Иначе
            СсылкаСтрока = Строка(ЭтотОбъект.ПолучитьСсылкуНового().УникальныйИдентификатор());
        КонецЕсли;
        
        Если ЭтотОбъект.ВариантТипаПоказателя = 0 Тогда
            Данные = СсылкаСтрока + Строка(ТекСтрока.Кластер1С.УникальныйИдентификатор());
        ИначеЕсли ЭтотОбъект.ВариантТипаПоказателя = 1 ИЛИ ЭтотОбъект.ВариантТипаПоказателя = 2 Тогда
            Данные = СсылкаСтрока + Строка(ТекСтрока.Кластер1С.УникальныйИдентификатор()) + Строка(ТекСтрока.РабочийСервер1С.УникальныйИдентификатор());
        КонецЕсли;
        ТекСтрока.ХешИнцидента = Справочники.Инциденты.ХешИнцидента(Данные);
        
    КонецЦикла;
    
    УдалитьОбщая(Счетчики);
    УдалитьОбщая(ЧислоАварийноЗавершенныхПроцессов);
    УдалитьОбщая(ЧислоСеансов);
    
КонецПроцедуры

Процедура ПередЗаписьюЧислоАварийноЗавершенныхПроцессов()
    
    Для Каждого ТекСтрока Из ЧислоАварийноЗавершенныхПроцессов Цикл
        
        Если ЗначениеЗаполнено(ЭтотОбъект.Ссылка) Тогда
            СсылкаСтрока = Строка(ЭтотОбъект.Ссылка.УникальныйИдентификатор());
        Иначе
            СсылкаСтрока = Строка(ЭтотОбъект.ПолучитьСсылкуНового().УникальныйИдентификатор());
        КонецЕсли;
        
        Данные = СсылкаСтрока + Строка(ТекСтрока.РабочийСервер.УникальныйИдентификатор());
        ТекСтрока.ХешИнцидента = Справочники.Инциденты.ХешИнцидента(Данные);
        
    КонецЦикла;
    
    УдалитьОбщая(Счетчики);
    УдалитьОбщая(ИспользованиеОперативнойПамятиПроцессами);
    УдалитьОбщая(ЧислоСеансов);
    
КонецПроцедуры

Процедура ПередЗаписьюЧислоСеансов()
    
    Для Каждого ТекСтрока Из ЧислоСеансов Цикл
        
        Если ЗначениеЗаполнено(ЭтотОбъект.Ссылка) Тогда
            СсылкаСтрока = Строка(ЭтотОбъект.Ссылка.УникальныйИдентификатор());
        Иначе
            СсылкаСтрока = Строка(ЭтотОбъект.ПолучитьСсылкуНового().УникальныйИдентификатор());
        КонецЕсли;
        
        Если ВариантТипаПоказателя = 0 Тогда
            Данные = СсылкаСтрока + Строка(ТекСтрока.Кластер.УникальныйИдентификатор());
        ИначеЕсли ВариантТипаПоказателя = 1 Тогда
            Данные = СсылкаСтрока + Строка(ТекСтрока.Кластер.УникальныйИдентификатор()) + Строка(ТекСтрока.ИнформационнаяБаза.УникальныйИдентификатор());
        ИначеЕсли ВариантТипаПоказателя = 2 Тогда
            Данные = СсылкаСтрока + Строка(ТекСтрока.Кластер.УникальныйИдентификатор()) + Строка(ТекСтрока.ИнформационнаяБаза.УникальныйИдентификатор()) + Строка(ТекСтрока.ВидПриложения);
        КонецЕсли;
        
        ТекСтрока.ХешИнцидента = Справочники.Инциденты.ХешИнцидента(Данные);
        
    КонецЦикла;
    
    УдалитьОбщая(Счетчики);
    УдалитьОбщая(ИспользованиеОперативнойПамятиПроцессами);
    УдалитьОбщая(ЧислоАварийноЗавершенныхПроцессов);
    
КонецПроцедуры

#КонецОбласти

#Область ПриЗаписи

Процедура ПриЗаписиСчетчики()
    
    ХешиИнцидентов = Новый ТаблицаЗначений;
    ХешиИнцидентов.Колонки.Добавить("ХешИнцидента", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(64)));
    ХешиИнцидентов.Колонки.Добавить("Описание", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150)));
    
    Для Каждого ТекСтрока Из Счетчики Цикл
        НовСтрока = ХешиИнцидентов.Добавить();
        НовСтрока.ХешИнцидента = ТекСтрока.ХешИнцидента;
        НовСтрока.Описание = ТекСтрока.Описание;
    КонецЦикла;
    
    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
    
    СоздатьКодыИнцидентов(Запрос, ХешиИнцидентов);
    СоздатьАвтоИнциденты(Запрос);
        
КонецПроцедуры

Процедура ПриЗаписиИспользованиеОперативнойПамятиПроцессами()
    
    ХешиИнцидентов = Новый ТаблицаЗначений;
    ХешиИнцидентов.Колонки.Добавить("ХешИнцидента", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(64)));
    ХешиИнцидентов.Колонки.Добавить("Описание", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150)));
    
    Для Каждого ТекСтрока Из ИспользованиеОперативнойПамятиПроцессами Цикл
        НовСтрока = ХешиИнцидентов.Добавить();
        НовСтрока.ХешИнцидента = ТекСтрока.ХешИнцидента;
        НовСтрока.Описание = ТекСтрока.Описание;
    КонецЦикла;
    
    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
    
    СоздатьКодыИнцидентов(Запрос, ХешиИнцидентов);
    СоздатьАвтоИнциденты(Запрос);
    
КонецПроцедуры

Процедура ПриЗаписиЧислоАварийноЗавершенныхПроцессов()
    
    ХешиИнцидентов = Новый ТаблицаЗначений;
    ХешиИнцидентов.Колонки.Добавить("ХешИнцидента", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(64)));
    ХешиИнцидентов.Колонки.Добавить("Описание", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150)));
    
    Для Каждого ТекСтрока Из ЧислоАварийноЗавершенныхПроцессов Цикл
        НовСтрока = ХешиИнцидентов.Добавить();
        НовСтрока.ХешИнцидента = ТекСтрока.ХешИнцидента;
        НовСтрока.Описание = ТекСтрока.Описание;
    КонецЦикла;
    
    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
    
    СоздатьКодыИнцидентов(Запрос, ХешиИнцидентов);
    СоздатьАвтоИнциденты(Запрос);
    
КонецПроцедуры

Процедура ПриЗаписиЧислоСеансов()
    
    ХешиИнцидентов = Новый ТаблицаЗначений;
    ХешиИнцидентов.Колонки.Добавить("ХешИнцидента", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(64)));
    ХешиИнцидентов.Колонки.Добавить("Описание", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150)));
    
    Для Каждого ТекСтрока Из ЧислоСеансов Цикл
        НовСтрока = ХешиИнцидентов.Добавить();
        НовСтрока.ХешИнцидента = ТекСтрока.ХешИнцидента;
        НовСтрока.Описание = ТекСтрока.Описание;
    КонецЦикла;
    
    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
    
    СоздатьКодыИнцидентов(Запрос, ХешиИнцидентов);
    СоздатьАвтоИнциденты(Запрос);
    
КонецПроцедуры

#КонецОбласти

Процедура СоздатьКодыИнцидентов(Запрос, ХешиИнцидентов)
        
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   ХешИнцидента,
    |   Описание
    |ПОМЕСТИТЬ
    |   ХешиИнцидентов
    |ИЗ
    |   &ХешиИнцидентов КАК ХешиИнцидентов
    |ИНДЕКСИРОВАТЬ ПО
    |   ХешИнцидента
    |;
    |ВЫБРАТЬ
    |   Инциденты.Ссылка,
    |   ХешиИнцидентов.ХешИнцидента,
    |   ХешиИнцидентов.Описание
    |ИЗ
    |   ХешиИнцидентов КАК ХешиИнцидентов
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   Справочник.Инциденты КАК Инциденты
    |ПО
    |   Инциденты.ХешИнцидента = ХешиИнцидентов.ХешИнцидента
    |ГДЕ
    |   Инциденты.Ссылка IS NULL
    |   ИЛИ ХешиИнцидентов.Описание <> Инциденты.Наименование 
    |;";
    
    Запрос.УстановитьПараметр("ХешиИнцидентов", ХешиИнцидентов);
    
    Результат = Запрос.Выполнить();
    
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        
        Если НЕ ЗначениеЗаполнено(Выборка.Ссылка) Тогда
            Справочники.Инциденты.СоздатьЭлементПоХешу(Выборка.ХешИнцидента, Выборка.Описание);
        Иначе
            СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
            СпрОбъект.Наименование = Выборка.Описание;
            СпрОбъект.Записать();
        КонецЕсли;
        
    КонецЦикла;
    
КонецПроцедуры

Процедура СоздатьАвтоИнциденты(Запрос)
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   Инциденты.Ссылка КАК Инцидент,
    |   &ТипИнцидента КАК ТипИнцидента
    |ИЗ
    |   ХешиИнцидентов КАК ХешиИнцидентов
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   Справочник.Инциденты КАК Инциденты
    |ПО
    |   Инциденты.ХешИнцидента = ХешиИнцидентов.ХешИнцидента
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   РегистрСведений.Инциденты КАК СостоянияИнцидентов
    |ПО
    |   СостоянияИнцидентов.Инцидент = Инциденты.Ссылка
    |   И СостоянияИнцидентов.ТипИнцидента = &ТипИнцидента
    |ГДЕ
    |   СостоянияИнцидентов.Инцидент IS NULL
    |";
    
    Запрос.УстановитьПараметр("ТипИнцидента", ЭтотОбъект.ТипИнцидента);
    
    Результат = Запрос.Выполнить();
    
    ТекДата = ТекущаяДата();
    
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        
        МенеджерЗаписи = РегистрыСведений.Инциденты.СоздатьМенеджерЗаписи();
        МенеджерЗаписи.Инцидент = Выборка.Инцидент;
        МенеджерЗаписи.ТипИнцидента = Выборка.ТипИнцидента;
        МенеджерЗаписи.ПоследнееСрабатывание = ТекДата;
        МенеджерЗаписи.Статус = Перечисления.СтатусыИнцидентов.Закрыто;
        МенеджерЗаписи.ПодробноеСообщение = "Создан автоматически при записи оперативного обнаружения.";
        МенеджерЗаписи.УровеньИнцидента = Перечисления.УровниИнцидентов.Информация;
        МенеджерЗаписи.ИсточникИнцидента = ЭтотОбъект.Ссылка;
        МенеджерЗаписи.Записать(Истина);
        
    КонецЦикла;
    
КонецПроцедуры

Функция ПолучитьТипИнцидента()
    
    Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Ссылка) Тогда
        СсылкаСтрока = Строка(ЭтотОбъект.ПолучитьСсылкуНового());
    Иначе
        СсылкаСтрока = Строка(ЭтотОбъект.Ссылка);
    КонецЕсли;
    
    Данные = СсылкаСтрока;
    ХешТипа = Справочники.Инциденты.ХешИнцидента(Данные);
    
    Возврат Справочники.ТипыИнцидентов.СоздатьЭлементПоХешу(ХешТипа, ЭтотОбъект.Наименование, Перечисления.УровниИнцидентов.Ошибка);
        
КонецФункции

Процедура УдалитьОбщая(Данные)
    
    Для Каждого ТекДанные Из Данные Цикл
        
        ПараметрыОтбора = Новый Структура("УникальныйИдентификаторСтроки", ТекДанные.УникальныйИдентификаторСтроки);
        Строки = ПараметрыОбнаружения.НайтиСтроки(ПараметрыОтбора);
        Для Каждого ТекСтрока Из Строки Цикл
            ПараметрыОбнаружения.Удалить(ТекСтрока);
        КонецЦикла;
        
    КонецЦикла;
    
    Данные.Очистить();
    
КонецПроцедуры

#КонецОбласти

#КонецЕсли
