
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОбъектМетодика = Объект.Ссылка.ПолучитьОбъект();
		Для Каждого СтрокаФайл Из ОбъектМетодика.Файлы Цикл
			
			ДвоичныеДанные = СтрокаФайл.Файл.Получить();
			АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор(СтрокаФайл.Идентификатор));
	
			НоваяСтрока = ЛокальныеФайлы.Добавить();
			НоваяСтрока.Идентификатор = СтрокаФайл.Идентификатор;
			НоваяСтрока.АдресВременногоХранилища = АдресВременногоХранилища;
			НоваяСтрока.ИмяФайла = СтрокаФайл.ИмяФайла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Идентификатор) Тогда
		Объект.Идентификатор = Строка(Новый УникальныйИдентификатор())
	КонецЕсли;
	
	ЗаполнитьПрименение();
	
	УправлениеДиалогом(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьФайлыКлиент();
	ОбновитьТекстМетодикиСервер();

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Для Каждого СтрокаФайл Из ТекущийОбъект.Файлы Цикл
		
		МассивНайденныхСтрок = ЛокальныеФайлы.НайтиСтроки(Новый Структура("Идентификатор", СтрокаФайл.Идентификатор));
		Если МассивНайденныхСтрок.Количество() > 0 Тогда
			
			ДвоичныеДанные = ПолучитьИзВременногоХранилища(МассивНайденныхСтрок[0].АдресВременногоХранилища);
			СтрокаФайл.Файл = Новый ХранилищеЗначения(ДвоичныеДанные);
			СтрокаФайл.ИмяФайла = МассивНайденныхСтрок[0].ИмяФайла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекущийОбъект.Применение.Очистить();
	Для Каждого СтрокаПрименение Из ТаблицаПрименения Цикл
		
		Если СтрокаПрименение.Выбран Тогда
			
			НоваяСтрока = ТекущийОбъект.Применение.Добавить();
			НоваяСтрока.ОбъектПрименения = СтрокаПрименение.ОбъектПрименения;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Редактировать(Команда)
	
	РежимИзменения = НЕ РежимИзменения;
	
	УправлениеДиалогом(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьHTMLНаДиск(Команда)
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
    ДиалогВыбора.Заголовок = "Сохранить описание методике в виде html";
    ДиалогВыбора.Фильтр = "Файлы html (*.html)|*.html";
	ДиалогВыбора.МножественныйВыбор = Ложь;
    
    ОписаниеОповещения = Новый ОписаниеОповещения("ДиалогСохраненияHTMLФайлаЗавершение", ЭтаФорма, Неопределено);
	ДиалогВыбора.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьHTMLСДиска(Команда)
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогВыбора.Заголовок = "Открыть описание методики в виде html";
    ДиалогВыбора.Фильтр = "Файлы html (*.html)|*.html|Файлы htm (*.html|*.htm| Все файлы (*.*)|*.*";
	ДиалогВыбора.МножественныйВыбор = Ложь;
    
    ОписаниеОповещения = Новый ОписаниеОповещения("ДиалогВыбораHTMLФайлаЗавершение", ЭтаФорма, Неопределено);
	ДиалогВыбора.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФайлСДиска(Команда)
	
	Если Элементы.Файлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогВыбора.Заголовок = "Открыть файл";
    ДиалогВыбора.Фильтр = "Все файлы (*.*)|*.*";
	ДиалогВыбора.МножественныйВыбор = Ложь;
    
    ОписаниеОповещения = Новый ОписаниеОповещения("ДиалогВыбораФайлаЗавершение", ЭтаФорма, Неопределено);
	ДиалогВыбора.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьФайлНаДиск(Команда)
	
	Если Элементы.Файлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивНайденныхСтрок = ЛокальныеФайлы.НайтиСтроки(Новый Структура("Идентификатор", Элементы.Файлы.ТекущиеДанные.Идентификатор));
	Если МассивНайденныхСтрок.Количество() > 0 Тогда
		
		ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	    ДиалогВыбора.Заголовок = "Сохранить файл";
	    ДиалогВыбора.Фильтр = "Все файлы *.*|*.*";
		ДиалогВыбора.МножественныйВыбор = Ложь;
		ДиалогВыбора.ПолноеИмяФайла = Элементы.Файлы.ТекущиеДанные.ИмяФайла;
	    
	    ОписаниеОповещения = Новый ОписаниеОповещения("ДиалогСохраненияФайлаЗавершение", ЭтаФорма, Неопределено);
		ДиалогВыбора.Показать(ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	Если Модифицированность ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка отправки: Методика не записана.");
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОтправитьМетодикуЗавершение", ЭтаФорма, Неопределено);
	ФормаЛицензионногоДоговора = ОткрытьФорму("Справочник.Методики.Форма.ЛицензионныйДоговорВопрос", , ЭтаФорма, , , , Оповещение);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиОповещений

&НаКлиенте
Процедура ЗавершениеНачатьЗапускПриложения(КодВозврата, ДополнительныеПараметры) Экспорт
    
    // Данный код нужен для обхода поиска пустых обработчиков при проверке конфигурации
    Если Истина = Ложь Тогда
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ТекстМетодикиЗакрытиеЗавершение(СтруктураПараметров) Экспорт
    
	ПоказатьПредупреждение(Неопределено, "Файл сохранен: " + СтруктураПараметров.ИмяФайла, 30);

КонецПроцедуры

&НаКлиенте
Процедура ТекстМетодикиЗаписьСтрокиЗавершение(СтруктураПараметров) Экспорт
	
	ОповещениеЗакрытие = Новый ОписаниеОповещения("ТекстМетодикиЗакрытиеЗавершение", ЭтаФорма, СтруктураПараметров);
	СтруктураПараметров.ЗаписьДанных.НачатьЗакрытие(ОповещениеЗакрытие);
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено ИЛИ ВыбранныеФайлы.Количество() = 0 ИЛИ Элементы.Файлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ВыбранныеФайлы[0]);
	Идентификатор = Элементы.Файлы.ТекущиеДанные.Идентификатор;
	
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор(Идентификатор));
	
	МассивНайденныхСтрок = ЛокальныеФайлы.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
	
	Файл = Новый Файл(ВыбранныеФайлы[0]);
	Элементы.Файлы.ТекущиеДанные.ИмяФайла = Файл.Имя;
	
	Если МассивНайденныхСтрок.Количество() > 0 Тогда
		МассивНайденныхСтрок[0].АдресВременногоХранилища = АдресВременногоХранилища;
		МассивНайденныхСтрок[0].ИмяФайла = Файл.Имя;
	Иначе
		НоваяСтрока = ЛокальныеФайлы.Добавить();
		НоваяСтрока.Идентификатор = Идентификатор;
		НоваяСтрока.АдресВременногоХранилища = АдресВременногоХранилища;
		НоваяСтрока.ИмяФайла = Файл.Имя;
	КонецЕсли;
	
	ОбновитьФайлыКлиент();
	ОбновитьТекстМетодикиСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогСохраненияHTMLФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено ИЛИ ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьДанных = Новый ЗаписьДанных(ВыбранныеФайлы[0], КодировкаТекста.UTF8);
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("ЗаписьДанных", ЗаписьДанных);
	СтруктураПараметров.Вставить("ИмяФайла", ВыбранныеФайлы[0]);
	
	ОповещениеЗаписьСтроки = Новый ОписаниеОповещения("ТекстМетодикиЗаписьСтрокиЗавершение", ЭтаФорма, СтруктураПараметров);
	ЗаписьДанных.НачатьЗаписьСтроки(ОповещениеЗаписьСтроки, Объект.ТекстМетодикиHTML, КодировкаТекста.UTF8);
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораHTMLФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено ИЛИ ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ВыбранныеФайлы[0]);
	
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	УстановитьТекстМетодикиСервер(АдресВременногоХранилища);
	УдалитьИзВременногоХранилища(АдресВременногоХранилища);
	
	ОбновитьТекстМетодикиСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогСохраненияФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено ИЛИ ВыбранныеФайлы.Количество() = 0 ИЛИ Элементы.Файлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивНайденныхСтрок = ЛокальныеФайлы.НайтиСтроки(Новый Структура("Идентификатор", Элементы.Файлы.ТекущиеДанные.Идентификатор));
	Если МассивНайденныхСтрок.Количество() > 0 Тогда
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(МассивНайденныхСтрок[0].АдресВременногоХранилища);
		ДвоичныеДанные.Записать(ВыбранныеФайлы[0]);
		
	КонецЕсли;
	
	ПоказатьПредупреждение(Неопределено, "Файл сохранен: " + ВыбранныеФайлы[0], 30);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьМетодикуЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Если КодВозврата <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтправитьСервер() Тогда
		ПоказатьОповещениеПользователя("Методика отправлена для согласования");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	НоваяСтрока = Объект.Файлы.Добавить();
	НоваяСтрока.Идентификатор = Новый УникальныйИдентификатор();
	
	Элементы.Файлы.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	
	ОбновитьФайлСДиска(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПослеУдаления(Элемент)
	
	ОбновитьФайлыКлиент();
	ОбновитьТекстМетодикиСервер();

КонецПроцедуры

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.Файлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивНайденныхСтрок = ЛокальныеФайлы.НайтиСтроки(Новый Структура("Идентификатор", Элементы.Файлы.ТекущиеДанные.Идентификатор));
	Если МассивНайденныхСтрок.Количество() > 0 Тогда
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(МассивНайденныхСтрок[0].АдресВременногоХранилища);
		ДвоичныеДанные.Записать(МассивНайденныхСтрок[0].ПутьКФайлу);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеНачатьЗапускПриложения", ЭтотОбъект);
		НачатьЗапускПриложения(ОписаниеОповещения, МассивНайденныхСтрок[0].ПутьКФайлу);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДиалогом(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.Редактировать.Пометка = Форма.РежимИзменения;
	Элементы.ГруппаКоманднаяПанельHTML.Видимость = Форма.РежимИзменения;
	Элементы.ГруппаИзображения.Видимость = Форма.РежимИзменения;
	Элементы.ТаблицаПрименения.ТолькоПросмотр = НЕ Форма.РежимИзменения;
	
	Элементы.Автор.ТолькоПросмотр = НЕ Форма.РежимИзменения ИЛИ ЗначениеЗаполнено(Объект.Одобрено);
	
	Элементы.Редактировать.Доступность = НЕ ЗначениеЗаполнено(Объект.Одобрено);
	Элементы.Отправить.Доступность = НЕ ЗначениеЗаполнено(Объект.Одобрено);

КонецПроцедуры

&НаСервере
Процедура ОбновитьТекстМетодикиСервер()
	
	ТекстHTML = ПолучитьТекстHTML();
	
	Для Каждого СтрокаФайл Из ЛокальныеФайлы Цикл
		ТекстHTML = СтрЗаменить(ТекстHTML, "[" + СтрокаФайл.Идентификатор + "]", "file:///" + СтрЗаменить(СтрокаФайл.ПутьКФайлу, "\", "/"));
	КонецЦикла;
	
	ПолеHTML = ТекстHTML;

КонецПроцедуры

&НаСервере
Функция ПолучитьТекстHTML()
	
	ТекстHTML = Объект.ТекстМетодикиHTML;
	
	Если НЕ ЗначениеЗаполнено(ТекстHTML) Тогда
		МакетПустойМетодики = Справочники.Методики.ПолучитьМакет("ОписаниеСозданияМетодик");
		ТекстHTML = МакетПустойМетодики.ПолучитьТекст();
	КонецЕсли;
	
	Возврат ТекстHTML;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьФайлыКлиент()
	
	Для Каждого СтрокаФайл Из ЛокальныеФайлы Цикл
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(СтрокаФайл.АдресВременногоХранилища);
		Если ДвоичныеДанные <> Неопределено Тогда
			
			СтрокаФайл.ПутьКФайлу = КаталогВременныхФайлов() + СтрокаФайл.ИмяФайла;
			ДвоичныеДанные.Записать(СтрокаФайл.ПутьКФайлу);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПрименение()
	
	СтруктураПоиска = Новый Структура("ОбъектПрименения");
	
	МассивРолей = Новый Массив();
	МассивРолей.Добавить(Перечисления.ТипЭлементаПлощадки.MSSQL);
	МассивРолей.Добавить(Перечисления.ТипЭлементаПлощадки.PostgreSQL);
	МассивРолей.Добавить(Перечисления.ТипЭлементаПлощадки.VMware);
	МассивРолей.Добавить(Перечисления.ТипЭлементаПлощадки.ВебСерверApache);
	МассивРолей.Добавить(Перечисления.ТипЭлементаПлощадки.ВебСерверIIS);
	МассивРолей.Добавить(Перечисления.ТипЭлементаПлощадки.ИнформационнаяБаза);
	МассивРолей.Добавить(Перечисления.ТипЭлементаПлощадки.Кластер1С);
	МассивРолей.Добавить(Перечисления.ТипЭлементаПлощадки.Публикация);
	МассивРолей.Добавить(Перечисления.ТипЭлементаПлощадки.РабочийСерверКластера1С);
	МассивРолей.Добавить(Перечисления.ТипЭлементаПлощадки.ТерминальныйСервер);
	МассивРолей.Добавить(Перечисления.ТипЭлементаПлощадки.Шлюз);
	
	Для Каждого РольОборудования Из МассивРолей Цикл
		
		НоваяСтрока = ТаблицаПрименения.Добавить();
		НоваяСтрока.ОбъектПрименения = РольОборудования;
		НоваяСтрока.Представление = Строка(РольОборудования);
		СтруктураПоиска.ОбъектПрименения = НоваяСтрока.ОбъектПрименения;
		НоваяСтрока.Выбран = (Объект.Применение.НайтиСтроки(СтруктураПоиска).Количество() > 0);
		
	КонецЦикла;
	
	ТаблицаПрименения.Сортировать("Представление");
	
КонецПроцедуры

&НаСервере
Функция ОтправитьНаВебСервис(ИмяZip)
	
	Прокси = МетодикиСервер.ПолучитьПроксиСервисаМетодик();
	Если Прокси = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяZip);
	Хранилище = Новый ХранилищеЗначения(ДвоичныеДанные);
	
	Попытка
		ТекстОшибки = Прокси.put(Хранилище); 
		
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка отправки данных на веб-сервис: " + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ОтправитьСервер()
	
	ИмяZip = "";
	ОписаниеОшибки = "";
	
	Попытка
		ИмяZip = Справочники.Методики.СформироватьАрхивМетодики(Объект.Ссылка);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Если НЕ ЗначениеЗаполнено(ИмяZip) Тогда
		ИмяZip = "";
	КонецЕсли;
	
	ФайлZIP = Новый Файл(ИмяZip);
	Если НЕ ФайлZIP.Существует() ИЛИ ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка создания архива методики: " + ОписаниеОшибки);
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ОтправитьНаВебСервис(ИмяZip) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка отправки методики!");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура УстановитьТекстМетодикиСервер(АдресВременногоХранилища)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	Если ДвоичныеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайла = ПолучитьИмяВременногоФайла(".txt");
	ДвоичныеДанные.Записать(ИмяФайла);
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.Прочитать(ИмяФайла, КодировкаТекста.UTF8);
	
	Объект.ТекстМетодикиHTML = ТекстовыйДокумент.ПолучитьТекст();
	
	УдалитьФайлы(ИмяФайла);
	
КонецПроцедуры

#КонецОбласти