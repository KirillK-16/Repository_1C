#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Функция ПолучитьПорядковыйНомер(ПредопределенныйСсылка) Экспорт
	НачатьТранзакцию();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ПорядковыеНомераДанных");
	ЭлементБлокировки.УстановитьЗначение("Ссылка", ПредопределенныйСсылка);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПорядковыеНомераДанных.ПорядковыйНомер КАК ТекущийНомер
	|ИЗ
	|	Справочник.ПорядковыеНомераДанных КАК ПорядковыеНомераДанных
	|ГДЕ
	|	ПорядковыеНомераДанных.Ссылка = &Ссылка
	|";
	
	Запрос.УстановитьПараметр("Ссылка", ПредопределенныйСсылка);
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ТекущийНомер = Выборка.ТекущийНомер;
	Иначе
		ЗаписьЖурналаРегистрации("Получение порядкового номера данных", УровеньЖурналаРегистрации.Ошибка, ПредопределенныйСсылка);
		ТекущийНомер = -1;
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	Возврат ТекущийНомер;
КонецФункции

Функция УстановитьСледующийНомер(ПредопределенныйСсылка) Экспорт
	НачатьТранзакцию();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ПорядковыеНомераДанных");
	ЭлементБлокировки.УстановитьЗначение("Ссылка", ПредопределенныйСсылка);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	СправочникОбъект = ПредопределенныйСсылка.ПолучитьОбъект();
	ТекущийНомер = СправочникОбъект.ПорядковыйНомер;
	СправочникОбъект.ПорядковыйНомер = ТекущийНомер + 1;
	СправочникОбъект.Записать();
	
	ЗафиксироватьТранзакцию();
	
	Возврат ТекущийНомер;
КонецФункции

#КонецЕсли
