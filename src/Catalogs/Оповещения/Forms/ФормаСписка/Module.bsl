
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьСписокПоказателей" Тогда
		ЭтотОбъект.ОбновитьОтображениеДанных();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗапуститьВыбранное(Команда)
	ВыбранныеОповещения = ЭтотОбъект.Элементы.Список.ВыделенныеСтроки; 
	ЗапуститьВыбранноеНаСервере(ВыбранныеОповещения);
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Выбранные оповещения запущены'"));
	ОповеститьОбИзменении(Тип("СправочникСсылка.Оповещения"));
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьВсе(Команда)
	
	ЗапуститьВсеНаСервере();
	ПоказатьОповещениеПользователя(НСтр("ru = 'Оповещения запущены'"));
	ОповеститьОбИзменении(Тип("СправочникСсылка.Оповещения"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьВыбранное(Команда)
	ВыбранныеОповещения = ЭтотОбъект.Элементы.Список.ВыделенныеСтроки;
	ОстановитьВыбранноеНаСервере(ВыбранныеОповещения);
	ПоказатьОповещениеПользователя(НСтр("ru = 'Выбранные оповещения остановлены'"));
	ОповеститьОбИзменении(Тип("СправочникСсылка.Оповещения"));
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьВсе(Команда)
	
	ОстановитьВсеНаСервере();
	ПоказатьОповещениеПользователя(НСтр("ru = 'Оповещения остановлены'"));
	ОповеститьОбИзменении(Тип("СправочникСсылка.Оповещения"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЖурнал(Команда)
	ОчиститьЖурналНаСервере();
	ОповеститьОбИзменении(Тип("СправочникСсылка.Оповещения"));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначенияВыбранным(Команда)
    
    ДанныеДляРедактирования = Новый Массив;
    
    Для Каждого ТекСтрока Из ЭтотОбъект.Элементы.Список.ВыделенныеСтроки Цикл
        
        ДанныеДляРедактирования.Добавить(ТекСтрока);
        
    КонецЦикла;
     
    ПараметрыОткрытия = Новый Структура("Оповещения", ДанныеДляРедактирования);
    
    ТекДанные = ЭтотОбъект.Элементы.Список.ТекущиеДанные;
    ПараметрыОткрытия.Вставить("ПериодГруппировкиОповещений", ТекДанные.ПериодГруппировкиОповещений);
    ПараметрыОткрытия.Вставить("ПериодПовторногоОповещения", ТекДанные.ПериодПовторногоОповещения);
    ПараметрыОткрытия.Вставить("ИнтервалОЗакрытии", ТекДанные.ИнтервалОЗакрытии);
    
    ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьЗначенияВыбраннымЗакрытие", ЭтотОбъект);
    ОткрытьФорму("Справочник.Оповещения.Форма.ФормаУстановитьЗначенияВыбранным", ПараметрыОткрытия,,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
    ОткрытьФорму("ОбщаяФорма.ФормаКонстантОповещения");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	
	ПараметрыОткрытия = Новый Структура("ОбъектКопирования", Элемент.ТекущаяСтрока);
	ОткрытьФорму("Справочник.Оповещения.Форма.ФормаЭлемента", ПараметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ЗапуститьВсеНаСервере()
	
	
	МаксимальноеКоличествоИсполняющихФоновыхЗаданий = Константы.МаксимальноеКоличествоИсполняющихФоновыхЗаданий.Получить();
	Если МаксимальноеКоличествоИсполняющихФоновыхЗаданий = 0 Тогда
		Константы.МаксимальноеКоличествоИсполняющихФоновыхЗаданий.Установить(1);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Оповещения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Оповещения КАК Оповещения
		|ГДЕ
		|	Оповещения.ИсполняющееЗадание <> ЗНАЧЕНИЕ(Справочник.ОчередьЗаданий.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОповещениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если ОповещениеОбъект <> Неопределено И ОповещениеОбъект.ПроверитьКорректностьЗаполнения(Ложь) Тогда
			ОчередьЗаданий.ИзменитьЗадание(ОповещениеОбъект.ИсполняющееЗадание, Новый Структура("Использование", Истина));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОстановитьВсеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Оповещения.ИсполняющееЗадание
		|ИЗ
		|	Справочник.Оповещения КАК Оповещения
		|ГДЕ
		|	Оповещения.ИсполняющееЗадание <> ЗНАЧЕНИЕ(Справочник.ОчередьЗаданий.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОчередьЗаданий.ИзменитьЗадание(Выборка.ИсполняющееЗадание, Новый Структура("Использование", Ложь));
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьЖурналНаСервере()
	
	Для Каждого Строка Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Набор = РегистрыСведений.ЖурналОповещений.СоздатьНаборЗаписей();
		Набор.Отбор.Оповещение.Установить(Строка);
		Набор.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗапуститьВыбранноеНаСервере(Оповещения)
	Для Каждого ТекОповещение Из Оповещения Цикл
		ОповещениеОбъект = ТекОповещение.ПолучитьОбъект();
		
		Если ОповещениеОбъект <> Неопределено И ОповещениеОбъект.ПроверитьКорректностьЗаполнения(Истина) Тогда
			Если ОповещениеОбъект.ИсполняющееЗадание <> Справочники.ОчередьЗаданий.ПустаяСсылка() Тогда
				ОчередьЗаданий.ИзменитьЗадание(ОповещениеОбъект.ИсполняющееЗадание, Новый Структура("Использование", Истина));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОстановитьВыбранноеНаСервере(Оповещения)
	Для Каждого ТекОповещение Из Оповещения Цикл
		ОповещениеОбъект = ТекОповещение.ПолучитьОбъект();
		
		Если ОповещениеОбъект <> Неопределено И ОповещениеОбъект.ПроверитьКорректностьЗаполнения(Ложь) Тогда
			Если ОповещениеОбъект.ИсполняющееЗадание <> Справочники.ОчередьЗаданий.ПустаяСсылка() Тогда
				ОчередьЗаданий.ИзменитьЗадание(ОповещениеОбъект.ИсполняющееЗадание, Новый Структура("Использование", Ложь));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначенияВыбраннымЗакрытие(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
    
    Если РезультатЗакрытия = "Обновить" Тогда
        ЭтотОбъект.Элементы.Список.Обновить();
    КонецЕсли;
        
КонецПроцедуры

#КонецОбласти







