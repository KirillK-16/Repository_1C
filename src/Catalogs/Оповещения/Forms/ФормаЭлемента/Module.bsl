
&НаКлиенте
Перем КомпоновщикФиксированныеНастройкиОтборЛевоеЗначениеНачалоВыбора;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ПериодГруппировкиОповещений = Константы.ПериодГруппировкиОповещений.Получить();
		Если ОБъект.ПериодГруппировкиОповещений < 60 Тогда
			Объект.ПериодГруппировкиОповещений = 60;
		КонецЕсли;
	КонецЕсли;
	
	Отбор = Новый Структура("Метаданные", Метаданные.РегламентныеЗадания.ОповещениеОтветственных);
	РегламентноеРасписаниеОчередиЗаданий = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
	ЭтотОбъект.ПериодОчередиЗаданий = РегламентноеРасписаниеОчередиЗаданий[0].Расписание.ПериодПовтораВТечениеДня;
	
	СКД = Новый СхемаКомпоновкиДанных();
	ИсточникСКД = СКД.ИсточникиДанных.Добавить();
	ИсточникСКД.Имя = "ИсточникДанных1";
	ИсточникСКД.ТипИсточникаДанных = "local";
	НаборДанных = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
    НаборДанных.Запрос = РегистрыСведений.Инциденты.ПолучитьТекстЗапросаИнициализацииСКД(); 
    НаборДанных.ИсточникДанных = ИсточникСКД.Имя;
	
	URLСхемы = ПоместитьВоВременноеХранилище(СКД, Новый УникальныйИдентификатор());
	Компоновщик.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
	
	Если Параметры.Свойство("ИнтервалОЗакрытии") Тогда
		Объект.ИнтервалОЗакрытии = Параметры.ИнтервалОЗакрытии;
	КонецЕсли;
		
	Если Параметры.Свойство("ИнцидентДляЗаполненияФильтра") Тогда
		
		Источник = РегистрыСведений.Инциденты.СоздатьМенеджерЗаписи();
		Источник.Инцидент = Параметры.ИнцидентДляЗаполненияФильтра;
        Источник.ТипИнцидента = Параметры.ТипИнцидента;
		Источник.Прочитать();
		Если Источник.Выбран() Тогда
		
			Для Каждого ДоступноеПоле из Компоновщик.Настройки.ДоступныеПоляОтбора.Элементы Цикл
				
				ИмяПоля = Строка(ДоступноеПоле.Поле);
				ЕстьПолеИсточника =
					(
						ИмяПоля = "ТипИнцидента"
						ИЛИ ИмяПоля = "КодИнцидента"
					)
					И
					(
						Метаданные.РегистрыСведений.Инциденты.Измерения.Найти(ИмяПоля) <> Неопределено
						ИЛИ Метаданные.РегистрыСведений.Инциденты.Ресурсы.Найти(ИмяПоля) <> Неопределено
						ИЛИ Метаданные.РегистрыСведений.Инциденты.Реквизиты.Найти(ИмяПоля) <> Неопределено
					);
				Если 
					ЕстьПолеИсточника И
					ТипЗнч(Источник[ИмяПоля])<>Тип("Дата") И
					ТипЗнч(Источник[ИмяПоля])<>Тип("Число") Тогда
					ЭлОтбора = Компоновщик.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
					ЭлОтбора.ЛевоеЗначение = ДоступноеПоле.Поле;
					Если ЗначениеЗаполнено(Источник[ИмяПоля]) Тогда
						ЭлОтбора.ПравоеЗначение = Источник[ИмяПоля];
					Иначе
						ЭлОтбора.Использование = Ложь;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			Объект.Наименование = Источник.Инцидент.Наименование;
			
			//расписание по умолчанию
			Расписание = новый РасписаниеРегламентногоЗадания();
			Расписание.ПериодПовтораДней = 1;
			Расписание.ПериодПовтораВТечениеДня = 600;
			РасписаниеПредставление = "Расписание: " + Расписание;
			РасписаниеИспользование = Истина;
					
		КонецЕсли;
		
	ИначеЕсли Параметры.Свойство("ТипИнцидентаДляЗаполненияФильтра") Тогда
		
		ЭлОтбора = Компоновщик.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипИнцидента");
		ЭлОтбора.ПравоеЗначение = Параметры.ТипИнцидентаДляЗаполненияФильтра;
		
		Объект.Наименование = Параметры.ТипИнцидентаДляЗаполненияФильтра.Наименование;
		
		//расписание по умолчанию
		Расписание = новый РасписаниеРегламентногоЗадания();
		Расписание.ПериодПовтораДней = 1;
		Расписание.ПериодПовтораВТечениеДня = 600;
		РасписаниеПредставление = "Расписание: " + Расписание;
		РасписаниеИспользование = Истина;
				
	Иначе
		
		ПрочитатьРасписание();
		
	КонецЕсли;
	
	ЭтотОбъект.СравнениеВсем = "Больше";
	
	Если НЕ Константы.ВыполнятьОповещениеПоПочте.Получить() И НЕ Константы.ВыполнятьОповещениеПоСМС.Получить() И НЕ Константы.ВыполнятьОповещениеПоSkype.Получить() Тогда
		ЭтотОбъект.Элементы.ГруппаПредупреждение.Видимость = Истина;
	КонецЕсли;
	
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ШаблонПоУмолчанию = ШаблонПоУмолчанию(Объект.ОтноситсяКТипуИнцидента);
		
		Если НЕ ЗначениеЗаполнено(Объект.ТемаОповещения) Тогда
			Объект.ТемаОповещения = ШаблонПоУмолчанию.Тема;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ТемаОповещенияЗакрытие) Тогда
			Объект.ТемаОповещенияЗакрытие = СтрЗаменить(ШаблонПоУмолчанию.Тема, "PROBLEM", "OK");
		КонецЕсли;
		
		
		Если НЕ ЗначениеЗаполнено(Объект.ТекстОповещения) Тогда
			Объект.ТекстОповещения = ШаблонПоУмолчанию.ТелоПисьма;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ТекстОповещенияЗакрытие) Тогда
			Объект.ТекстОповещенияЗакрытие = СтрЗаменить(ШаблонПоУмолчанию.ТелоПисьма, "PROBLEM", "OK");
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ТекстОповещенияСмс) Тогда
			Объект.ТекстОповещенияСмс = ШаблонПоУмолчанию.ТелоСМС;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ТекстОповещенияСмсЗакрытие) Тогда
			Объект.ТекстОповещенияСмсЗакрытие = СтрЗаменить(ШаблонПоУмолчанию.ТелоСМС, "PROBLEM", "OK");
		КонецЕсли;
	КонецЕсли;
	
	ПолучательПриИзмененииНаСервере();
    
    ЕстьОтборТипИнцидента = Ложь;
    Для Каждого ТекЭлемент Из ЭтотОбъект.Компоновщик.Настройки.Отбор.Элементы Цикл
        Если ТипЗнч(ТекЭлемент) = Тип("ЭлементОтбораКомпоновкиДанных") И ТекЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипИнцидента") Тогда
            ЕстьОтборТипИнцидента = Истина;
        КонецЕсли;
    КонецЦикла;
    
    Если НЕ ЕстьОтборТипИнцидента Тогда
        ЭлементОтбора = Компоновщик.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
        ЭлементОтбора.Использование = Истина;
        ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипИнцидента");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    КонецЕсли;
            
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтотОбъект.ПредыдущаяСтраница = ЭтотОбъект.Элементы.Страницы.ТекущаяСтраница.Имя;
	ОтдельныеШаблоныОЗакрытииПриИзменении(ЭтотОбъект.Элементы.ОтдельныеШаблоныОЗакрытии);
    
    Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
       
        ПриОткрыииЗакрытие = Новый ОписаниеОповещения("ПриОткрытииЗакрытие", ЭтотОбъект);
        ОткрытьФорму("Справочник.Оповещения.Форма.ФормаПредупреждение",,,,,,ПриОткрыииЗакрытие, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОповеститьОбИзменении(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ФормаОбщая.ФормаКонстантОповещения.ПослеЗаписи" Тогда
		Если НЕ Параметр.ВыполнятьОповещениеПоПочте И НЕ Параметр.ВыполнятьОповещениеПоСмс Тогда
			ЭтотОбъект.Элементы.ГруппаПредупреждение.Видимость = Истина;
		Иначе
			ЭтотОбъект.Элементы.ГруппаПредупреждение.Видимость = Ложь;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "Справочник.Пользователи.ПослеЗаписи" Тогда
		ПолучательПриИзменении();	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Попытка
		Если НЕ ПустаяСтрока(ТекущийОбъект.НастройкиОтбораДляИнцидентов) Тогда
			НастройкиОтбораДляИнцидентовДесериализация(Компоновщик, ТекущийОбъект.НастройкиОтбораДляИнцидентов);
		КонецЕсли;
	Исключение
		Сообщить("Ошибка чтения настроек отбора для инцидентов");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ЕстьОтборТипИнцидента = Ложь;
    Для Каждого ТекЭлемент Из ЭтотОбъект.Компоновщик.Настройки.Отбор.Элементы Цикл
        Если ТипЗнч(ТекЭлемент) = Тип("ЭлементОтбораКомпоновкиДанных") И ТекЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипИнцидента") Тогда
            ЕстьОтборТипИнцидента = Истина;
        КонецЕсли;
    КонецЦикла;
	
	Если НЕ ЕстьОтборТипИнцидента Тогда
				
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найден отбор по типу инцидентов в корне. Запись не возможна!"; 
		Сообщение.Сообщить();
        
        Отказ = Истина;
        
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПолучательПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Запустить(Команда)
	
	Если Модифицированность Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗапуститьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Измененные данные будут записаны.'"), РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ЗапуститьОбщая();
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура Остановить(Команда)
	ОстановитьНаСервере();
	ОповеститьОбИзменении(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчасНеОтправлять(Команда)
	ВыполнитьСейчас(Команда, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчас(Команда, Отправить = Истина)
	
	Если Модифицированность Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьСейчасЗавершение", ЭтотОбъект, Отправить);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Измененные данные будут записаны.'"), РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ВыполнитьСейчасОбщая(Отправить);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонТемаМылоПоУмолчанияю(Команда)
	
	ШаблонПоУмолчанию = ШаблонПоУмолчанию(Объект.ОтноситсяКТипуИнцидента);
	Объект.ТемаОповещения = ШаблонПоУмолчанию.Тема;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныТемаМыло(Команда)
	Объект.ТемаОповещения = ПолучитьШаблоныОповещения();
КонецПроцедуры

&НаКлиенте
Процедура ТекстМылоПоУмолчанию(Команда)
	
	ШаблонПоУмолчанию = ШаблонПоУмолчанию(Объект.ОтноситсяКТипуИнцидента);
	Объект.ТекстОповещения = ШаблонПоУмолчанию.ТелоПисьма;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстМыло(Команда)
	Объект.ТекстОповещения = ПолучитьШаблоныОповещения();
КонецПроцедуры

&НаКлиенте
Процедура ТекстСМСПоУмолчанию(Команда)
	
	ШаблонПоУмолчанию = ШаблонПоУмолчанию(Объект.ОтноситсяКТипуИнцидента);
	Объект.ТекстОповещенияСмс = ШаблонПоУмолчанию.ТелоСМС;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСМС(Команда)
	Объект.ТекстОповещенияСмс = ПолучитьШаблоныОповещения();
КонецПроцедуры

&НаКлиенте
Процедура ШаблонТемаМылоЗакрытие(Команда)
	
	ШаблонПоУмолчанию = ШаблонПоУмолчанию(Объект.ОтноситсяКТипуИнцидента);
	Объект.ТемаОповещенияЗакрытие = СтрЗаменить(ШаблонПоУмолчанию.Тема, "PROBLEM", "OK");
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныТемаМылоЗакрытие(Команда)
	Объект.ТемаОповещенияЗакрытие = ПолучитьШаблоныОповещения();
КонецПроцедуры

&НаКлиенте
Процедура ТекстМылоПоУмолчаниюЗакрытие(Команда)
	
	ШаблонПоУмолчанию = ШаблонПоУмолчанию(Объект.ОтноситсяКТипуИнцидента);
	Объект.ТекстОповещенияЗакрытие = СтрЗаменить(ШаблонПоУмолчанию.ТелоПисьма, "PROBLEM", "OK");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстМылоЗакрытие(Команда)
	Объект.ТекстОповещенияЗакрытие = ПолучитьШаблоныОповещения();
КонецПроцедуры

&НаКлиенте
Процедура ТекстСМСПоУмолчаниюЗакрытие(Команда)
	
	ШаблонПоУмолчанию = ШаблонПоУмолчанию(Объект.ОтноситсяКТипуИнцидента);
	Объект.ТекстОповещенияСмсЗакрытие = СтрЗаменить(ШаблонПоУмолчанию.ТелоСМС, "PROBLEM", "OK");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСМСЗакрытие(Команда)
	Объект.ТекстОповещенияСмсЗакрытие = ПолучитьШаблоныОповещения();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнцидентыПоОтбору(Команда)
	ЭтотОбъект.ТЗнИнциденты.Очистить();
	
	Инциденты = ОбновитьИнцидентыПоОтборуНаСервере(ЭтотОбъект.Компоновщик);
	
	Для Каждого Инцидент Из Инциденты Цикл
		НовСтрока = ЭтотОбъект.ТЗнИнциденты.Добавить();
		НовСтрока.ТипИнцидента = Инцидент.ТипИнцидента;
		НовСтрока.КодИнцидента = Инцидент.Инцидент;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = ЭтотОбъект.Элементы.ГруппаСтраницаТекстПросмотр Тогда
		ИзменитьТекстПросмотраШаблонов();
	ИначеЕсли ТекущаяСтраница = ЭтотОбъект.Элементы.ГруппаОтборИнцидента Тогда
		ОбновитьИнцидентыПоОтбору(ЭтотОбъект.Команды.ОбновитьИнцидентыПоОтбору);
	КонецЕсли;
	
	ЭтотОбъект.ПредыдущаяСтраница = ТекущаяСтраница.Имя;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтоШаблонОткрытияПриИзменении(Элемент)
	ПриИзмененииШаблонаОткрытия();
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НЕ Копирование И НоваяСтрока Тогда
		Элементы.Получатели.ТекущиеДанные.ПоПочте = ИСТИНА;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТЗнИнцидентыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	КлючЗаписи = ПолучитьКлючЗаписиИнцидента(ЭтотОбъект.Элементы.ТЗнИнциденты.ТекущиеДанные.КодИнцидента);
	ПараметрыОткрытия = Новый Структура("Ключ", КлючЗаписи);
	ОткрытьФорму("РегистрСведений.Инциденты.Форма.ФормаЗаписи", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикФиксированныеНастройкиОтборПередУдалением(Элемент, Отказ)
    
    Если Элемент.ТекущиеДанные.ТипГруппы = Неопределено И Элемент.ТекущиеДанные.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипИнцидента") Тогда
        
        СообщениеПользователю = Новый СообщениеПользователю;
        СообщениеПользователю.Текст = "Обязательное поле ""Тип инцидента"". Удаление не возможно!";
        СообщениеПользователю.Сообщить();
        
        Отказ = Истина;
    ИначеЕсли Элемент.ТекущиеДанные.ТипГруппы <> Неопределено Тогда
        ОбъектОтбора = ЭтотОбъект.Компоновщик.Настройки.Отбор.ПолучитьОбъектПоИдентификатору(ЭтотОбъект.Элементы.КомпоновщикФиксированныеНастройкиОтбор.ТекущаяСтрока);
        Если ОбъектОтбора  <> Неопределено Тогда
            Если ЕстьОтборПоТипуИнцидентаВГруппе(ОбъектОтбора) Тогда
                СообщениеПользователю = Новый СообщениеПользователю;
                СообщениеПользователю.Текст = "Обязательное поле ""Тип инцидента"" в группе. Удаление не возможно!";
                СообщениеПользователю.Сообщить();
                
                Отказ = Истина;
            КонецЕсли;
        КонецЕсли;
    КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Функция ЕстьОтборПоТипуИнцидентаВГруппе(ГруппаЭлементовОтбораКомпоновкиДанных)
    
    ЕстьОтбор = Ложь;
    
    Для Каждого ТекЭлемент Из ГруппаЭлементовОтбораКомпоновкиДанных.Элементы Цикл
        Если ТипЗнч(ТекЭлемент) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
            Если ТекЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипИнцидента") Тогда
                ЕстьОтбор = Истина;
                Возврат ЕстьОтбор;
            КонецЕсли;
        ИначеЕсли ТипЗнч(ТекЭлемент) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
            ЕстьОтбор = ЕстьОтборПоТипуИнцидентаВГруппе(ТекЭлемент);
            Если ЕстьОтбор Тогда
                Возврат ЕстьОтбор;
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
    
    Возврат ЕстьОтбор;
    
КонецФункции

&НаКлиенте
Процедура КомпоновщикФиксированныеНастройкиОтборПередНачаломИзменения(Элемент, Отказ)
    
    Если
        Элемент.ТекущиеДанные.ТипГруппы = Неопределено
        И
        Элемент.ТекущиеДанные.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипИнцидента")
        И
        (
            Элемент.ТекущийЭлемент.Имя =  "КомпоновщикФиксированныеНастройкиОтборЛевоеЗначение"
            ИЛИ
            Элемент.ТекущийЭлемент.Имя =  "КомпоновщикФиксированныеНастройкиОтборИспользование"
            ИЛИ
            Элемент.ТекущийЭлемент.Имя =  "КомпоновщикФиксированныеНастройкиОтборВидСравнения"
        )
    Тогда
        СообщениеПользователю = Новый СообщениеПользователю;
        СообщениеПользователю.Текст = "Обязательное поле ""Тип инцидента"". Изменение не возможно!";
        СообщениеПользователю.Сообщить();
        
        Отказ = Истина;
    ИначеЕсли Элемент.ТекущиеДанные.ТипГруппы <> Неопределено И Элемент.ТекущийЭлемент.Имя =  "КомпоновщикФиксированныеНастройкиОтборИспользование" Тогда
        ОбъектОтбора = ЭтотОбъект.Компоновщик.Настройки.Отбор.ПолучитьОбъектПоИдентификатору(ЭтотОбъект.Элементы.КомпоновщикФиксированныеНастройкиОтбор.ТекущаяСтрока);
        Если ОбъектОтбора  <> Неопределено Тогда
            Если ЕстьОтборПоТипуИнцидентаВГруппе(ОбъектОтбора) Тогда
                СообщениеПользователю = Новый СообщениеПользователю;
                СообщениеПользователю.Текст = "Обязательное поле ""Тип инцидента"" в группе. Изменение не возможно!";
                СообщениеПользователю.Сообщить();
                
                Отказ = Истина;
            КонецЕсли;
        КонецЕсли;    
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикФиксированныеНастройкиОтборЛевоеЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    КомпоновщикФиксированныеНастройкиОтборЛевоеЗначениеНачалоВыбора = ЭтотОбъект.Элементы.КомпоновщикФиксированныеНастройкиОтбор.ТекущиеДанные.ЛевоеЗначение; 
    
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикФиксированныеНастройкиОтборЛевоеЗначениеПриИзменении(Элемент)
    
    Если ЭтотОбъект.Элементы.КомпоновщикФиксированныеНастройкиОтбор.ТекущиеДанные.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипИнцидента") Тогда
        
        ОбъектОтбора = ЭтотОбъект.Компоновщик.Настройки.Отбор.ПолучитьОбъектПоИдентификатору(ЭтотОбъект.Элементы.КомпоновщикФиксированныеНастройкиОтбор.ТекущаяСтрока);
        Если ОбъектОтбора <> Неопределено Тогда
            ОбъектОтбора.ЛевоеЗначение = КомпоновщикФиксированныеНастройкиОтборЛевоеЗначениеНачалоВыбора;
            
            СообщениеПользователю = Новый СообщениеПользователю;
            СообщениеПользователю.Текст = "Отбор ""Тип инцидента"" уже выбран. Укажите другой отбор!";
            СообщениеПользователю.Сообщить();
        КонецЕсли;
    КонецЕсли;
    
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИзменитьТекстПросмотраШаблонов()
	
	Если ЭтоШаблонОткрытия = 0 Тогда
		ЭтоЗакрытие = Ложь;
	Иначе
		ЭтоЗакрытие = Истина;
	КонецЕсли;
	
	ТекстыОповещенияМассив = ПолучитьТекстыОповещенияНаСервере(Объект, ЭтоЗакрытие);
	
	Тема = "";
	ТелоПисьма = "";
	ТелоСМС = "";
	Для Каждого ТекстыОповещения Из ТекстыОповещенияМассив Цикл
		Тема = Тема + ТекстыОповещения.Тема + ";";
		ТелоПисьма = ТелоПисьма + ТекстыОповещения.ТелоПисьма + Символы.ПС;
		ТелоСМС = ТелоСМС + ТекстыОповещения.ТелоСМС + ";";
	КонецЦикла;
	
	Если ТекстыОповещенияМассив.Количество() = 1 Тогда
		Тема = Лев(Тема, СтрДлина(Тема) - 1);
		ТелоПисьма = Лев(ТелоПисьма, СтрДлина(ТелоПисьма) - 1);
		ТелоСМС = Лев(ТелоСМС, СтрДлина(ТелоСМС) - 1);
	КонецЕсли;
	
	ЭтотОбъект.ТемаОповещенияПросмотр = Тема;
	ЭтотОбъект.ТекстОповещенияПросмотр = ТелоПисьма;
	ЭтотОбъект.ТекстОповещенияСмсПросмотр = ТелоСмс;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекстыОповещенияНаСервере(Знач Объект, Знач ЭтоЗакрытие)
	
	ОповещениеСсылка = Объект.Ссылка;
	
	ТекстыОповещенийМассив = Новый Массив;
	
	Инциденты = Справочники.Оповещения.ПолучитьИнцидентыОповещения(ОповещениеСсылка.НастройкиОтбораДляИнцидентов);
	
	Если Инциденты.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = РегистрыСведений.Инциденты.ПолучитьТекстЗапросаИнициализацииСКД();
        Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	СпрИнциденты.Наименование В (&КодыИнцидентов)
		|";
		
		Запрос.УстановитьПараметр("КодыИнцидентов", Инциденты.ВыгрузитьКолонку("КодИнцидента"));
		Результат = Запрос.Выполнить();
		
		Инциденты = Результат.Выгрузить();
		
		Если НЕ ЭтоЗакрытие Тогда
			ТекстОповещенияТема = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТемаОповещения, Инциденты, ":", ",");
			ТекстОповещенияТело = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТекстОповещения, Инциденты);
			ТекстОповещенияТелоСМС = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТекстОповещенияСмс, Инциденты);
		Иначе
			ТекстОповещенияТема = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТемаОповещенияЗакрытие, Инциденты, ":", ",");
			ТекстОповещенияТело = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТекстОповещенияЗакрытие, Инциденты);
			ТекстОповещенияТелоСМС = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТекстОповещенияСмсЗакрытие, Инциденты);
		КонецЕсли;
		
		Результат = Новый Структура;
		Результат.Вставить("Тема", ТекстОповещенияТема);
		Результат.Вставить("ТелоПисьма", ТекстОповещенияТело);
		Результат.Вставить("ТелоСМС", ТекстОповещенияТелоСМС);
	Иначе
		Результат = Новый Структура;
		Результат.Вставить("Тема", "");
		Результат.Вставить("ТелоПисьма", "");
		Результат.Вставить("ТелоСМС", "");
	КонецЕсли;

	ТекстыОповещенийМассив.Добавить(Результат);
	
	Возврат ТекстыОповещенийМассив;
	
КонецФункции

&НаСервере
Процедура ПолучательПриИзмененииНаСервере()
	Для Каждого ТекПолучатель Из Объект.Получатели Цикл
        
        Если ТипЗнч(ТекПолучатель.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
			ТекПолучатель.ЕстьПоПочте = ЗначениеЗаполнено(ТекПолучатель.Адресат.АдресЭлектроннойПочты);
			ТекПолучатель.ЕстьПоПочтеТекст = "";
		Иначе
			ТекПолучатель.ЕстьПоПочте = Истина;
			ТекПолучатель.ЕстьПоПочтеТекст = "";
		КонецЕсли;
		
		Если ТипЗнч(ТекПолучатель.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
			ТекПолучатель.ЕстьПоСмс = ЗначениеЗаполнено(ТекПолучатель.Адресат.НомерТелефона);
			ТекПолучатель.ЕстьПоСмсТекст = "";
		Иначе
			ТекПолучатель.ЕстьПоСмс = Истина;
			ТекПолучатель.ЕстьПоСмсТекст = "";
        КонецЕсли;
        
        Если ТипЗнч(ТекПолучатель.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
			ТекПолучатель.ЕстьПоСкайпу = ЗначениеЗаполнено(ТекПолучатель.Адресат.Скайп);
			ТекПолучатель.ЕстьПоСкайпуТекст = "";
		Иначе
			ТекПолучатель.ЕстьПоСкайпу = Истина;
			ТекПолучатель.ЕстьПоСкайпуТекст = "";
        КонецЕсли;
        
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.НастройкиОтбораДляИнцидентов = НастройкиОтбораДляИнцидентовСериализация(Компоновщик.ПолучитьНастройки());
	
	ОбработатьРасписание(ТекущийОбъект);
	
	Если ЗначениеЗаполнено(ТекущийОбъект.ИсполняющееЗадание) Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("Использование", ТекущийОбъект.ИсполняющееЗадание.Использование);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкиОтбораДляИнцидентовСериализация(Настройки)
	
	НастройкиОтбораДляИнцидентов = Справочники.Оповещения.НастройкиОтбораДляИнцидентовСериализация(Настройки);
	
	Возврат НастройкиОтбораДляИнцидентов;
	
КонецФункции

&НаСервереБезКонтекста
Процедура НастройкиОтбораДляИнцидентовДесериализация(Компоновщик, НастройкиОтбораДляИнцидентов)
	
	Справочники.Оповещения.НастройкиОтбораДляИнцидентовДесериализация(Компоновщик, НастройкиОтбораДляИнцидентов);

КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Записать();
		ЗапуститьОбщая();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОбщая()
	
	ОчиститьСообщения();
	ЗапуститьНаСервере();
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчасЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		Записать();
		ВыполнитьСейчасОбщая(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчасОбщая(Отправить)
	
	Результат = ВыполнитьСервер(Отправить);
	Если Результат = Ложь Тогда
		Возврат;
	ИначеЕсли Результат = Неопределено Тогда
		Пояснение = НСтр("ru = 'Оповещение не сформировано'");
		НавигационнаяСсылка = Неопределено;
	Иначе
		Пояснение = НСтр("ru = 'Оповещение сформировано. См. Журнал оповещений'");
		
		Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() = 1 Тогда
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Результат[0]);
        ИначеЕсли ТипЗнч(Результат) = Тип("РегистрСведенийКлючЗаписи.ЖурналОповещений") Тогда
            НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Результат);
		Иначе
			НавигационнаяСсылка = "";
			Пояснение = НСтр("ru = 'Оповещения сформированы. См. Журнал оповещений'");
		КонецЕсли;
		
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Проверка выполнена'"), НавигационнаяСсылка, Пояснение);
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗаданияЗавершение(РасписаниеВыбрано, ДополнительныеПараметры) Экспорт
	
	Если РасписаниеВыбрано <> Неопределено Тогда
		Расписание = РасписаниеВыбрано;
		РасписаниеПредставление = "Расписание: " + Строка(Расписание);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРасписание(Знач ТекущийОбъект)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Расписание", Расписание);
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	Если Не ТекущийОбъект.ПроверитьКорректностьЗаполнения(Истина) Тогда
		Возврат;
	КонецЕсли;
	ОчередьЗаданий.ИзменитьЗадание(Объект.ИсполняющееЗадание, Новый Структура("Использование", Истина));
	РасписаниеИспользование = Истина;
	УстановитьДоступностьКнопокЗапуска(РасписаниеИспользование);
	
КонецПроцедуры

&НаСервере
Процедура ОстановитьНаСервере()
	
	ОчередьЗаданий.ИзменитьЗадание(Объект.ИсполняющееЗадание, Новый Структура("Использование", Ложь));
	РасписаниеИспользование = Ложь;
	УстановитьДоступностьКнопокЗапуска(РасписаниеИспользование);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьРасписание()
	
	Если Объект.ИсполняющееЗадание <> Неопределено Тогда
		Задания = ОчередьЗаданий.ПолучитьЗадания(
			Новый Структура("Идентификатор", Объект.ИсполняющееЗадание));
			
		Если Задания.Количество() > 0 Тогда
			Расписание = Задания[0].Расписание;
			РасписаниеПредставление = "Расписание: " + Задания[0].Расписание;
			РасписаниеИспользование = Задания[0].Использование;
		Иначе
			Объект.ИсполняющееЗадание = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьДоступностьКнопокЗапуска(РасписаниеИспользование);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКнопокЗапуска(Знач РасписаниеИспользование)
	
	Элементы.Запустить.Доступность = Не РасписаниеИспользование;
	Элементы.Остановить.Доступность = РасписаниеИспользование;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьСервер(Отправить)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	Если Не ТекущийОбъект.ПроверитьКорректностьЗаполнения(Истина) Тогда
		Возврат Ложь;
	КонецЕсли;

    Инциденты = ОбновитьИнцидентыПоОтборуНаСервере(ЭтотОбъект.Компоновщик);
    
    Если Инциденты.Количество() > 0 Тогда
        
        Инцидент = РегистрыСведений.Инциденты.СоздатьМенеджерЗаписи();
        Инцидент.Инцидент = Инциденты[0].Инцидент;
        Инцидент.ТипИнцидента = Инциденты[0].ТипИнцидента; 
        Инцидент.Прочитать();
        
        Возврат Справочники.Оповещения.ОповеститьПользователей(Инцидент, Объект.Ссылка, "", Истина, Отправить);  
        
    Иначе
        
        Возврат Ложь;
        
    КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПолучитьШаблоныОповещения()
	Шаблоны = Новый Массив;
	Шаблоны.Добавить("Наименование = [Наименование]" + Символы.ПС);
	Шаблоны.Добавить("ТипИнцидента = [ТипИнцидента]" + Символы.ПС);
	Шаблоны.Добавить("КодИнцидета = [КодИнцидента]" + Символы.ПС);
	Шаблоны.Добавить("Кластер = [Кластер]" + Символы.ПС);
	Шаблоны.Добавить("СтрокаПодключения = [СтрокаПодключения]" + Символы.ПС);
	Шаблоны.Добавить("ДатаФормированияОповещения = [ДатаФормированияОповещения=дд.ММ.гггг ЧЧ:мм:сс]" + Символы.ПС);
	Шаблоны.Добавить("ДатаОткрытияИнцидента = [ДатаОткрытияИнцидента=дд.ММ.гггг ЧЧ:мм:сс]" + Символы.ПС);
	Шаблоны.Добавить("ДатаЗакрытияИнцидента = [ДатаЗакрытияИнцидента=дд.ММ.гггг ЧЧ:мм:сс]" + Символы.ПС);
	Шаблоны.Добавить("СтатусИнцидента = [СтатусИнцидента]" + Символы.ПС);
	Шаблоны.Добавить("ПоследнееСрабатывание = [ПоследнееСрабатывание=дд.ММ.гггг ЧЧ:мм:сс]" + Символы.ПС);
	
	Шаблоны.Добавить("ВремяВСтатусе = [ВремяВСтатусе]" + Символы.ПС);
	Шаблоны.Добавить("ВремяВСтатусе = [StatusTime]" + Символы.ПС);
	
	Шаблоны.Добавить("ВремяАктуальностиПроблемы = [ВремяАктуальностиПроблемы]" + Символы.ПС);
	Шаблоны.Добавить("ВремяАктуальностиПроблемы = [RelevanceTimeProblems]" + Символы.ПС);	
	
	Шаблоны.Добавить("СообщениеИнцидента = [СообщениеИнцидента]" + Символы.ПС);
	Шаблоны.Добавить("Показатели = [Показатели]" + Символы.ПС);
	Шаблоны.Добавить("Отправитель = [Отправитель]" + Символы.ПС);
	
	Возврат СтрСоединить(Шаблоны, Символы.ПС);
КонецФункции

&НаСервереБезКонтекста
Функция ШаблонПоУмолчанию(ТипИнцидента)
	
	ШаблонПоУмолчанию = Новый Структура("Тема, ТелоПисьма, ТелоСМС");
	
	Если
		ТипЗнч(ТипИнцидента.ОбъектЦКК) = Тип("СправочникСсылка.ОбъектыКонтроля")
		И ТипИнцидента.ОбъектЦКК.Владелец = Справочники.ВидыОбъектовКонтроля.КластерСерверов1С
	Тогда
		ШаблонПоУмолчанию = Справочники.ОбъектыКонтроля.ШаблонОповещенийКластер();
	ИначеЕсли
		ТипЗнч(ТипИнцидента.ОбъектЦКК) = Тип("СправочникСсылка.ОбъектыКонтроля")
		И ТипИнцидента.ОбъектЦКК.Владелец = Справочники.ВидыОбъектовКонтроля.ИнформационнаяБаза
	Тогда
		ШаблонПоУмолчанию = Справочники.КонтрольныеПроцедуры.ШаблонОповещенийКонтрольПодключений();
	Иначе
		ШаблонПоУмолчанию = Новый Структура("Тема, ТелоПисьма, ТелоСМС");
	
		ШаблонПоУмолчанию.Тема = "<Шапка>PROBLEM:Доступность публикация</Шапка><Тело>[СтрокаПодключения]</Тело>";
		ШаблонПоУмолчанию.ТелоПисьма = "<Шапка>PROBLEM:Доступность</Шапка>
		|<Тело>[ДатаОткрытияИнцидента=дд.ММ ЧЧ:мм:сс]: [СтрокаПодключения]
		|</Тело>";
		ШаблонПоУмолчанию.ТелоСМС = "<Шапка>PROBLEM:Доступность</Шапка>
		|<Тело>[ДатаОткрытияИнцидента=дд.ММ ЧЧ:мм:сс]: [СтрокаПодключения]
		|</Тело>"; 
	КонецЕсли;
	
	Возврат ШаблонПоУмолчанию;
	
КонецФункции

&НаКлиенте
Процедура ЭтоШаблонОткрытия1ПриИзменении(Элемент)
	ПриИзмененииШаблонаОткрытия();
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииШаблонаОткрытия()
	
	ИзменитьТекстПросмотраШаблонов();
	
	Если ЭтоШаблонОткрытия = 0 Тогда
		ЭтотОбъект.Элементы.ГруппаШаблонОткрытия.Видимость = Истина;
		ЭтотОбъект.Элементы.ГруппаШаблонЗакрытие.Видимость = Ложь;
	Иначе
		ЭтотОбъект.Элементы.ГруппаШаблонОткрытия.Видимость = Ложь;
		ЭтотОбъект.Элементы.ГруппаШаблонЗакрытие.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьИнцидентыПоОтборуНаСервере(Компоновщик)
	
	НастройкиОтбораДляИнцидентов = НастройкиОтбораДляИнцидентовСериализация(Компоновщик.ПолучитьНастройки());
	
	Инциденты = Новый Массив;
	
	ТЗн = Справочники.Оповещения.ПолучитьИнцидентыОповещения(НастройкиОтбораДляИнцидентов);
	Если ТЗн.Количество() > 0 Тогда
		Для Каждого ТекСтрока Из ТЗн Цикл
			ПараметрыИнцидента = Новый Структура("ТипИнцидента, Инцидент");
			Запись = РегистрыСведений.Инциденты.СоздатьМенеджерЗаписи();
            Инцидент = Справочники.Инциденты.НайтиСсылкуПоНаименованию(ТекСтрока.КодИнцидента);
			Запись.Инцидент = Инцидент;
            Запись.ТипИнцидента = ТекСтрока.ТипИнцидента; 
			Запись.Прочитать();
			Если Запись.Выбран() Тогда
				ПараметрыИнцидента.ТипИнцидента = Запись.ТипИнцидента;
				ПараметрыИнцидента.Инцидент = Инцидент;
				Инциденты.Добавить(ПараметрыИнцидента);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Инциденты;
	
КонецФункции

&НаКлиенте
Процедура ОтдельныеШаблоныОЗакрытииПриИзменении(Элемент)
	ОтдельныеШаблоныОЗакрытииПриИзмененииОбщая();	
КонецПроцедуры

&НаКлиенте
Процедура ОтдельныеШаблоныОЗакрытии1ПриИзменении(Элемент)
	ОтдельныеШаблоныОЗакрытииПриИзмененииОбщая();
КонецПроцедуры

&НаКлиенте
Процедура ОтдельныеШаблоныОЗакрытииПриИзмененииОбщая()
	
	Если Объект.ОтдельныеШаблоныОЗакрытии Тогда
		ЭтотОбъект.Элементы.ЭтоШаблонОткрытия.Доступность = Истина;
		ЭтотОбъект.Элементы.ЭтоШаблонОткрытия1.Доступность = Истина;
	Иначе
		ЭтотОбъект.ЭтоШаблонОткрытия = 0;
		ЭтотОбъект.Элементы.ЭтоШаблонОткрытия.Доступность = Ложь;
		ЭтотОбъект.Элементы.ЭтоШаблонОткрытия1.Доступность = Ложь;
	КонецЕсли;
	
	ЭтоШаблонОткрытия1ПриИзменении(ЭтотОбъект.Элементы.ЭтоШаблонОткрытия1);
	ИзменитьТекстПросмотраШаблонов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПредупреждениеНажатие(Элемент)
	ОткрытьФорму("ОбщаяФорма.ФормаКонстантОповещения");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКлючЗаписиИнцидента(КодИнцидента)
	ЗначениеКлюча = Новый Структура("Инцидент", Справочники.Инциденты.НайтиСсылкуПоНаименованию(КодИнцидента));
	КлючЗаписи = РегистрыСведений.Инциденты.СоздатьКлючЗаписи(ЗначениеКлюча);
	Возврат КлючЗаписи;
КонецФункции

&НаКлиенте
Процедура ПолучателиАдресатПриИзменении(Элемент)
	
	ПолучательПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПриИзменении()
	
	ТекПолучатель = ПолучитьПолучателяСтруктура(ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.Адресат);
	
	Если ТипЗнч(ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоПочте = ЗначениеЗаполнено(ТекПолучатель.АдресЭлектроннойПочты);
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоПочтеТекст = "";
	Иначе
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоПочте = Истина;
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоПочтеТекст = "";
	КонецЕсли;
	
	
	Если ТипЗнч(ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСмс = ЗначениеЗаполнено(ТекПолучатель.НомерТелефона);
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСмсТекст = "";
	Иначе
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСмс = Истина;
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСмсТекст = "";
    КонецЕсли;
    
    Если ТипЗнч(ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСкайпу = ЗначениеЗаполнено(ТекПолучатель.Скайп);
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСкайпуТекст = "";
	Иначе
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСкайпу = Истина;
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСкайпуТекст = "";
	КонецЕсли;
	
	Если ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоПочте ИЛИ ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСмс ИЛИ ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСкайпу Тогда
		ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ОповещатьЗакрыт = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПолучателяСтруктура(Получатель)
    
    ПолучательСтруктура = Новый Структура("Адресат, АдресЭлектроннойПочты, НомерТелефона, Скайп");
	ПолучательСтруктура.Адресат = Получатель;
    Если ТипЗнч(Получатель) = Тип("СправочникСсылка.Пользователи") Тогда
        ПолучательСтруктура.АдресЭлектроннойПочты = Получатель.АдресЭлектроннойПочты;
        ПолучательСтруктура.НомерТелефона = Получатель.НомерТелефона;
        ПолучательСтруктура.Скайп = Получатель.Скайп;
    КонецЕсли;
    	
	Возврат ПолучательСтруктура;
    
КонецФункции

&НаКлиенте
Процедура ПриОткрытииЗакрытие(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
    ЭтотОбъект.Закрыть();
КонецПроцедуры

#КонецОбласти









