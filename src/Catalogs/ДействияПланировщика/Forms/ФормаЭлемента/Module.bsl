&НаКлиенте
Процедура ДеревоСценарияПриАктивизацииСтроки(Элемент)
	ИзменитьПараметрыВОбъекте(ПараметрыКомандАвтоматизации);
	
	ТекущиеДанные = Элементы.ДеревоСценария.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ДеревоСценарияПриАктивизацииСтрокиНаСервере(ТекущиеДанные.УникальныйИдентификаторШага, ?(ОтобразитьПараметрыОтката, ТекущиеДанные.КомандаОтката, ТекущиеДанные.Команда), ОтобразитьПараметрыОтката);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДеревоСценарияПриАктивизацииСтрокиНаСервере(Знач УникальныйИдентификаторШага, Знач Команда, Знач ЭтоОткат)
	ТабРезультат = РаботаСоСценариямиАвтоматизацииСервер.ПолучитьПараметрыКоманды(Объект.Действие, УникальныйИдентификаторШага, Команда, ЭтоОткат);
	Для каждого Строка Из ТабРезультат Цикл
		НайденнаяСтрока = Объект.ПараметрыШагов.НайтиСтроки(Новый Структура("УникальныйИдентификаторШага, ДляОтката, Параметр", Строка.УникальныйИдентификаторШага, Строка.ДляОтката, Строка.Параметр));
		Если НайденнаяСтрока.Количество() <> 0 Тогда
			Строка.Значение = НайденнаяСтрока[0].Значение;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыКомандАвтоматизации.Очистить();
	Для Каждого Источник Из ТабРезультат Цикл
		Приемник = ПараметрыКомандАвтоматизации.Добавить();
		ЗаполнитьЗначенияСвойств(Приемник, Источник);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПараметрыВОбъекте(ПараметрыКоманды)
	Если ПараметрыКоманды.Количество() > 0 Тогда
		СтруктураПараметров = Новый Структура("УникальныйИдентификаторШага, ДляОтката", ПараметрыКоманды[0].УникальныйИдентификаторШага,  ПараметрыКоманды[0].ДляОтката);
		МассивПараметрыКоманды = Новый Массив;
		
		ТекущаяВыборкаПараметров = Объект.ПараметрыШагов.НайтиСтроки(СтруктураПараметров);
		КолВо = ТекущаяВыборкаПараметров.Количество();
		Для й=1 По КолВо Цикл
			АктуальныеПараметры = ПараметрыКоманды.НайтиСтроки(Новый Структура("УникальныйИдентификаторШага, ДляОтката, Параметр", СтруктураПараметров.УникальныйИдентификаторШага, СтруктураПараметров.ДляОтката, ТекущаяВыборкаПараметров[КолВо-й].Параметр));
			Если АктуальныеПараметры.Количество() = 0 Тогда 
				Объект.ПараметрыШагов.Удалить(ТекущаяВыборкаПараметров[КолВо-й]);
				Модифицированность = Истина;
			ИначеЕсли АктуальныеПараметры[0].Значение <> ТекущаяВыборкаПараметров[КолВо-й].Значение Тогда
				ТекущаяВыборкаПараметров[КолВо-й].Значение = АктуальныеПараметры[0].Значение; 
				Модифицированность = Истина;
			КонецЕсли;
			
			Если АктуальныеПараметры.Количество() <> 0 И АктуальныеПараметры[0].Значение <> "" Тогда 
				МассивПараметрыКоманды.Добавить(АктуальныеПараметры[0].ПолучитьИдентификатор());
			КонецЕсли;	
		КонецЦикла;
		
		//основные
		КолВо = ПараметрыКоманды.Количество();
		Для й=1 По КолВо Цикл
			Строка = ПараметрыКоманды[КолВо-й];
			Если Строка.Значение <> "" И МассивПараметрыКоманды.Найти(Строка.ПолучитьИдентификатор()) = Неопределено Тогда
				НоваяСтрока = Объект.ПараметрыШагов.Добавить();
				НоваяСтрока.УникальныйИдентификаторШага = Строка.УникальныйИдентификаторШага;
				НоваяСтрока.Параметр = Строка.Параметр;
				НоваяСтрока.Значение = Строка.Значение;
				НоваяСтрока.ДляОтката = Строка.ДляОтката;
				
				Модифицированность = Истина;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры			

&НаКлиенте
Процедура ДеревоСценарияВключенПоУмолчаниюПриИзменении(Элемент)
	РаботаСоСценариямиАвтоматизацииКлиент.ДеревоФлагПриИзменении(Элемент, "ВключенПоУмолчанию")
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСценарияВключенПоУмолчаниюОткатПриИзменении(Элемент)
	РаботаСоСценариямиАвтоматизацииКлиент.ДеревоФлагПриИзменении(Элемент, "ВключенПоУмолчаниюОткат")
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПараметрыОткатаПриИзменении(Элемент)
	ДеревоСценарияПриАктивизацииСтроки(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыКомандАвтоматизацииЗначениеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
	Объект.ПараметрыШагов.Очистить();
	ВосстановитьДеревоИзТаблицыЗначений();
	
	ЭлементыДерева = ДеревоСценария.ПолучитьЭлементы();
	Если ЭлементыДерева.Количество() > 0 Тогда
		Элементы.ДеревоСценария.Развернуть(ЭлементыДерева[0].ПолучитьИдентификатор(), Истина);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьДеревоИзТаблицыЗначений()
	Дерево = РаботаСоСценариямиАвтоматизацииСервер.ВосстановитьДеревоСценарияИзТаблицыЗначений(Объект.Действие);
	ЗначениеВДанныеФормы(Дерево, ДеревоСценария);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ИзменитьПараметрыВОбъекте(ПараметрыКомандАвтоматизации);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВосстановитьДеревоИзТаблицыЗначений();
КонецПроцедуры

