#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

Функция ПолучитьДанные(
	Знач ОпорнаяДата,
	Знач НачальноеСмещение,
	Знач ЧислоТочек,
	Знач Шаг, 
	Статистика = Неопределено, 
	ВычислитьАгрегатныеЗначения = Истина, 
	ВычислитьГоризонтАктуальности = Ложь,
	РежимСдвига = Ложь
) Экспорт
	
    ЭтотОбъектКластер = ЭтотОбъект.Кластер;
		
	Запрос = Новый Запрос;
	
	ЗапросТекст = "ВЫБРАТЬ
	|	ОбъединенныйЗапрос.Время КАК Время,
	|	ОбъединенныйЗапрос.ТекущееЗначение КАК ТекущееЗначение,
	|	ОбъединенныйЗапрос.ИнформационнаяБаза КАК ОбъектКонтроля,
	|	ОбъединенныйЗапрос.НомерИнтервала КАК НомерИнтервала
	|	
	|ПОМЕСТИТЬ ВТ_ВыборкаЗамеров
	|ИЗ
	|(ВЫБРАТЬ
	|	ОсновнаяТаблицаЗамеров.Период КАК Время,
	|	СУММА(ОсновнаяТаблицаЗамеров.Количество) КАК ТекущееЗначение,
	|	ОсновнаяТаблицаЗамеров.ИнформационнаяБаза КАК ИнформационнаяБаза,
	|	%ИндексацияИнтервалов
	|
	|ИЗ
	|	РегистрСведений.ЧислоСеансов КАК ОсновнаяТаблицаЗамеров
	|ГДЕ
	|	%УсловиеНаИнтервалДат
	|	%УсловиеНаБазу
    |   %УсловиеНаКластер
    |   И ВидПриложения В (&ВидыПриложений) 
	|	
	|СГРУППИРОВАТЬ ПО
	|	Период, ИнформационнаяБаза
	|
	|%ЗапросНаНачальноеЗначение
	|) КАК ОбъединенныйЗапрос";
	
	ШаблонЗапросаНачальногоЗначения = " 
	|ВЫБРАТЬ
	|	ВложенныйЗапрос%НомерЗапроса.Время КАК Время,
	|	ВложенныйЗапрос%НомерЗапроса.ТекущееЗначение КАК ТекущееЗначение,
	|	ВложенныйЗапрос%НомерЗапроса.ИнформационнаяБаза КАК ИнформационнаяБаза,
	|	-1 КАК НомерИнтервала
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ОсновнаяТаблицаЗамеров.Период КАК Время,
	|		СУММА(ОсновнаяТаблицаЗамеров.Количество) КАК ТекущееЗначение,
	|		ОсновнаяТаблицаЗамеров.ИнформационнаяБаза КАК ИнформационнаяБаза
	|		ИЗ
	|			РегистрСведений.ЧислоСеансов КАК ОсновнаяТаблицаЗамеров
	|		ГДЕ
	|			ОсновнаяТаблицаЗамеров.ИнформационнаяБаза = &ИнформационнаяБаза%НомерЗапроса
    |           %УсловиеНаКластер
	|			И ОсновнаяТаблицаЗамеров.Период < &ВремяЗамеровНачало
    |           И ВидПриложения В (&ВидыПриложений)
	|	СГРУППИРОВАТЬ ПО
	|		Период, ИнформационнаяБаза
	|	УПОРЯДОЧИТЬ ПО
	|		Период УБЫВ
	|	) КАК ВложенныйЗапрос%НомерЗапроса " ;
	
	ЗапросНачальныхЗначений = "";
	НомерБазы = 1;
	Для Каждого БазаСтрока Из ЭтотОбъект.ИнформационныеБазы Цикл
		БазаСсылка = БазаСтрока.ИнформационнаяБазаСсылка;
		НомерБазыСтрокой = ОбщийКлиентСервер.ЧислоВСтроку(НомерБазы);
		ТекстПодзапроса = СтрЗаменить(ШаблонЗапросаНачальногоЗначения, "%НомерЗапроса", НомерБазыСтрокой);
		Запрос.УстановитьПараметр("ИнформационнаяБаза" + НомерБазы, БазаСсылка);
		
		ЗапросНачальныхЗначений = ЗапросНачальныхЗначений + " ОБЪЕДИНИТЬ ВСЕ" + ТекстПодзапроса;
		
		НомерБазы = НомерБазы + 1;
	КонецЦикла;
	
	ЗапросТекст = СтрЗаменить(ЗапросТекст, "%ЗапросНаНачальноеЗначение", ЗапросНачальныхЗначений);
    
    // Фильтр по кластерам 1с и базам
    Если ЭтотОбъект.ВсеКластеры Тогда
        ЗапросТекст = СтрЗаменить(ЗапросТекст, "%УсловиеНаКластер", "");
    Иначе
        ЗапросТекст = СтрЗаменить(ЗапросТекст, "%УсловиеНаКластер", "И Кластер = &Кластер");
        Запрос.УстановитьПараметр("Кластер", ЭтотОбъект.Кластер);
    КонецЕсли;
    
	// Фильтр по кластерам 1с и базам
	ПараметрыУсловийНаБазу = Новый Массив;
	ПараметрыУсловийНаБазу.Добавить(Новый Структура("ЗаменяемаяСтрока, Префикс, Постфикс", "%УсловиеНаБазу", " И ", " "));
	УстановитьФильтрПоОбъектамКонтроля(Запрос, ЗапросТекст, ПараметрыУсловийНаБазу);
    
    ВидыПриложенийЗначения = Новый Массив;
    Для Каждого ТекВидПриложения Из ВидыПриложений Цикл
        Если ТекВидПриложения.Использовать Тогда
            ВидыПриложенийЗначения.Добавить(ТекВидПриложения.ВидПриложения);
        КонецЕсли;
    КонецЦикла;
    Запрос.УстановитьПараметр("ВидыПриложений", ВидыПриложенийЗначения);
        	
	ТребуемаяДатаНачала = ОпорнаяДата + НачальноеСмещение;
	Запрос.УстановитьПараметр("ВремяЗамеровНачало", ТребуемаяДатаНачала);
	Замеры = МониторингСервер.ВыбратьДанныеПоРешеткеДат(
		ЭтотОбъект.Ссылка,
		ОпорнаяДата,
		НачальноеСмещение,
		ЧислоТочек,
		Шаг,
		Запрос,
		ЗапросТекст,
		"Период",
		Шаг
	);
	
	Если Статистика <> Неопределено Тогда
		Если ВычислитьАгрегатныеЗначения Тогда
			ДатаНачала = ОпорнаяДата + НачальноеСмещение * Шаг;
			ДатаОкончания = ОпорнаяДата + (НачальноеСмещение + ЧислоТочек - 1) * Шаг;
			ОбновитьСтатистику(ДатаНачала, ДатаОкончания, Статистика, Замеры);
            
			// вычислим параметр "Текущее" 
			Попытка
				Если Замеры.Количество() > 0 Тогда
					ТекущееЗначение = Замеры[Замеры.Количество() - 1];
				Иначе
					ТекущееЗначение = 0;
				КонецЕсли;
			Исключение
				Комментарий = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ЗаписьЖурналаРегистрации("ПолучитьДанные", УровеньЖурналаРегистрации.Ошибка, ЭтотОбъект,,Комментарий);
					
				ТекущееЗначение = 0;
			КонецПопытки;
			Сообщить(ТекущееЗначение);
			Статистика.Вставить("Текущее", ТекущееЗначение);
		КонецЕсли;
		
		Если ВычислитьГоризонтАктуальности Тогда
			Статистика.Вставить("Горизонт", ТекущаяДата());
		КонецЕсли;
	КонецЕсли;
	
	Возврат Замеры;
	
КонецФункции

Функция ПолучитьДанныеОбнаруженияИнцидентов(ОпорнаяДата, Смещение, АгрегирующаяФункция, ФорматнаяСтрокаЗначения) Экспорт
    
    Статистика = Новый Структура;
    
    ЧислоТочек = 100;
    ПолучитьДанные(ОпорнаяДата - Смещение, 0, ЧислоТочек, ЧислоТочек/100, Статистика);
    
    Если АгрегирующаяФункция = Перечисления.ФункцииОповещений.Минимум Тогда
		Значение = Статистика.Мин;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Среднее Тогда
		Значение = Статистика.Сред;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Максимум Тогда
		Значение = Статистика.Макс;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Сумма Тогда
		Значение = Статистика.Сумм;
	КонецЕсли;
    
    Данные = Новый Массив;
    Данные.Добавить(Значение);
    Если ЗначениеЗаполнено(ФорматнаяСтрокаЗначения) Тогда
        ИндексНачала = СтрНайти(ФорматнаяСтрокаЗначения, "[");
        ИндексОкончания = СтрНайти(ФорматнаяСтрокаЗначения, "]");
        Если ИндексНачала > 0 И ИндексОкончания > 0 Тогда
            ФорматнаяСтрокаЗначенияБуфер = Сред(ФорматнаяСтрокаЗначения, ИндексНачала + 1, ИндексОкончания - ИндексНачала - 1);
        Иначе
            ФорматнаяСтрокаЗначенияБуфер = ФорматнаяСтрокаЗначения;
        КонецЕсли;
        
        ЗначениеСообщить = СтрЗаменить(ФорматнаяСтрокаЗначения, "[" + ФорматнаяСтрокаЗначенияБуфер + "]", Формат(Значение, ФорматнаяСтрокаЗначенияБуфер));
    Иначе
        ЗначениеСообщить = Значение;
    КонецЕсли;
    
    Сообщить(ЭтотОбъект.Ссылка.Описание + " = " + ЗначениеСообщить);
    
    Возврат Данные;
    
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция УстановитьФильтрПоОбъектамКонтроля(
	Запрос, 
	ЗапросТекст,
	ПараметрыУсловийНаБазу
)
	
	СписокБаз = СписокБаз();
	Если СписокБаз.Количество() = 1 Тогда
		УсловиеНаБазу = " ОсновнаяТаблицаЗамеров.ИнформационнаяБаза = &СписокБазПерваяБаза ";
		Запрос.УстановитьПараметр("СписокБазПерваяБаза", СписокБаз[0]);
	Иначе
		УсловиеНаБазу = " ОсновнаяТаблицаЗамеров.ИнформационнаяБаза В (&СписокБаз) ";
		Запрос.УстановитьПараметр("СписокБаз", СписокБаз());
	КонецЕсли;
	
	Для Каждого ПараметрУсловий Из ПараметрыУсловийНаБазу Цикл
		ТекущееУсловиеНаБазу = УсловиеНаБазу;
		Префикс = ПараметрУсловий.Префикс;
		Постфикс = ПараметрУсловий.Постфикс;
		Если НЕ ПустаяСтрока(ТекущееУсловиеНаБазу) Тогда
			ТекущееУсловиеНаБазу = Префикс + ТекущееУсловиеНаБазу + Постфикс;
		КонецЕсли;
		ЗапросТекст = СтрЗаменить(ЗапросТекст, ПараметрУсловий.ЗаменяемаяСтрока, ТекущееУсловиеНаБазу);
	КонецЦикла;
	
КонецФункции

Функция СписокБаз()
	СписокБаз = Новый Массив;
	Для Каждого БазаСтрока Из ЭтотОбъект.ИнформационныеБазы Цикл
		СписокБаз.Добавить(БазаСтрока.ИнформационнаяБазаСсылка);
	КонецЦикла;
	Возврат СписокБаз;
КонецФункции

Функция ПолучитьТекущее(ДатаОкончания)
	Запрос = Новый Запрос;
	
	ЗапросТекст = "
	|ВЫБРАТЬ
	|	СУММА(КрайниеЗамерыКоличество.Количество) КАК ТекущееКоличество
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ОсновнаяТаблицаЗамеров.Период) КАК Период,
	|		ОсновнаяТаблицаЗамеров.ИнформационнаяБаза КАК ИнформационнаяБаза
	|	ИЗ
	|		РегистрСведений.ЧислоСеансов КАК ОсновнаяТаблицаЗамеров
	|	ГДЕ
	|		%УсловиеНаБазу 
	|		ОсновнаяТаблицаЗамеров.Период <= &ДатаОкончания
	|	СГРУППИРОВАТЬ ПО
	|		ИнформационнаяБаза
	|	) КАК КрайниеЗамеры
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ЧислоСеансов КАК КрайниеЗамерыКоличество
	|ПО
	|	КрайниеЗамерыКоличество.Период = КрайниеЗамеры.Период
	|	И КрайниеЗамерыКоличество.ИнформационнаяБаза = КрайниеЗамеры.ИнформационнаяБаза
	|";
	
	ПараметрыУсловийНаБазу = Новый Массив;
	ПараметрыУсловийНаБазу.Добавить(Новый Структура("ЗаменяемаяСтрока, Префикс, Постфикс", "%УсловиеНаБазу", " ", " И "));
	ПараметрыУсловийНаБазу.Добавить(Новый Структура("ЗаменяемаяСтрока, Префикс, Постфикс", "%ВсегоУсловиеНаБазу", " ", " И "));
	
	УстановитьФильтрПоОбъектамКонтроля(Запрос, ЗапросТекст, 
		ПараметрыУсловийНаБазу
	);
	
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	Запрос.Текст = ЗапросТекст;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0;
	Иначе
		Возврат Результат.Выгрузить()[0].ТекущееКоличество;
	КонецЕсли;
КонецФункции

Функция ОбновитьСтатистику(Знач ДатаНачала, Знач ДатаОкончания, Статистика, Замеры) Экспорт
	
    ТЗнЗамеры = Новый ТаблицаЗначений;
    ТЗнЗамеры.Колонки.Добавить("Замер");
    Для Каждого Замер Из Замеры Цикл
        НоваяСтрока = ТЗнЗамеры.Добавить();
        НоваяСтрока.Замер = Замер;
    КонецЦикла;
           
    АнализДанных = Новый АнализДанных;
	АнализДанных.ТипАнализа = Тип("АнализДанныхОбщаяСтатистика");
	АнализДанных.ИсточникДанных = ТЗнЗамеры;
	РезультатАнализа = АнализДанных.Выполнить();
    
    Если РезультатАнализа.НепрерывныеПоля.Количество() > 0 И РезультатАнализа.НепрерывныеПоля.Замер.Количество > 0 Тогда
        
        Статистика.Вставить("Сред", РезультатАнализа.НепрерывныеПоля.Замер.Среднее);
        Статистика.Вставить("Макс", РезультатАнализа.НепрерывныеПоля.Замер.Максимум);
        Статистика.Вставить("Мин", РезультатАнализа.НепрерывныеПоля.Замер.Минимум);
        Статистика.Вставить("Всего", РезультатАнализа.НепрерывныеПоля.Количество());
        Статистика.Вставить("Кол", РезультатАнализа.НепрерывныеПоля.Количество());
        Статистика.Вставить("Сумм", ТЗнЗамеры.Итог("Замер"));
        
    Иначе
        
        Статистика.Вставить("Сред", 0);
        Статистика.Вставить("Макс", 0);
        Статистика.Вставить("Мин", 0);
        Статистика.Вставить("Всего", 0);
        Статистика.Вставить("Кол", 0);
        Статистика.Вставить("Сумм", 0);
        
    КонецЕсли;

    ТекущееЗначение = ПолучитьТекущее(ДатаОкончания);
    Статистика.Вставить("Текущее", ТекущееЗначение);
    
КонецФункции

Функция ИдентификаторВариантаПоказателя() Экспорт
	
    //ФильтрПоОбъектамКонтроля = Новый Массив;
    //ФильтрПоОбъектамКонтроля.Добавить(Новый Структура(
    //	"НазваниеРеквизитаВсеОбъектыКонтроля, НазваниеРеквизитаОбъектКонтроля",
    //	"ВсеКластеры",
    //	"Кластер"
    //));
    //ИД = МониторингСервер.ОбщаяЧастьИдентификатораВариантаПоказателя(
    //	ЭтотОбъект,
    //	ФильтрПоОбъектамКонтроля
    //);
    //
    //РазделительПолей = "__";
    //ИД = ИД + РазделительПолей;
    //Для Каждого СтрокаБазы Из ЭтотОбъект.ИнформационныеБазы Цикл
    //	ИД = ИД + "_" + Строка(СтрокаБазы.ИнформационнаяБазаСсылка.УникальныйИдентификатор());
    //КонецЦикла;
	
	//Возврат ИД;
    
    Возврат Строка(ЭтотОбъект.Ссылка.УникальныйИдентификатор());
КонецФункции

// Возвращает текстовую строку, описывающую тип показателя
//
// Возвращаемое значение:
//  Строка
//
Функция ИдентификаторТипаПоказателя() Экспорт
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Метаданные().РасширенноеПредставлениеОбъекта) Тогда
		Возврат ЭтотОбъект.Метаданные().РасширенноеПредставлениеОбъекта;
	ИначеЕсли ЗначениеЗаполнено(ЭтотОбъект.Метаданные().ПредставлениеОбъекта) Тогда
		Возврат ЭтотОбъект.Метаданные().ПредставлениеОбъекта;
	Иначе
		Возврат ЭтотОбъект.Метаданные().Синоним;
	КонецЕсли;
	
КонецФункции

// Заполняет параметры по умолчанию отображения показателя на графике
// 
// Параметры:
//  ПараметрОповещения - Структура - см.МониторингСервер.ПараметрОповещенияПоказательЗаписан()
//
Процедура ЗаполнитьПараметрыОтображенияПоУмолчанию(Знач ПараметрОповещения) Экспорт
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	
	ПараметрОповещения.Цвет = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
	ПараметрОповещения.АвтоМасштаб = Истина;
	ПараметрОповещения.Масштаб = 1;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
    КонецЕсли;
    
    Если ДополнительныеСвойства.Свойство("Обновление") И ДополнительныеСвойства.Обновление Тогда
        Возврат;
    КонецЕсли;
    	
	Если ПустаяСтрока(Описание) Тогда
		Описание = Описание();
	КонецЕсли;
	
КонецПроцедуры

Функция Описание()
	
	НаименованиеВСтроку = ИдентификаторТипаПоказателя();
	
	НастройкиВСтроку = "";
	
	НастройкиВСтроку = НастройкиВСтроку + ?(ПустаяСтрока(НастройкиВСтроку), "", ", ") + "информационные базы = [" 
		+ МониторингСервер.ИнформационныеБазыВСтроку(ИнформационныеБазы.ВыгрузитьКолонку("ИнформационнаяБазаСсылка")) + "]";
	
	Если НЕ ПустаяСтрока(НастройкиВСтроку) Тогда
		НаименованиеВСтроку = НаименованиеВСтроку + " (" + НастройкиВСтроку + ")";
	КонецЕсли;
	
	Возврат НаименованиеВСтроку;
	
КонецФункции

// Расчитывает данные показателя по периодам
//
//	Параметры:
// 		МенеджерВременныхТаблиц	- МенеджерВременныхТаблиц. Временные таблицы с периодами и показателями.
// 		Детализация				- ТипДополненияПериодаКомпоновкиДанных. Период детализации.
//
//	Возвращаемое значение:
//		ТаблицаДанных. ТаблицаЗначений. Данные показателя.
//
Функция РасчитатьПоказатель(МенеджерВременныхТаблиц, Детализация = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПоказательМониторинга", ЭтотОбъект.Владелец);
	Запрос.УстановитьПараметр("Показатель", ЭтотОбъект.Ссылка);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПодготовительная.ДатаТочки КАК ДатаТочки,
	|	ТаблицаПодготовительная.ДатаТочкиСледующая КАК ДатаТочкиСледующая,
	|	ТаблицаПодготовительная.ДатаТочкиДанные КАК ДатаТочкиДанные,
	|	ТаблицаПодготовительная.ДатаТочкиДанныеСледующая КАК ДатаТочкиДанныеСледующая
	|ИЗ
	|	ТаблицаПодготовительная КАК ТаблицаПодготовительная
	|ГДЕ
	|	ТаблицаПодготовительная.ПоказательМониторинга = &ПоказательМониторинга
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТочки
	|";
	
	ВыборкаТочки = Запрос.Выполнить().Выбрать();
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПодготовительная.ДатаТочки КАК ДатаТочки,
	|	МАКСИМУМ(ВложенныйЗапрос.Значение) КАК Максимальное,
	|	МИНИМУМ(ВложенныйЗапрос.Значение) КАК Минимальное,
	|	СУММА(ВложенныйЗапрос.Значение) КАК Значение
	|
	|ИЗ
	|	ТаблицаПодготовительная КАК ТаблицаПодготовительная
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|
	|	(
	|	ВЫБРАТЬ
	|		ДАТАВРЕМЯ(1,1,1,0,0,0) КАК ДатаТочки,
	|		0 КАК Значение
	|	ГДЕ
	|		Ложь
	|";
	
	СчТочек = 1;
	
	Пока ВыборкаТочки.Следующий() Цикл
		
		ИмяПараметра				= "Точка" + Формат(ВыборкаТочки.ДатаТочки, "ДФ=yyyyMMddHHmmss");
		ИмяПараметраСледующая		= "ТочкаСледующая" + Формат(ВыборкаТочки.ДатаТочкиСледующая, "ДФ=yyyyMMddHHmmss");
		ИмяПараметраДанные			= "ТочкаДанные" + Формат(ВыборкаТочки.ДатаТочкиДанные, "ДФ=yyyyMMddHHmmss");
		ИмяПараметраДанныеСледующая	= "ТочкаДанныеСледующая" + Формат(ВыборкаТочки.ДатаТочкиДанныеСледующая, "ДФ=yyyyMMddHHmmss");
		
		Запрос.УстановитьПараметр(ИмяПараметра, ВыборкаТочки.ДатаТочки);
		Запрос.УстановитьПараметр(ИмяПараметраСледующая, ВыборкаТочки.ДатаТочкиСледующая);
		Запрос.УстановитьПараметр(ИмяПараметраДанные, ВыборкаТочки.ДатаТочкиДанные);
		Запрос.УстановитьПараметр(ИмяПараметраДанныеСледующая, ВыборкаТочки.ДатаТочкиДанныеСледующая);
		
		Если Детализация = ТипДополненияПериодаКомпоновкиДанных.Минута
			ИЛИ Детализация = ТипДополненияПериодаКомпоновкиДанных.Секунда 
			ИЛИ СчТочек = 1 ИЛИ СчТочек = ВыборкаТочки.Количество()  Тогда
			
			ТекстЗапросаШаблон = "
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		ОсновнаяТаблицаЗамеровИтог.ДатаТочки КАК ДатаТочки,
			|		СУММА(ОсновнаяТаблицаЗамеровИтог.Значение) КАК Значение
			|	ИЗ	
			|		(
			|			ВЫБРАТЬ
			|				&ДатаТочкиТекущая КАК ДатаТочки,
			|				ЧислоСеансовПользователейИнформационныеБазы.ИнформационнаяБазаСсылка,
			|				СРЕДНЕЕ(ОсновнаяТаблицаЗамеров.Количество) КАК Значение
			|			ИЗ
			|				РегистрСведений.ЧислоСеансов КАК ОсновнаяТаблицаЗамеров
			|
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЧислоСеансовПользователей.ИнформационныеБазы КАК ЧислоСеансовПользователейИнформационныеБазы
			|				ПО ОсновнаяТаблицаЗамеров.ИнформационнаяБаза = ЧислоСеансовПользователейИнформационныеБазы.ИнформационнаяБазаСсылка
			|				И ЧислоСеансовПользователейИнформационныеБазы.Ссылка = &Показатель
			|
			|			ГДЕ
			|				ОсновнаяТаблицаЗамеров.Период > &ДатаТочкиДанныеТекущая
			|				И ОсновнаяТаблицаЗамеров.Период <= &ДатаТочкиДанныеСледующая
			|
			|			СГРУППИРОВАТЬ ПО
			|				ЧислоСеансовПользователейИнформационныеБазы.ИнформационнаяБазаСсылка
			|		) КАК ОсновнаяТаблицаЗамеровИтог
			|
			|	СГРУППИРОВАТЬ ПО
			|		ОсновнаяТаблицаЗамеровИтог.ДатаТочки
			|";
			
		Иначе
			
			ТекстЗапросаШаблон = "
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		ОсновнаяТаблицаЗамеровИтог.ДатаТочки КАК ДатаТочки,
			|		СУММА(ОсновнаяТаблицаЗамеровИтог.Значение) КАК Значение
			|	ИЗ	
			|		(
			|			ВЫБРАТЬ
			|				&ДатаТочкиТекущая КАК ДатаТочки,
			|				ЧислоСеансовПользователейИнформационныеБазы.ИнформационнаяБазаСсылка,
			|				ВЫБОР КОГДА ОсновнаяТаблицаЗамеров.ЧислоСеансовКоличество = 0 ТОГДА 0 ИНАЧЕ ОсновнаяТаблицаЗамеров.ЧислоСеансовСумма / ОсновнаяТаблицаЗамеров.ЧислоСеансовКоличество КОНЕЦ КАК Значение
			|			ИЗ
			|				РегистрСведений.СтатистикаПоИнформационнымБазамИтоги КАК ОсновнаяТаблицаЗамеров
			|
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЧислоСеансовПользователей.ИнформационныеБазы КАК ЧислоСеансовПользователейИнформационныеБазы
			|				ПО ОсновнаяТаблицаЗамеров.ИнформационнаяБаза = ЧислоСеансовПользователейИнформационныеБазы.ИнформационнаяБазаСсылка
			|				И ЧислоСеансовПользователейИнформационныеБазы.Ссылка = &Показатель
			|
			|			ГДЕ
			|				ОсновнаяТаблицаЗамеров.ПериодЧас > &ДатаТочкиДанныеТекущая
			|				И ОсновнаяТаблицаЗамеров.ПериодЧас <= &ДатаТочкиДанныеСледующая
			|
			|		) КАК ОсновнаяТаблицаЗамеровИтог
			|
			|	СГРУППИРОВАТЬ ПО
			|		ОсновнаяТаблицаЗамеровИтог.ДатаТочки
			|";
			
			Если Детализация <> ТипДополненияПериодаКомпоновкиДанных.Час Тогда
				ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ПериодЧас", "Период");
			КонецЕсли;
			
		КонецЕсли;
		
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&ДатаТочкиТекущая", "&" + ИмяПараметра);
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&ДатаТочкиСледующая", "&" + ИмяПараметраСледующая);
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&ДатаТочкиДанныеТекущая", "&" + ИмяПараметраДанные);
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&ДатаТочкиДанныеСледующая", "&" + ИмяПараметраДанныеСледующая);
		
		Запрос.Текст = Запрос.Текст + "
		|" + ТекстЗапросаШаблон;
		
		СчТочек = СчТочек + 1;
		
	КонецЦикла;
	
	Запрос.Текст = Запрос.Текст + "
	|
	|	) КАК ВложенныйЗапрос
	|	ПО ТаблицаПодготовительная.ПоказательМониторинга = &ПоказательМониторинга
	|	И ВложенныйЗапрос.ДатаТочки = ТаблицаПодготовительная.ДатаТочки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПодготовительная.ДатаТочки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТочки
	|";

	ТаблицаДетальныхДанных = Запрос.Выполнить().Выгрузить();
	
	МассивПолей = Новый Массив();
	МассивПолей.Добавить("Значение");
	
	РасчетИтоговПоказателей.ЗаполнитьПустыеДанныеПредыдущимиЗначениями(ТаблицаДетальныхДанных, МассивПолей, Null);
	
	Если ЭтотОбъект.Владелец.ПоказыватьТренд Тогда
		РасчетИтоговПоказателей.СгладитьДанные(ТаблицаДетальныхДанных, ЭтотОбъект.Владелец.ТипСглаживания, ЭтотОбъект.Владелец.КоличествоУсредняемыхЗначений);
	КонецЕсли;
	
	Возврат ТаблицаДетальныхДанных;
	
КонецФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    
    Если ВсеКластеры Тогда
        
        Индекс = ПроверяемыеРеквизиты.Найти("Кластер");
        Если Индекс <> Неопределено Тогда
            ПроверяемыеРеквизиты.Удалить(Индекс);
        КонецЕсли;
        
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#КонецЕсли

