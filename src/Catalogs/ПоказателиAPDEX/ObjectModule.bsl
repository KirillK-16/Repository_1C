#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

Функция ПолучитьДанные(
	Знач ОпорнаяДата,
	Знач НачальноеСмещение,
	Знач ЧислоТочек,
	Знач Шаг, 
	Статистика = Неопределено, 
	ВычислитьАгрегатныеЗначения = Истина, 
	ВычислитьГоризонтАктуальности = Ложь,
	РежимСдвига = Ложь
) Экспорт
	Если ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.APDEX Тогда
		Данные = ПолучитьДанныеAPDEX(
						ОпорнаяДата,
						НачальноеСмещение,
						ЧислоТочек,
						Шаг,
						Статистика,
						ВычислитьАгрегатныеЗначения,
						ВычислитьГоризонтАктуальности,
						РежимСдвига);
	ИначеЕсли ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.СреднееВремяХудшихЗамеров Тогда
		Данные = ПолучитьСреднееВремяХудшихЗамеров(
						ОпорнаяДата,
						НачальноеСмещение,
						ЧислоТочек,
						Шаг,
						Статистика,
						ВычислитьАгрегатныеЗначения,
						ВычислитьГоризонтАктуальности,
						РежимСдвига);
	ИначеЕсли ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.КоличествоОперацийПревышенияЦелевогоВремени Тогда
		Данные = ПолучитьКоличествоОперацийПревышенияЦелевогоВремени(
						ОпорнаяДата,
						НачальноеСмещение,
						ЧислоТочек,
						Шаг,
						Статистика,
						ВычислитьАгрегатныеЗначения,
						ВычислитьГоризонтАктуальности,
						РежимСдвига);
	ИначеЕсли ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.ПроцентПользователейПревышенияЦелевогоВремени Тогда
		Данные = ПолучитьПроцентПользователейПревышенияЦелевогоВремени(
						ОпорнаяДата,
						НачальноеСмещение,
						ЧислоТочек,
						Шаг,
						Статистика,
						ВычислитьАгрегатныеЗначения,
						ВычислитьГоризонтАктуальности,
						РежимСдвига);
	ИначеЕсли ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.ПроцентПользователейИзмененияЦелевогоВремени Тогда
		Данные = ПолучитьПроцентПользователейИзмененияЦелевогоВремени(
						ОпорнаяДата,
						НачальноеСмещение,
						ЧислоТочек,
						Шаг,
						Статистика,
						ВычислитьАгрегатныеЗначения,
						ВычислитьГоризонтАктуальности,
						РежимСдвига);
	КонецЕсли;
	
	Возврат Данные;
    
КонецФункции

Функция ПолучитьДанныеОбнаруженияИнцидентов(ОпорнаяДата, Смещение, АгрегирующаяФункция, ФорматнаяСтрокаЗначения) Экспорт
    
    Статистика = Новый Структура;
    Шаг = Смещение/10;
    ПолучитьДанные(ОпорнаяДата - Смещение, 0, 11, Шаг, Статистика, Истина);
    
    Если АгрегирующаяФункция = Перечисления.ФункцииОповещений.Минимум Тогда
		Значение = Статистика.Мин;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Среднее Тогда
		Значение = Статистика.Сред;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Максимум Тогда
		Значение = Статистика.Макс;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Сумма Тогда
		Значение = Статистика.Сумм;
	КонецЕсли;
    
    Данные = Новый Массив;
    Данные.Добавить(Значение);
    Если ЗначениеЗаполнено(ФорматнаяСтрокаЗначения) Тогда
        ИндексНачала = СтрНайти(ФорматнаяСтрокаЗначения, "[");
        ИндексОкончания = СтрНайти(ФорматнаяСтрокаЗначения, "]");
        Если ИндексНачала > 0 И ИндексОкончания > 0 Тогда
            ФорматнаяСтрокаЗначенияБуфер = Сред(ФорматнаяСтрокаЗначения, ИндексНачала + 1, ИндексОкончания - ИндексНачала - 1);
        Иначе
            ФорматнаяСтрокаЗначенияБуфер = ФорматнаяСтрокаЗначения;
        КонецЕсли;
        
        ЗначениеСообщить = СтрЗаменить(ФорматнаяСтрокаЗначения, "[" + ФорматнаяСтрокаЗначенияБуфер + "]", Формат(Значение, ФорматнаяСтрокаЗначенияБуфер));
    Иначе
        ЗначениеСообщить = Значение;
    КонецЕсли;
    
    Сообщить(ЭтотОбъект.Ссылка.Описание + " = " + ЗначениеСообщить);
    
    Возврат Данные;
    
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеAPDEX(
	Знач ОпорнаяДата,
	Знач НачальноеСмещение,
	Знач ЧислоТочек,
	Знач Шаг,
	Статистика = Неопределено,
	ВычислитьАгрегатныеЗначения = Истина,
	ВычислитьГоризонтАктуальности = Ложь,
	РежимСдвига = Ложь
	)
	ДатаНачала = ОпорнаяДата + НачальноеСмещение * Шаг;
	ДатаОкончания = ОпорнаяДата + (НачальноеСмещение + ЧислоТочек - 1) * Шаг;
	ОбщиеПараметрыЗапроса = ОбщиеПараметрыЗапроса(ДатаНачала, ДатаОкончания);
	
	ДатаНачалаСмещенная = ОбщиеПараметрыЗапроса.ДатаНачала;
	ДатаОкончанияСмещенная = ОбщиеПараметрыЗапроса.ДатаОкончания;
	ТипСпискаПользователей = ОбщиеПараметрыЗапроса.ТипСпискаПользователей;
	КлючевыеОперацииВМассив = ОбщиеПараметрыЗапроса.КлючевыеОперации;
	ВыбраннаяИнформационнаяБаза = ОбщиеПараметрыЗапроса.ИнформационнаяБаза;
	ВыбранныеПользователи = ОбщиеПараметрыЗапроса.ВыбранныеПользователи;
	
	Данные = КонтрольПроизводительности.ДинамикаApdex(  
	ДатаНачалаСмещенная, 
	ЧислоТочек, 
	Шаг, 
	ЭтотОбъект.ПериодAPDEX,
	ВыбраннаяИнформационнаяБаза,
	КлючевыеОперацииВМассив,
	ВыбранныеПользователи,
	ТипСпискаПользователей
	);
	
	Если Статистика <> Неопределено Тогда
		Если ВычислитьАгрегатныеЗначения Тогда
			Статистика = МониторингКлиентСервер.ВычислитьСредниеЗначения(Данные);
			Статистика.Вставить("ПоТочкам");
			// вычислим параметр "Текущее"
			Попытка
				ТекущееЗначение = Данные[Данные.Количество() - 1];
			Исключение
				Инфо = ИнформацияОбОшибке();
				Комментарий =
					"Описание = '" +Инфо.Описание + "', " +
					"ИмяМодуля = '" + Инфо.ИмяМодуля + "', " +
					"НомерСтроки = '" + Инфо.НомерСтроки + "', " +
					"ИсходнаяСтрока = '" + Инфо.ИсходнаяСтрока + "'.";
			
				ЗаписьЖурналаРегистрации(
					"Функция ПолучитьДанныеAPDEX(...)",
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Справочники.ПоказателиAPDEX.МодульОбъекта,
					,
					Комментарий);
				
				ТекущееЗначение = 0;
			КонецПопытки;
			Статистика.Вставить("Текущее", ТекущееЗначение);
			
			Статистика.Вставить("Всего", ВсегоЗаПериод(ДатаНачала, ДатаОкончания));
		КонецЕсли;
		
		Если ВычислитьГоризонтАктуальности Тогда
			Запрос = Новый Запрос;
			Если ВыбраннаяИнформационнаяБаза = Неопределено Тогда
				ВыбраннаяИнформационнаяБаза = Новый Массив;
				Запрос.Текст = "
				|ВЫБРАТЬ
				|	ОбъектыКонтроля.Ссылка КАК ИнформационнаяБаза
				|ИЗ
				|	Справочник.ОбъектыКонтроля КАК ОбъектыКонтроля
				|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
				|	Справочник.ВидыОбъектовКонтроля КАК ВидыОбъектовКонтроля
				|ПО
				|	ОбъектыКонтроля.Владелец = ВидыОбъектовКонтроля.Ссылка
				|	И ВидыОбъектовКонтроля.Ссылка = &ИнформационнаяБаза
				|";
				Запрос.УстановитьПараметр("ИнформационнаяБаза", Справочники.ВидыОбъектовКонтроля.ИнформационнаяБаза);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					ВыбраннаяИнформационнаяБаза.Добавить(ВыборкаДетальныеЗаписи.ИнформационнаяБаза);
				КонецЦикла;
			КонецЕсли;
			
			Если ВыбраннаяИнформационнаяБаза.Количество() <> 0 Тогда
				НомерКрайний = ВыбраннаяИнформационнаяБаза.Количество() - 1;
				ТекстЗапроса = "";
				Для ТекЭлемент = 0 По НомерКрайний Цикл
					ТекЭлементСтр = Формат(ТекЭлемент, "ЧН=0; ЧГ=0");
					ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
					|	МАКСИМУМ(ЗамерыПроизводительности.ДатаЗамераUTC) КАК ДатаЗамера
					|ИЗ
					|	РегистрСведений.ЗамерыПроизводительности КАК ЗамерыПроизводительности
					|ГДЕ
					|	ЗамерыПроизводительности.ОбъектКонтроля = &ОбъектКонтроля" + ТекЭлементСтр + "
					|ОБЪЕДИНИТЬ ВСЕ
					|";
					Запрос.УстановитьПараметр("ОбъектКонтроля" + ТекЭлементСтр, ВыбраннаяИнформационнаяБаза[ТекЭлемент]);
				КонецЦикла;
				ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса) - 15);
				ТекстЗапроса = "
				|ВЫБРАТЬ
				|	МИНИМУМ(ДатаЗамера) КАК Время
				|ИЗ
				|(
				|" + ТекстЗапроса + "
				|) КАК ВыборкаМаксимумов
				|";
				Запрос.Текст = ТекстЗапроса;
				Результат = Запрос.Выполнить();
				Если Результат.Пустой() Тогда
					Статистика.Вставить("Горизонт", Неопределено);
				Иначе
					Выборка = Результат.Выбрать();
					Если Выборка.Следующий() И Выборка.Время <> Null Тогда
						// Время универсальное, но его необходимо вернуть в том часовом поясе,
						// в котором находится клиент
						Статистика.Вставить("Горизонт", МестноеВремя(Дата(1,1,1) + Выборка.Время/1000, ЧасовойПоясСеанса()));
					Иначе
						Статистика.Вставить("Горизонт", Неопределено);
					КонецЕсли;
				КонецЕсли;
			Иначе
				Статистика.Вставить("Горизонт", Неопределено);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Данные;
КонецФункции

Функция ПолучитьЗначенияФильтра()
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПоказателиAPDEXКлючевыеОперации.ИнформационнаяБаза КАК ИнформационнаяБаза,
	|	ПоказателиAPDEXКлючевыеОперации.ИдентификаторКлючевойОперации КАК ИдентификаторКлючевойОперации,
	|	КлючевыеОперации.КоличествоВыбранных КАК КоличествоВыбранных,
	|	КлючевыеОперации.КоличествоВсего КАК КоличествоВсего
	|ИЗ
	|	Справочник.ПоказателиAPDEX.КлючевыеОперации КАК ПоказателиAPDEXКлючевыеОперации
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ
	|		КлючевыеОперацииРегистр.ИнформационнаяБаза КАК ИнформационнаяБаза,
	|		КОЛИЧЕСТВО(КлючевыеОперацииСправочник.ИдентификаторКлючевойОперации) КАК КоличествоВыбранных,
	|		КОЛИЧЕСТВО(КлючевыеОперацииРегистр.УникальныйИдентификатор) КАК КоличествоВсего
	|	ИЗ
	|		РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК КлючевыеОперацииРегистр
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ПоказателиAPDEX.КлючевыеОперации КАК КлючевыеОперацииСправочник
	|	ПО
	|		КлючевыеОперацииРегистр.ИнформационнаяБаза = КлючевыеОперацииСправочник.ИнформационнаяБаза
	|		И КлючевыеОперацииРегистр.УникальныйИдентификатор = КлючевыеОперацииСправочник.ИдентификаторКлючевойОперации
	|		И КлючевыеОперацииСправочник.Ссылка = &Ссылка
	|	СГРУППИРОВАТЬ ПО
	|		КлючевыеОперацииРегистр.ИнформационнаяБаза
	|	) КАК КлючевыеОперации
	|ПО
	|	КлючевыеОперации.ИнформационнаяБаза = ПоказателиAPDEXКлючевыеОперации.ИнформационнаяБаза
	|ГДЕ
	|	ПоказателиAPDEXКлючевыеОперации.Ссылка = &Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	ПоказателиAPDEXКлючевыеОперации.ИнформационнаяБаза
	|";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Результат = Запрос.Выполнить();
	
	ЗначенияФильтра = Новый Массив;
	КлючевыеПоказатели = Новый Массив;
	ТекущаяБаза = Неопределено;
	Если ЭтотОбъект.ТипСпискаПользователей <> Перечисления.ТипыСпискаПользователей.Все И ЭтотОбъект.Пользователи.Количество() <> 0 Тогда
		НуженФильтрПользователи = Истина;
		ПользователиФильтр = Новый Массив;
		Для Каждого ТекПользователь Из ЭтотОбъект.Пользователи Цикл
			ПользователиФильтр.Добавить(ТекПользователь.ИмяПользователя);
		КонецЦикла;
	Иначе
		НуженФильтрПользователи = Ложь;
		ПользователиФильтр = Неопределено;
	КонецЕсли;
		
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		//Если выбраны все ключевые операции, то фильтровать не надо
		НуженФильтрКлючевыеОперации = ?(Выборка.КоличествоВыбранных <> Выборка.КоличествоВсего, Истина, Ложь);
		Если Выборка.ИнформационнаяБаза <> ТекущаяБаза И ТекущаяБаза <> Неопределено Тогда
			ТекущийФильтр = Новый Структура();
			ТекущийФильтр.Вставить("ИнформационнаяБаза", ТекущаяБаза);
			
			Если НуженФильтрКлючевыеОперации Тогда
				ТекущийФильтр.Вставить("КлючевыеПоказатели", КлючевыеПоказатели);
			Иначе
				ТекущийФильтр.Вставить("КлючевыеПоказатели", Неопределено);
			КонецЕсли;
			ТекущийФильтр.Вставить("Пользователи", ПользователиФильтр);
			ТекущийФильтр.Вставить("ТипСпискаПользователей", ЭтотОбъект.ТипСпискаПользователей);
			ЗначенияФильтра.Добавить(ТекущийФильтр);
			
			КлючевыеПоказатели = Новый Массив;
		КонецЕсли;
		
		Если НуженФильтрКлючевыеОперации Тогда
			КлючевыеПоказатели.Добавить(Выборка.ИдентификаторКлючевойОперации);
		КонецЕсли;
				
		ТекущаяБаза = Выборка.ИнформационнаяБаза;
	КонецЦикла;
	ТекущийФильтр = Новый Структура();
	ТекущийФильтр.Вставить("ИнформационнаяБаза", ТекущаяБаза);
	Если НуженФильтрКлючевыеОперации Тогда
		ТекущийФильтр.Вставить("КлючевыеПоказатели", КлючевыеПоказатели);
	Иначе
		ТекущийФильтр.Вставить("КлючевыеПоказатели", Неопределено);
	КонецЕсли;
	ТекущийФильтр.Вставить("Пользователи", ПользователиФильтр);	
	ТекущийФильтр.Вставить("ТипСпискаПользователей", ЭтотОбъект.ТипСпискаПользователей);
	ЗначенияФильтра.Добавить(ТекущийФильтр);
	
	Возврат ЗначенияФильтра;
КонецФункции

Функция ПодготовитьМассивДат(ОпорнаяДата, НачальноеСмещение, ЧислоТочек, Шаг)
	МассивДат = Новый Массив;
	
	ДатаНачала = ОпорнаяДата + НачальноеСмещение * Шаг;
	Для ТекущаяТочка = 0 По ЧислоТочек - 1 Цикл
		МассивДат.Добавить(ДатаНачала + ТекущаяТочка * Шаг);
	КонецЦикла;
		
	Возврат МассивДат;
КонецФункции

Функция ПолучитьСреднееВремяХудшихЗамеровНаДату(Фильтр, Дата, КоличествоХудших, Запрос)
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ISNULL(СРЕДНЕЕ(ВыборкаХудших.Значение),0) КАК Значение
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ %КоличествоХудших
	|		ВыборкаЗамеров.Значение КАК Значение
	|	ИЗ
	|		(ВЫБРАТЬ ПЕРВЫЕ %ПериодAPDEX
	|			ЗамерыПроизводительности.Значение КАК Значение
	|		ИЗ
	|			РегистрСведений.ЗамерыПроизводительности КАК ЗамерыПроизводительности
	|		ГДЕ
	|			ЗамерыПроизводительности.ОбъектКонтроля = &ОбъектКонтроля
	|			И ЗамерыПроизводительности.ДатаЗамераUTC <= &ДатаЗамера
	|			%УслКлючевыеОперации
	|			%УслПользователи
	|       УПОРЯДОЧИТЬ ПО
	|			ЗамерыПроизводительности.ДатаЗамераUTC УБЫВ
	|		) КАК ВыборкаЗамеров
	|	УПОРЯДОЧИТЬ ПО
	|		ВыборкаЗамеров.Значение УБЫВ
	|	) КАК ВыборкаХудших
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%КоличествоХудших", КоличествоХудших);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПериодAPDEX", Формат(ЭтотОбъект.ПериодAPDEX, "ЧН=0; ЧГ=0"));
	
	//Условие по ключевым операциям
	Если Фильтр.КлючевыеПоказатели = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслКлючевыеОперации", "");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслКлючевыеОперации", "И ЗамерыПроизводительности.ИдентификаторКлючевойОперации В (&ИдентификаторыКлючевыхОпераций)");
		Запрос.УстановитьПараметр("ИдентификаторыКлючевыхОпераций", Фильтр.КлючевыеПоказатели);
	КонецЕсли;
	
	//Условие по пользователям
	Если Фильтр.Пользователи = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "");
	Иначе
		Если Фильтр.ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.ТолькоУказанные Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "И ЗамерыПроизводительности.Пользователь В (&Пользователи)");
		ИначеЕсли Фильтр.ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.ВсеКроме Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "И ЗамерыПроизводительности.Пользователь НЕ В (&Пользователи)");
		КонецЕсли;
		Запрос.УстановитьПараметр("Пользователи", Фильтр.Пользователи);
	КонецЕсли;
		
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ОбъектКонтроля", Фильтр.ИнформационнаяБаза);
	Запрос.УстановитьПараметр("ДатаЗамера", (Дата - Дата(1,1,1))*1000);
		
	Возврат Запрос.Выполнить().Выгрузить()[0].Значение;
КонецФункции

Функция ПолучитьКоличествоОперацийПревышенияЦелевогоВремениНаДату(Фильтр, Дата, ПорогПревышения, Запрос)
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ISNULL(КОЛИЧЕСТВО(ВыборкаЗамеров.ИдентификаторКлючевойОперации),0) КАК Значение
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ %ПериодAPDEX
	|		ЗамерыПроизводительности.ИдентификаторКлючевойОперации КАК ИдентификаторКлючевойОперации,
	|		ЗамерыПроизводительности.Значение КАК Значение
	|	ИЗ
	|		РегистрСведений.ЗамерыПроизводительности КАК ЗамерыПроизводительности
	|	ГДЕ
	|		ЗамерыПроизводительности.ОбъектКонтроля = &ОбъектКонтроля
	|		И ЗамерыПроизводительности.ДатаЗамераUTC <= &ДатаЗамера
	|		%УслКлючевыеОперации
	|		%УслПользователи
	|	УПОРЯДОЧИТЬ ПО
	|		ЗамерыПроизводительности.ДатаЗамераUTC УБЫВ
	|	) КАК ВыборкаЗамеров
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК КлючевыеОперации
	|ПО
	|	КлючевыеОперации.ИнформационнаяБаза = &ОбъектКонтроля
	|	И КлючевыеОперации.УникальныйИдентификатор = ВыборкаЗамеров.ИдентификаторКлючевойОперации
	|	И ВыборкаЗамеров.Значение > КлючевыеОперации.ЦелевоеВремяВИБ * &ПорогПревышения
	|	";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПериодAPDEX", Формат(ЭтотОбъект.ПериодAPDEX, "ЧН=0; ЧГ=0"));
	
	//Условие по ключевым операциям
	Если Фильтр.КлючевыеПоказатели = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслКлючевыеОперации", "");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслКлючевыеОперации", "И ЗамерыПроизводительности.ИдентификаторКлючевойОперации В (&ИдентификаторыКлючевыхОпераций)");
		Запрос.УстановитьПараметр("ИдентификаторыКлючевыхОпераций", Фильтр.КлючевыеПоказатели);
	КонецЕсли;
	
	//Условие по пользователям
	Если Фильтр.Пользователи = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "");
	Иначе
		Если Фильтр.ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.ТолькоУказанные Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "И ЗамерыПроизводительности.Пользователь В (&Пользователи)");
		ИначеЕсли Фильтр.ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.ВсеКроме Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "И ЗамерыПроизводительности.Пользователь НЕ В (&Пользователи)");
		КонецЕсли;
		Запрос.УстановитьПараметр("Пользователи", Фильтр.Пользователи);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ОбъектКонтроля", Фильтр.ИнформационнаяБаза);
	Запрос.УстановитьПараметр("ДатаЗамера", (Дата - Дата(1,1,1))*1000);
	Запрос.УстановитьПараметр("ИдентификаторыКлючевыхОпераций", Фильтр.КлючевыеПоказатели);
	Запрос.УстановитьПараметр("ПорогПревышения", ПорогПревышения);
	
	Возврат Запрос.Выполнить().Выгрузить()[0].Значение;
КонецФункции

Функция ПолучитьПроцентПользователейПревышенияЦелевогоВремениНаДату(Фильтр, Дата, ПорогПревышения, Запрос)
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ISNULL((
	|	СУММА(ВЫБОР
	|		КОГДА ЕстьПревышениеЗамера > 0 ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ)
	|	*
	|	100
	|	)
	|	/
	|	КОЛИЧЕСТВО(Пользователь),0) КАК Значение
	|ИЗ
	|(ВЫБРАТЬ
	|	ВыборкаЗамеров.Пользователь КАК Пользователь,
	|	СУММА(ВЫБОР
	|		КОГДА ВыборкаЗамеров.Значение > КлючевыеОперации.ЦелевоеВремяВИБ * &ПорогПревышения ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК ЕстьПревышениеЗамера
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ %ПериодAPDEX
	|		ЗамерыПроизводительности.ИдентификаторКлючевойОперации КАК ИдентификаторКлючевойОперации,
	|		ЗамерыПроизводительности.Значение КАК Значение,
	|		ЗамерыПроизводительности.Пользователь КАК Пользователь
	|	ИЗ
	|		РегистрСведений.ЗамерыПроизводительности КАК ЗамерыПроизводительности
	|	ГДЕ
	|		ЗамерыПроизводительности.ОбъектКонтроля = &ОбъектКонтроля
	|		И ЗамерыПроизводительности.ДатаЗамераUTC <= &ДатаЗамера
	|		%УслКлючевыеОперации
	|		%УслПользователи
	|	УПОРЯДОЧИТЬ ПО
	|		ЗамерыПроизводительности.ДатаЗамераUTC УБЫВ
	|	) КАК ВыборкаЗамеров
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК КлючевыеОперации
	|ПО
	|	КлючевыеОперации.ИнформационнаяБаза = &ОбъектКонтроля
	|	И КлючевыеОперации.УникальныйИдентификатор = ВыборкаЗамеров.ИдентификаторКлючевойОперации
	|СГРУППИРОВАТЬ ПО
	|	ВыборкаЗамеров.Пользователь
	|) КАК Выборка";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПериодAPDEX", Формат(ЭтотОбъект.ПериодAPDEX, "ЧН=0; ЧГ=0"));
	
	//Условие по ключевым операциям
	Если Фильтр.КлючевыеПоказатели = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслКлючевыеОперации", "");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслКлючевыеОперации", "И ЗамерыПроизводительности.ИдентификаторКлючевойОперации В (&ИдентификаторыКлючевыхОпераций)");
		Запрос.УстановитьПараметр("ИдентификаторыКлючевыхОпераций", Фильтр.КлючевыеПоказатели);
	КонецЕсли;
	
	//Условие по пользователям
	Если Фильтр.Пользователи = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "");
	Иначе
		Если Фильтр.ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.ТолькоУказанные Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "И ЗамерыПроизводительности.Пользователь В (&Пользователи)");
		ИначеЕсли Фильтр.ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.ВсеКроме Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "И ЗамерыПроизводительности.Пользователь НЕ В (&Пользователи)");
		КонецЕсли;
		Запрос.УстановитьПараметр("Пользователи", Фильтр.Пользователи);
	КонецЕсли;	
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ОбъектКонтроля", Фильтр.ИнформационнаяБаза);
	Запрос.УстановитьПараметр("ДатаЗамера", (Дата - Дата(1,1,1))*1000);
	Запрос.УстановитьПараметр("ИдентификаторыКлючевыхОпераций", Фильтр.КлючевыеПоказатели);
	Запрос.УстановитьПараметр("ПорогПревышения", ПорогПревышения);
	
	Возврат Запрос.Выполнить().Выгрузить()[0].Значение;
КонецФункции

Функция ПолучитьПроцентПользователейИзмененияЦелевогоВремениНаДату(Фильтр, Дата, ПериодОценки, ГлубинаВыборки, Дельта, МинимальноЗамеров, Запрос)
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	//Помещаем во временную таблицу "ТекущиеЗамерыВЗапросе" данные текущего периода - Начало
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗамерыПроизводительности.Пользователь КАК Пользователь,
	|	СРЕДНЕЕ(ЗамерыПроизводительности.Значение) КАК ЗначениеСреднее
	|ПОМЕСТИТЬ
	|	ТекущиеЗамерыВЗапросе
	|ИЗ
	|	РегистрСведений.ЗамерыПроизводительности КАК ЗамерыПроизводительности
	|ГДЕ
	|	ЗамерыПроизводительности.ОбъектКонтроля = &ОбъектКонтроля
	|	И ЗамерыПроизводительности.ДатаЗамераUTC МЕЖДУ &ДатаЗамераНачало И &ДатаЗамераКонец
	|	%УслКлючевыеОперации
	|	%УслПользователи
	|СГРУППИРОВАТЬ ПО
	|	ЗамерыПроизводительности.Пользователь
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(*) >= &МинимальноЗамеров
	|ИНДЕКСИРОВАТЬ ПО
	|	Пользователь
	|";
	//Условие по ключевым операциям
	Если Фильтр.КлючевыеПоказатели = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслКлючевыеОперации", "");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслКлючевыеОперации", "И ЗамерыПроизводительности.ИдентификаторКлючевойОперации В (&ИдентификаторыКлючевыхОпераций)");
		Запрос.УстановитьПараметр("ИдентификаторыКлючевыхОпераций", Фильтр.КлючевыеПоказатели);
	КонецЕсли;
	
	//Условие по пользователям
	Если Фильтр.Пользователи = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "");
	Иначе
		Если Фильтр.ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.ТолькоУказанные Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "И ЗамерыПроизводительности.Пользователь В (&Пользователи)");
		ИначеЕсли Фильтр.ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.ВсеКроме Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслПользователи", "И ЗамерыПроизводительности.Пользователь НЕ В (&Пользователи)");
		КонецЕсли;
		Запрос.УстановитьПараметр("Пользователи", Фильтр.Пользователи);
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ОбъектКонтроля", Фильтр.ИнформационнаяБаза);
    ДатаНачала = Дата - ГлубинаВыборки * 86400;
	Запрос.УстановитьПараметр("ДатаЗамераНачало", (ДатаНачала - Дата(1,1,1))*1000);
	Запрос.УстановитьПараметр("ДатаЗамераКонец", (Дата - Дата(1,1,1))*1000);
	Запрос.УстановитьПараметр("ИдентификаторыКлючевыхОпераций", Фильтр.КлючевыеПоказатели);
	Запрос.УстановитьПараметр("МинимальноЗамеров", МинимальноЗамеров);
	Запрос.Выполнить();
	//Помещаем во временную таблицу "ТекущиеЗамерыВЗапросе" данные текущего периода - Конец
	
	//Помещаем во временную таблицу "ПредыдущиеЗамерыВЗапросе" данные предыдущего периода - Начало
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТекущиеЗамерыВЗапросе", "ПредыдущиеЗамерыВЗапросе");
    ДатаЗамераНачало = Дата - ПериодОценки * 86400 - ГлубинаВыборки * 86400;
	Запрос.УстановитьПараметр("ДатаЗамераНачало", (ДатаЗамераНачало - Дата(1,1,1))*1000);
    ДатаЗамераКонец = Дата - ПериодОценки * 86400;
	Запрос.УстановитьПараметр("ДатаЗамераКонец", (ДатаЗамераКонец - Дата(1,1,1))*1000);
	Запрос.Выполнить();
	//Помещаем во временную таблицу "ПредыдущиеЗамерыВЗапросе" данные предыдущего периода - Конец
	
	//Выбираем пользователей, по которым есть замеры в текущем и в предыдущем периодах
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ISNULL((
	|	СУММА(ВЫБОР
	|		КОГДА ВыборкаИзменений.ПроцентИзменения >= &Дельта ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ)
	|	*
	|	100
	|	)
	|	/
	|	КОЛИЧЕСТВО(ВыборкаИзменений.Пользователь),0) КАК Значение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТекущиеЗамерыВЗапросе.Пользователь КАК Пользователь,
	|		-((ТекущиеЗамерыВЗапросе.ЗначениеСреднее - ПредыдущиеЗамерыВЗапросе.ЗначениеСреднее)/ТекущиеЗамерыВЗапросе.ЗначениеСреднее) * 100 КАК ПроцентИзменения
	|	ИЗ
	|		ТекущиеЗамерыВЗапросе КАК ТекущиеЗамерыВЗапросе
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПредыдущиеЗамерыВЗапросе КАК ПредыдущиеЗамерыВЗапросе
	|	ПО
	|		ТекущиеЗамерыВЗапросе.Пользователь = ПредыдущиеЗамерыВЗапросе.Пользователь
	|	) КАК ВыборкаИзменений 
	|";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Дельта", Дельта);
	
	Возврат Запрос.Выполнить().Выгрузить()[0].Значение;
КонецФункции

Функция ПолучитьСреднееВремяХудшихЗамеров(
	Знач ОпорнаяДата,
	Знач НачальноеСмещение,
	Знач ЧислоТочек,
	Знач Шаг,
	Статистика = Неопределено,
	ВычислитьАгрегатныеЗначения = Истина,
	ВычислитьГоризонтАктуальности = Ложь,
	РежимСдвига = Ложь
	)
	Данные = Новый Массив;
	
	ЧасовойПоясСеанса = ЧасовойПоясСеанса();
	ОпорнаяДатаUTC = УниверсальноеВремя(ОпорнаяДата, ЧасовойПоясСеанса);
	
	ЗначенияФильтра = ПолучитьЗначенияФильтра();
	ДатыМассив = ПодготовитьМассивДат(ОпорнаяДатаUTC, НачальноеСмещение, ЧислоТочек, Шаг);
	
	Запрос = Новый Запрос;
	КоличествоХудших = ЦЕЛ((ЭтотОбъект.ПериодAPDEX/100)*ЭтотОбъект.КоличествоХудшихЗамеров);
	КоличествоХудших = Формат(КоличествоХудших, "ЧН=0; ЧГ=0");
	Для Каждого ТекущаяДата Из ДатыМассив Цикл
		СреднееПоБазам = 0;
		Для Каждого ТекущийФильтр Из ЗначенияФильтра Цикл
			СреднееПоБазам = СреднееПоБазам + ПолучитьСреднееВремяХудшихЗамеровНаДату(ТекущийФильтр, ТекущаяДата, КоличествоХудших, Запрос);
		КонецЦикла;
		Данные.Добавить(СреднееПоБазам / ЗначенияФильтра.Количество());
	КонецЦикла;
	
	Если Статистика <> Неопределено Тогда
		Статистика = МониторингКлиентСервер.ВычислитьСредниеЗначения(Данные);
		Статистика.Вставить("ПоТочкам");
		// вычислим параметр "Текущее"
		Попытка
			ТекущееЗначение = Данные[Данные.Количество() - 1];
		Исключение
			Инфо = ИнформацияОбОшибке();
			Комментарий =
				"Описание = '" +Инфо.Описание + "', " +
				"ИмяМодуля = '" + Инфо.ИмяМодуля + "', " +
				"НомерСтроки = '" + Инфо.НомерСтроки + "', " +
				"ИсходнаяСтрока = '" + Инфо.ИсходнаяСтрока + "'.";
			
			ЗаписьЖурналаРегистрации(
				"ПолучитьСреднееВремяХудшихЗамеров(...)",
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Справочники.ПоказателиAPDEX.МодульОбъекта,
				,
				Комментарий);
			
			ТекущееЗначение = 0;
		КонецПопытки;
		Статистика.Вставить("Текущее", ТекущееЗначение);
		Статистика.Вставить("Горизонт", Неопределено);
		Статистика.Вставить("Всего", Неопределено);
	КонецЕсли;
	
	Возврат Данные;
КонецФункции

Функция ПолучитьКоличествоОперацийПревышенияЦелевогоВремени(
	Знач ОпорнаяДата,
	Знач НачальноеСмещение,
	Знач ЧислоТочек,
	Знач Шаг,
	Статистика = Неопределено,
	ВычислитьАгрегатныеЗначения = Истина,
	ВычислитьГоризонтАктуальности = Ложь,
	РежимСдвига = Ложь
	)
	
	Данные = Новый Массив;
	
	ЧасовойПоясСеанса = ЧасовойПоясСеанса();
	ОпорнаяДатаUTC = УниверсальноеВремя(ОпорнаяДата, ЧасовойПоясСеанса);
	
	ЗначенияФильтра = ПолучитьЗначенияФильтра();
	ДатыМассив = ПодготовитьМассивДат(ОпорнаяДатаUTC, НачальноеСмещение, ЧислоТочек, Шаг);
	
	Запрос = Новый Запрос;
	ПорогПревышения = ЭтотОбъект.ПорогПревышенияЦелевогоВремени;
	Для Каждого ТекущаяДата Из ДатыМассив Цикл
		ПорогПревышенияПоБазам = 0;
		Для Каждого ТекущийФильтр Из ЗначенияФильтра Цикл
			ПорогПревышенияПоБазам = ПорогПревышенияПоБазам + ПолучитьКоличествоОперацийПревышенияЦелевогоВремениНаДату(ТекущийФильтр, ТекущаяДата, ПорогПревышения, Запрос);
		КонецЦикла;
		Данные.Добавить(ПорогПревышенияПоБазам);
	КонецЦикла;
	
	Если Статистика <> Неопределено Тогда
		Статистика = МониторингКлиентСервер.ВычислитьСредниеЗначения(Данные);
		Статистика.Вставить("ПоТочкам");
		// вычислим параметр "Текущее"
		Попытка
			ТекущееЗначение = Данные[Данные.Количество() - 1];
		Исключение
			Инфо = ИнформацияОбОшибке();
			Комментарий =
			"Описание = '" +Инфо.Описание + "', " +
			"ИмяМодуля = '" + Инфо.ИмяМодуля + "', " +
			"НомерСтроки = '" + Инфо.НомерСтроки + "', " +
			"ИсходнаяСтрока = '" + Инфо.ИсходнаяСтрока + "'.";
			
			ЗаписьЖурналаРегистрации(
			"Функция ПолучитьКоличествоОперацийПревышенияЦелевогоВремени(...)",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ПоказателиAPDEX.МодульОбъекта,
			,
			Комментарий);
			
			ТекущееЗначение = 0;
		КонецПопытки;
		Статистика.Вставить("Текущее", ТекущееЗначение);
		
		Статистика.Вставить("Горизонт", Неопределено);
		Статистика.Вставить("Всего", Неопределено);
	КонецЕсли;
	
	Возврат Данные;
КонецФункции

Функция ПолучитьПроцентПользователейПревышенияЦелевогоВремени(
	Знач ОпорнаяДата,
	Знач НачальноеСмещение,
	Знач ЧислоТочек,
	Знач Шаг,
	Статистика = Неопределено,
	ВычислитьАгрегатныеЗначения = Истина,
	ВычислитьГоризонтАктуальности = Ложь,
	РежимСдвига = Ложь
	)
	
	Данные = Новый Массив;
	
	ЧасовойПоясСеанса = ЧасовойПоясСеанса();
	ОпорнаяДатаUTC = УниверсальноеВремя(ОпорнаяДата, ЧасовойПоясСеанса);
	
	ЗначенияФильтра = ПолучитьЗначенияФильтра();
	ДатыМассив = ПодготовитьМассивДат(ОпорнаяДатаUTC, НачальноеСмещение, ЧислоТочек, Шаг);
	
	Запрос = Новый Запрос;
	ПорогПревышения = ЭтотОбъект.ПорогПревышенияЦелевогоВремени;
	Для Каждого ТекущаяДата Из ДатыМассив Цикл
		ПроцентПользователейПоБазе = 0;
		Для Каждого ТекущийФильтр Из ЗначенияФильтра Цикл
			ПроцентПользователейПоБазе = ПроцентПользователейПоБазе + ПолучитьПроцентПользователейПревышенияЦелевогоВремениНаДату(ТекущийФильтр, ТекущаяДата, ПорогПревышения, Запрос);
		КонецЦикла;
		Данные.Добавить(ПроцентПользователейПоБазе / ЗначенияФильтра.Количество());
	КонецЦикла;
	
	Если Статистика <> Неопределено Тогда
		Статистика = МониторингКлиентСервер.ВычислитьСредниеЗначения(Данные);
		Статистика.Вставить("ПоТочкам");
		// вычислим параметр "Текущее"
		Попытка
			ТекущееЗначение = Данные[Данные.Количество() - 1];
		Исключение
			Инфо = ИнформацияОбОшибке();
			Комментарий =
			"Описание = '" +Инфо.Описание + "', " +
			"ИмяМодуля = '" + Инфо.ИмяМодуля + "', " +
			"НомерСтроки = '" + Инфо.НомерСтроки + "', " +
			"ИсходнаяСтрока = '" + Инфо.ИсходнаяСтрока + "'.";
			
			ЗаписьЖурналаРегистрации(
			"Функция ПолучитьПроцентПользователейПревышенияЦелевогоВремени(...)",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ПоказателиAPDEX.МодульОбъекта,
			,
			Комментарий);
			
			ТекущееЗначение = 0;
		КонецПопытки;
		Статистика.Вставить("Текущее", ТекущееЗначение);
		Статистика.Вставить("Горизонт", Неопределено);
		Статистика.Вставить("Всего", Неопределено);
	КонецЕсли;
	
	Возврат Данные;
КонецФункции

Функция ПолучитьПроцентПользователейИзмененияЦелевогоВремени(
	Знач ОпорнаяДата,
	Знач НачальноеСмещение,
	Знач ЧислоТочек,
	Знач Шаг,
	Статистика = Неопределено,
	ВычислитьАгрегатныеЗначения = Истина,
	ВычислитьГоризонтАктуальности = Ложь,
	РежимСдвига = Ложь
	)
	
	Данные = Новый Массив;
	
	ЧасовойПоясСеанса = ЧасовойПоясСеанса();
	ОпорнаяДатаUTC = УниверсальноеВремя(ОпорнаяДата, ЧасовойПоясСеанса);
	
	ЗначенияФильтра = ПолучитьЗначенияФильтра();
	ДатыМассив = ПодготовитьМассивДат(ОпорнаяДатаUTC, НачальноеСмещение, ЧислоТочек, Шаг);
	
	Запрос = Новый Запрос;
	ПериодОценки = ЭтотОбъект.ПериодAPDEX;
	ГлубинаВыборки = ЭтотОбъект.ГлубинаВыборки;
	Дельта = ЭтотОбъект.ДельтаСреднееВремяЗамера;
	МинимальноЗамеров = ЭтотОбъект.МинимальноеКоличествоЗамеров;
	
	Для Каждого ТекущаяДата Из ДатыМассив Цикл
		ПроцентПользователейПоБазе = 0;
		Для Каждого ТекущийФильтр Из ЗначенияФильтра Цикл
			ПроцентПользователейПоБазе =
				ПроцентПользователейПоБазе + 
				ПолучитьПроцентПользователейИзмененияЦелевогоВремениНаДату(
					ТекущийФильтр,
					ТекущаяДата,
					ПериодОценки,
					ГлубинаВыборки,
					Дельта,
					МинимальноЗамеров,
					Запрос);
		КонецЦикла;
		Данные.Добавить(ПроцентПользователейПоБазе / ЗначенияФильтра.Количество());
	КонецЦикла;
	
	Если Статистика <> Неопределено Тогда
		Статистика = МониторингКлиентСервер.ВычислитьСредниеЗначения(Данные);
		Статистика.Вставить("ПоТочкам");
		// вычислим параметр "Текущее"
		Попытка
			ТекущееЗначение = Данные[Данные.Количество() - 1];
		Исключение
			Инфо = ИнформацияОбОшибке();
			Комментарий =
			"Описание = '" +Инфо.Описание + "', " +
			"ИмяМодуля = '" + Инфо.ИмяМодуля + "', " +
			"НомерСтроки = '" + Инфо.НомерСтроки + "', " +
			"ИсходнаяСтрока = '" + Инфо.ИсходнаяСтрока + "'.";
			
			ЗаписьЖурналаРегистрации(
			"Функция ПолучитьПроцентПользователейИзмененияЦелевогоВремени(...)",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ПоказателиAPDEX.МодульОбъекта,
			,
			Комментарий);
					
			ТекущееЗначение = 0;
		КонецПопытки;
		Статистика.Вставить("Текущее", ТекущееЗначение);
		Статистика.Вставить("Горизонт", Неопределено);
		Статистика.Вставить("Всего", Неопределено);
	КонецЕсли;
	
	Возврат Данные;
КонецФункции

Функция ВсегоЗаПериодAPDEX(Знач ДатаНачала, Знач ДатаОкончания)
	ОбщиеПараметрыЗапроса = ОбщиеПараметрыЗапроса(ДатаНачала, ДатаОкончания);
	
	ДатаНачалаСмещенная = ОбщиеПараметрыЗапроса.ДатаНачала;
	ДатаОкончанияСмещенная = ОбщиеПараметрыЗапроса.ДатаОкончания;
	ТипСпискаПользователей = ОбщиеПараметрыЗапроса.ТипСпискаПользователей;
	КлючевыеОперацииВМассив = ОбщиеПараметрыЗапроса.КлючевыеОперации;
	ВыбраннаяИнформационнаяБаза = ОбщиеПараметрыЗапроса.ИнформационнаяБаза;
	ВыбранныеПользователи = ОбщиеПараметрыЗапроса.ВыбранныеПользователи;
	
	Запрос = Новый Запрос;
	ЗапросТекст = "
	|ВЫБРАТЬ 
	|	СУММА(ВЫБОР
	|		КОГДА Замеры.Значение <= КлючевыеОперации.ЦелевоеВремя
	|			Тогда 1
	|		КОГДА Замеры.Значение <= 4*КлючевыеОперации.ЦелевоеВремя
	|			Тогда 0.5
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ) КАК Всего,
	|	КОЛИЧЕСТВО(*)КАК Кол
	|ИЗ 
	|	РегистрСведений.ЗамерыПроизводительности Как Замеры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК КлючевыеОперации
	|		ПО Замеры.ИдентификаторКлючевойОперации = КлючевыеОперации.УникальныйИдентификатор 
	|			И Замеры.ОбъектКонтроля = КлючевыеОперации.ИнформационнаяБаза
	|ГДЕ 
	|	%УсловиеНаБазу
	|	Замеры.ДатаЗамераUTC >= &ДатаНачала И
	|	Замеры.ДатаЗамераUTC <= &ДатаОкончания
	|	%УсловиеНаКлючевыеОперации
	|	%УсловиеНаПользователя";
	
	Запрос.УстановитьПараметр("ДатаНачала", (ДатаНачалаСмещенная - Дата(1,1,1))*1000);
	Запрос.УстановитьПараметр("ДатаОкончания", (ДатаОкончанияСмещенная - Дата(1,1,1))*1000);
	
	КонтрольПроизводительности.ВставитьФильтрыВЗапросПроизводительности(
		Запрос,
		ЗапросТекст,
		ВыбраннаяИнформационнаяБаза,
		КлючевыеОперацииВМассив,
		ВыбранныеПользователи,
		ТипСпискаПользователей
	);
	
	Запрос.Текст = ЗапросТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И Выборка.Кол > 0 Тогда
		Возврат Выборка.Всего / Выборка.Кол;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

Функция ВсегоЗаПериод(Знач ДатаНачала, Знач ДатаОкончания) Экспорт
	Если ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.APDEX Тогда
		Возврат ВсегоЗаПериодAPDEX(ДатаНачала, ДатаОкончания);
	ИначеЕсли ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.СреднееВремяХудшихЗамеров Тогда
		Возврат Неопределено;
	ИначеЕсли ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.КоличествоОперацийПревышенияЦелевогоВремени Тогда
		Возврат Неопределено;
	ИначеЕсли ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.ПроцентПользователейПревышенияЦелевогоВремени Тогда
		Возврат Неопределено;
	ИначеЕсли ЭтотОбъект.ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.ПроцентПользователейИзмененияЦелевогоВремени Тогда
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ОбщиеПараметрыЗапроса(Знач ДатаНачала, Знач ДатаОкончания)
	
	Результат = Новый Структура("ДатаНачала, ДатаОкончания, ТипСпискаПользователей, ВыбранныеПользователи, КлючевыеОперации, ИнформационнаяБаза");
	ЧасовойПоясСеанса = ЧасовойПоясСеанса();
	ДатаНачалаСмещенная = УниверсальноеВремя(ДатаНачала, ЧасовойПоясСеанса);
	ДатаОкончанияСмещенная = УниверсальноеВремя(ДатаОкончания, ЧасовойПоясСеанса);
	
	Результат["ДатаНачала"] = ДатаНачалаСмещенная;
	Результат["ДатаОкончания"] = ДатаОкончанияСмещенная;
	
	ТипСпискаПользователей = ЭтотОбъект.ТипСпискаПользователей;
	
	Если ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.Все Тогда
		ВыбранныеПользователи = Неопределено;
	Иначе
		ВыбранныеПользователи = Новый Массив;
		Для Каждого СтрокаПользователь Из ЭтотОбъект.Пользователи Цикл
			
			ВыбранныеПользователи.Добавить(СтрокаПользователь.ИмяПользователя);
			
		КонецЦикла;
	КонецЕсли;
	
	Результат["ВыбранныеПользователи"] = ВыбранныеПользователи;
	Результат["ТипСпискаПользователей"] = ТипСпискаПользователей;
	
	КлючевыеОперацииВМассив = Новый Массив;
	БазыВМассив = Новый Массив;
	Для Каждого СтрокаОперации Из ЭтотОбъект.КлючевыеОперации Цикл
		ИдентификаторКлючевойОперации = СтрокаОперации.ИдентификаторКлючевойОперации;
		КлючевыеОперацииВМассив.Добавить(ИдентификаторКлючевойОперации);
		БазыВМассив.Добавить(СтрокаОперации.ИнформационнаяБаза);
	КонецЦикла;
	Результат["КлючевыеОперации"] = КлючевыеОперацииВМассив;
	Результат["ИнформационнаяБаза"] = БазыВМассив;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьИДСтаройВерсии()
	ФильтрПоОбъектамКонтроля = Новый Массив;
	
	ИД = МониторингСервер.ОбщаяЧастьИдентификатораВариантаПоказателя(
		ЭтотОбъект,
		ФильтрПоОбъектамКонтроля
	);
	
	РазделительПолей = "__";
	ИД = ИД + Строка(ЭтотОбъект.ПериодAPDEX) + РазделительПолей;
	ИД = ИД + Строка(ЭтотОбъект.ТипСпискаПользователей) + РазделительПолей;
	Если ЭтотОбъект.ТипСпискаПользователей <> Перечисления.ТипыСпискаПользователей.Все Тогда
		ПользователиВТаблицу = ЭтотОбъект.Пользователи.ВыгрузитьКолонки("ИмяПользователя");
		Для Каждого ПользовательСтрока Из  ЭтотОбъект.Пользователи Цикл
			ВремСтрока = ПользователиВТаблицу.Добавить();
			ВремСтрока.ИмяПользователя = ПользовательСтрока.ИмяПользователя;
		КонецЦикла;
		
		ПользователиВТаблицу.Сортировать("ИмяПользователя");
		Для Каждого ПользовательСтрока Из ПользователиВТаблицу Цикл
			ИД = ИД + "_" + ПользовательСтрока.ИмяПользователя;
		КонецЦикла;
	КонецЕсли;
	
	ИД = ИД + РазделительПолей;
	Для Каждого СтрокаОперации Из ЭтотОбъект.КлючевыеОперации Цикл
		ИД = ИД + "_" + СтрокаОперации.ИдентификаторКлючевойОперации + ";" + Строка(СтрокаОперации.ИнформационнаяБаза.УникальныйИдентификатор());
	КонецЦикла;
	
	Возврат ИД;
КонецФункции

Функция ИдентификаторВариантаПоказателя() Экспорт
	Если ЭтотОбъект.ГУИД = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000") Тогда
		ИД = ПолучитьИДСтаройВерсии();
	Иначе
		ФильтрПоОбъектамКонтроля = Новый Массив;
		
		ИД = МониторингСервер.ОбщаяЧастьИдентификатораВариантаПоказателя(
		ЭтотОбъект,
		ФильтрПоОбъектамКонтроля
		);
		
		РазделительПолей = "__";
		ИД = ИД + РазделительПолей + ГУИД;
	КонецЕсли;
	
	Возврат ИД;
КонецФункции

// Возвращает текстовую строку, описывающую тип показателя
//
// Возвращаемое значение:
//  Строка
//
Функция ИдентификаторТипаПоказателя() Экспорт
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Метаданные().РасширенноеПредставлениеОбъекта) Тогда
		Возврат ЭтотОбъект.Метаданные().РасширенноеПредставлениеОбъекта;
	ИначеЕсли ЗначениеЗаполнено(ЭтотОбъект.Метаданные().ПредставлениеОбъекта) Тогда
		Возврат ЭтотОбъект.Метаданные().ПредставлениеОбъекта;
	Иначе
		Возврат ЭтотОбъект.Метаданные().Синоним;
	КонецЕсли;
	
КонецФункции

// Заполняет параметры по умолчанию отображения показателя на графике
// 
// Параметры:
//  ПараметрОповещения - Структура - см.МониторингСервер.ПараметрОповещенияПоказательЗаписан()
//
Процедура ЗаполнитьПараметрыОтображенияПоУмолчанию(Знач ПараметрОповещения) Экспорт
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	
	ПараметрОповещения.Цвет = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
	ПараметрОповещения.АвтоМасштаб = Ложь;
	ПараметрОповещения.Масштаб = 100;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЭтотОбъект.ГУИД = Новый УникальныйИдентификатор();
КонецПроцедуры

Функция РасчитатьПоказательAPDEX(Запрос, ВыборкаТочки)
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПодготовительная.ДатаТочки КАК ДатаТочки,
	|	ВЫБОР КОГДА ЕСТЬNULL(СУММА(ВложенныйЗапрос.Количество), 0) <> 0 ТОГДА
	|		СУММА(ВложенныйЗапрос.Сумма) / СУММА(ВложенныйЗапрос.Количество)
	|	ИНАЧЕ
	|		NULL
	|	КОНЕЦ КАК Максимальное,
	|	ВЫБОР КОГДА ЕСТЬNULL(СУММА(ВложенныйЗапрос.Количество), 0) <> 0 ТОГДА
	|		СУММА(ВложенныйЗапрос.Сумма) / СУММА(ВложенныйЗапрос.Количество)
	|	ИНАЧЕ
	|		NULL
	|	КОНЕЦ КАК Минимальное,
	|	ВЫБОР КОГДА ЕСТЬNULL(СУММА(ВложенныйЗапрос.Количество), 0) <> 0 ТОГДА
	|		СУММА(ВложенныйЗапрос.Сумма) / СУММА(ВложенныйЗапрос.Количество)
	|	ИНАЧЕ
	|		NULL
	|	КОНЕЦ КАК Значение
	|
	|ИЗ
	|	ТаблицаПодготовительная КАК ТаблицаПодготовительная
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|
	|	(
	|	ВЫБРАТЬ
	|		ДАТАВРЕМЯ(1,1,1,0,0,0) КАК ДатаТочки,
	|		0 КАК Количество,
	|		0 КАК Сумма
	|	ГДЕ
	|		Ложь
	|";
	
	Пока ВыборкаТочки.Следующий() Цикл
		
		ИмяПараметра			= "Точка" + Формат(ВыборкаТочки.ДатаТочки, "ДФ=yyyyMMddHHmmss");
		ИмяПараметраДанные		= "ТочкаДанные" + Формат(ВыборкаТочки.ДатаТочкиДанные, "ДФ=yyyyMMddHHmmss");
		
		Запрос.УстановитьПараметр(ИмяПараметра, ВыборкаТочки.ДатаТочки);
		Запрос.УстановитьПараметр(ИмяПараметраДанные, ВыборкаТочки.ДатаТочкиДанные);
		
		
		ТекстЗапросаШаблон = " 
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Кусочки.ДатаТочки КАК ДатаТочки,
		|		СУММА(Кусочки.Количество) КАК Количество,
		|		СУММА(Кусочки.Значение) КАК Сумма
		|	ИЗ
		|		(
		|			ВЫБРАТЬ ПЕРВЫЕ 999989999
		|				&ДатаТочкиТекущая КАК ДатаТочки,
		|				1 КАК Количество,
		|				ВЫБОР 
		|					КОГДА  Замеры.Значение <= КлючевыеОперации.ЦелевоеВремя ТОГДА 
		|						1
		|					КОГДА Замеры.Значение <= 4*КлючевыеОперации.ЦелевоеВремя ТОГДА 
		|						0.5
		|					ИНАЧЕ 
		|						0
		|				КОНЕЦ КАК Значение
		|		ИЗ 
		|			РегистрСведений.ЗамерыПроизводительности Как Замеры
		|	
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК КлючевыеОперации
		|			ПО Замеры.ИдентификаторКлючевойОперации = КлючевыеОперации.УникальныйИдентификатор
		|			И Замеры.ОбъектКонтроля = КлючевыеОперации.ИнформационнаяБаза
		|	
		|		ГДЕ
		|			Замеры.ДатаЗамера <= &ДатаТочкиДанныеТекущая
		|			И Замеры.ОбъектКонтроля В(&МассивБаз)
		|			И Замеры.ИдентификаторКлючевойОперации В(&МассивОпераций)
		|			И &УсловиеНаПользователя
		|	
		|		УПОРЯДОЧИТЬ ПО
		|			ДатаЗамера Убыв
		|		) КАК Кусочки
		|
		|	СГРУППИРОВАТЬ ПО
		|		Кусочки.ДатаТочки
		|";
		
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "999989999", Формат(ПериодAPDEX, "ЧГ=0"));
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&ДатаТочкиТекущая", "&" + ИмяПараметра);
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&ДатаТочкиДанныеТекущая", "&" + ИмяПараметраДанные);

		Если ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.ВсеКроме Тогда
			ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&УсловиеНаПользователя", "НЕ Замеры.Пользователь В(&МассивПользователей)");
		ИначеЕсли ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.ТолькоУказанные Тогда
			ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&УсловиеНаПользователя", "Замеры.Пользователь В(&МассивПользователей)");
		Иначе
			ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&УсловиеНаПользователя", "Истина");
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|" + ТекстЗапросаШаблон;
		
	КонецЦикла;
	
	Запрос.Текст = Запрос.Текст + "
	|
	|	) КАК ВложенныйЗапрос
	|	ПО ТаблицаПодготовительная.ПоказательМониторинга = &ПоказательМониторинга
	|	И ВложенныйЗапрос.ДатаТочки = ТаблицаПодготовительная.ДатаТочки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПодготовительная.ДатаТочки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТочки
	|";

	ТаблицаДетальныхДанных = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаДетальныхДанных;
	
КонецФункции

Функция РасчитатьПоказательКоличествоОперацийПревышенияЦелевогоВремени(Запрос, ВыборкаТочки)
	
	ТаблицаДетальныхДанных = Новый ТаблицаЗначений();
	ТаблицаДетальныхДанных.Колонки.Добавить("ДатаТочки", Новый ОписаниеТипов("Дата"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Максимальное", Новый ОписаниеТипов("Число"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Минимальное", Новый ОписаниеТипов("Число"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Значение", Новый ОписаниеТипов("Число"));
	
	ЗначенияФильтра = ПолучитьЗначенияФильтра();
	
	Запрос			= Новый Запрос;
	ПорогПревышения	= ЭтотОбъект.ПорогПревышенияЦелевогоВремени;
	
	Пока ВыборкаТочки.Следующий() Цикл	
		
		ПорогПревышенияПоБазам = 0;
		
		Для Каждого ТекущийФильтр Из ЗначенияФильтра Цикл
			ПорогПревышенияПоБазам = ПорогПревышенияПоБазам + ПолучитьКоличествоОперацийПревышенияЦелевогоВремениНаДату(ТекущийФильтр, ВыборкаТочки.ДатаТочки, ПорогПревышения, Запрос);
		КонецЦикла;
		
		Значение = ПорогПревышенияПоБазам;
		
		НоваяСтрока					= ТаблицаДетальныхДанных.Добавить();
		НоваяСтрока.ДатаТочки		= ВыборкаТочки.ДатаТочки;
		НоваяСтрока.Максимальное	= Значение;
		НоваяСтрока.Минимальное		= Значение;
		НоваяСтрока.Значение		= Значение;
		
	КонецЦикла;
	
	
	Возврат ТаблицаДетальныхДанных;
	
КонецФункции

Функция РасчитатьПоказательПроцентПользователейИзмененияЦелевогоВремени(Запрос, ВыборкаТочки)
	
	ТаблицаДетальныхДанных = Новый ТаблицаЗначений();
	ТаблицаДетальныхДанных.Колонки.Добавить("ДатаТочки", Новый ОписаниеТипов("Дата"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Максимальное", Новый ОписаниеТипов("Число"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Минимальное", Новый ОписаниеТипов("Число"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Значение", Новый ОписаниеТипов("Число"));
	
	ЗначенияФильтра = ПолучитьЗначенияФильтра();
	
	Запрос = Новый Запрос;
	
	ПериодОценки		= ЭтотОбъект.ПериодAPDEX;
	ГлубинаВыборки		= ЭтотОбъект.ГлубинаВыборки;
	Дельта				= ЭтотОбъект.ДельтаСреднееВремяЗамера;
	МинимальноЗамеров	= ЭтотОбъект.МинимальноеКоличествоЗамеров;
	
	Пока ВыборкаТочки.Следующий() Цикл
		
		ПроцентПользователейПоБазе = 0;
		
		Для Каждого ТекущийФильтр Из ЗначенияФильтра Цикл
			
			ПроцентПользователейПоБазе = ПроцентПользователейПоБазе + 
				ПолучитьПроцентПользователейИзмененияЦелевогоВремениНаДату(
					ТекущийФильтр,
					ВыборкаТочки.ДатаТочки,
					ПериодОценки,
					ГлубинаВыборки,
					Дельта,
					МинимальноЗамеров,
					Запрос);
					
		КонецЦикла;
		
		Значение = ПроцентПользователейПоБазе / ЗначенияФильтра.Количество();
		
		НоваяСтрока					= ТаблицаДетальныхДанных.Добавить();
		НоваяСтрока.ДатаТочки		= ВыборкаТочки.ДатаТочки;
		НоваяСтрока.Максимальное	= Значение;
		НоваяСтрока.Минимальное		= Значение;
		НоваяСтрока.Значение		= Значение;
		
	КонецЦикла;
	
	Возврат ТаблицаДетальныхДанных;
	
КонецФункции

Функция РасчитатьПоказательПроцентПользователейПревышенияЦелевогоВремени(Запрос, ВыборкаТочки)
	
	ТаблицаДетальныхДанных = Новый ТаблицаЗначений();
	ТаблицаДетальныхДанных.Колонки.Добавить("ДатаТочки", Новый ОписаниеТипов("Дата"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Максимальное", Новый ОписаниеТипов("Число"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Минимальное", Новый ОписаниеТипов("Число"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Значение", Новый ОписаниеТипов("Число"));
	
	ЗначенияФильтра = ПолучитьЗначенияФильтра();
	
	Запрос = Новый Запрос;
	
	ПорогПревышения = ЭтотОбъект.ПорогПревышенияЦелевогоВремени;
	
	Пока ВыборкаТочки.Следующий() Цикл
		
		ПроцентПользователейПоБазе = 0;
		Для Каждого ТекущийФильтр Из ЗначенияФильтра Цикл
			ПроцентПользователейПоБазе = ПроцентПользователейПоБазе + ПолучитьПроцентПользователейПревышенияЦелевогоВремениНаДату(ТекущийФильтр, ВыборкаТочки.ДатаТочки, ПорогПревышения, Запрос);
		КонецЦикла;
		
		Значение = ПроцентПользователейПоБазе / ЗначенияФильтра.Количество();
		
		НоваяСтрока					= ТаблицаДетальныхДанных.Добавить();
		НоваяСтрока.ДатаТочки		= ВыборкаТочки.ДатаТочки;
		НоваяСтрока.Максимальное	= Значение;
		НоваяСтрока.Минимальное		= Значение;
		НоваяСтрока.Значение		= Значение;
		
	КонецЦикла;
	
	Возврат ТаблицаДетальныхДанных;
	
КонецФункции

Функция РасчитатьПоказательСреднееВремяХудшихЗамеров(Запрос, ВыборкаТочки)
	
	ТаблицаДетальныхДанных = Новый ТаблицаЗначений();
	ТаблицаДетальныхДанных.Колонки.Добавить("ДатаТочки", Новый ОписаниеТипов("Дата"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Максимальное", Новый ОписаниеТипов("Число"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Минимальное", Новый ОписаниеТипов("Число"));
	ТаблицаДетальныхДанных.Колонки.Добавить("Значение", Новый ОписаниеТипов("Число"));
	
	ЗначенияФильтра = ПолучитьЗначенияФильтра();
	
	Запрос = Новый Запрос;
	
	КоличествоХудших	= ЦЕЛ((ЭтотОбъект.ПериодAPDEX/100)*ЭтотОбъект.КоличествоХудшихЗамеров);
	КоличествоХудших	= Формат(КоличествоХудших, "ЧН=0; ЧГ=0");
	
	Пока ВыборкаТочки.Следующий() Цикл
		
		СреднееПоБазам = 0;
		Для Каждого ТекущийФильтр Из ЗначенияФильтра Цикл
			СреднееПоБазам = СреднееПоБазам + ПолучитьСреднееВремяХудшихЗамеровНаДату(ТекущийФильтр, ВыборкаТочки.ДатаТочки, КоличествоХудших, Запрос);
		КонецЦикла;
		
		Значение = СреднееПоБазам / ЗначенияФильтра.Количество();
		
		НоваяСтрока					= ТаблицаДетальныхДанных.Добавить();
		НоваяСтрока.ДатаТочки		= ВыборкаТочки.ДатаТочки;
		НоваяСтрока.Максимальное	= Значение;
		НоваяСтрока.Минимальное		= Значение;
		НоваяСтрока.Значение		= Значение;
		
	КонецЦикла;
	
	Возврат ТаблицаДетальныхДанных;
	
КонецФункции

// Расчитывает данные показателя по периодам
//
//	Параметры:
// 		МенеджерВременныхТаблиц	- МенеджерВременныхТаблиц. Временные таблицы с периодами и показателями.
// 		Детализация				- ТипДополненияПериодаКомпоновкиДанных. Период детализации.
//
//	Возвращаемое значение:
//		ТаблицаДанных. ТаблицаЗначений. Данные показателя.
//
Функция РасчитатьПоказатель(МенеджерВременныхТаблиц, Детализация = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПоказательМониторинга", ЭтотОбъект.Владелец);
	Запрос.УстановитьПараметр("Показатель", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("МассивБаз", КлючевыеОперации.ВыгрузитьКолонку("ИнформационнаяБаза"));
	Запрос.УстановитьПараметр("МассивОпераций", КлючевыеОперации.ВыгрузитьКолонку("ИдентификаторКлючевойОперации"));
	Запрос.УстановитьПараметр("МассивПользователей", Пользователи.ВыгрузитьКолонку("ИмяПользователя"));
	Запрос.УстановитьПараметр("ПорогПревышения", ПорогПревышенияЦелевогоВремени);
	Запрос.УстановитьПараметр("Дельта", ДельтаСреднееВремяЗамера);
	Запрос.УстановитьПараметр("МинимальноЗамеров", МинимальноеКоличествоЗамеров);
	Запрос.УстановитьПараметр("ГлубинаВыборки", ГлубинаВыборки);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПодготовительная.ДатаТочки КАК ДатаТочки,
	|	ТаблицаПодготовительная.ДатаТочкиДанные КАК ДатаТочкиДанные,
	|	ТаблицаПодготовительная.ДатаТочкиДанныеСледующая КАК ДатаТочкиДанныеСледующая
	|ИЗ
	|	ТаблицаПодготовительная КАК ТаблицаПодготовительная
	|ГДЕ
	|	ТаблицаПодготовительная.ПоказательМониторинга = &ПоказательМониторинга
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТочки
	|";
	
	ВыборкаТочки = Запрос.Выполнить().Выбрать();
	
	ТаблицаДетальныхДанных = Неопределено;
	
	Если ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.APDEX Тогда
		ТаблицаДетальныхДанных = РасчитатьПоказательAPDEX(Запрос, ВыборкаТочки);
	ИначеЕсли ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.КоличествоОперацийПревышенияЦелевогоВремени Тогда
		ТаблицаДетальныхДанных = РасчитатьПоказательКоличествоОперацийПревышенияЦелевогоВремени(Запрос, ВыборкаТочки);
	ИначеЕсли ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.ПроцентПользователейИзмененияЦелевогоВремени Тогда
		ТаблицаДетальныхДанных = РасчитатьПоказательПроцентПользователейИзмененияЦелевогоВремени(Запрос, ВыборкаТочки);
	ИначеЕсли ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.ПроцентПользователейПревышенияЦелевогоВремени Тогда
		ТаблицаДетальныхДанных = РасчитатьПоказательПроцентПользователейПревышенияЦелевогоВремени(Запрос, ВыборкаТочки);
	ИначеЕсли ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.СреднееВремяХудшихЗамеров Тогда
		ТаблицаДетальныхДанных = РасчитатьПоказательСреднееВремяХудшихЗамеров(Запрос, ВыборкаТочки);
	КонецЕсли;
	
	Если ЭтотОбъект.Владелец.ПоказыватьТренд Тогда
		РасчетИтоговПоказателей.СгладитьДанные(ТаблицаДетальныхДанных, ЭтотОбъект.Владелец.ТипСглаживания, ЭтотОбъект.Владелец.КоличествоУсредняемыхЗначений);
	КонецЕсли;
	
	Возврат ТаблицаДетальныхДанных;
	
КонецФункции

#КонецОбласти

#КонецЕсли