////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ТипСпискаПользователей  = Перечисления.ТипыСпискаПользователей.Все;
		Объект.ПериодAPDEX = 100;
		Объект.ТипПоказателя = Перечисления.ТипыПоказателейПроизводительности.APDEX;
	КонецЕсли;
	
	ЭтотОбъект.УсловиеФильтра = "равно";
	ЭтотОбъект.Актуальные = "Актуальные";
	
	ОбновитьДеревоЗначенийКлючевыхОпераций();
	
	Элементы.СписокКлючевыхОперацийФильтр.Видимость = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьПараметраПоказателя()
	Если Объект.ТипПоказателя = ПредопределенноеЗначение("Перечисление.ТипыПоказателейПроизводительности.APDEX") Тогда
		ЭтотОбъект.Элементы.ДекорацияПериодAPDEX.Заголовок = "замеров";
		ЭтотОбъект.Элементы.ГлубинаВыборки.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДекорацияГлубинаВыборки.Видимость = Ложь;
		ЭтотОбъект.Элементы.КоличествоХудшихЗамеров.Видимость = Ложь;
		ЭтотОбъект.Элементы.ПорогПревышенияЦелевогоВремени.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДекорацияПорогПревышенияЦелевогоВремени.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДельтаСреднееВремяЗамера.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДекорацияЕдиницаПараметраПоказателя.Видимость = Ложь;
		ЭтотОбъект.Элементы.МинимальноеКоличествоЗамеров.Видимость = Ложь;
	ИначеЕсли Объект.ТипПоказателя = ПредопределенноеЗначение("Перечисление.ТипыПоказателейПроизводительности.СреднееВремяХудшихЗамеров") Тогда
		ЭтотОбъект.Элементы.ДекорацияПериодAPDEX.Заголовок = "замеров";
		ЭтотОбъект.Элементы.ГлубинаВыборки.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДекорацияГлубинаВыборки.Видимость = Ложь;
		ЭтотОбъект.Элементы.КоличествоХудшихЗамеров.Видимость = Истина;
		ЭтотОбъект.Элементы.ПорогПревышенияЦелевогоВремени.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДекорацияПорогПревышенияЦелевогоВремени.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДельтаСреднееВремяЗамера.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДекорацияЕдиницаПараметраПоказателя.Видимость = Истина;
		ЭтотОбъект.Элементы.МинимальноеКоличествоЗамеров.Видимость = Ложь;
	ИначеЕсли Объект.ТипПоказателя = ПредопределенноеЗначение("Перечисление.ТипыПоказателейПроизводительности.КоличествоОперацийПревышенияЦелевогоВремени") Тогда
		ЭтотОбъект.Элементы.ДекорацияПериодAPDEX.Заголовок = "замеров";
		ЭтотОбъект.Элементы.ГлубинаВыборки.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДекорацияГлубинаВыборки.Видимость = Ложь;
		ЭтотОбъект.Элементы.КоличествоХудшихЗамеров.Видимость = Ложь;
		ЭтотОбъект.Элементы.ПорогПревышенияЦелевогоВремени.Видимость = Истина;
		ЭтотОбъект.Элементы.ДекорацияПорогПревышенияЦелевогоВремени.Видимость = Истина;
		ЭтотОбъект.Элементы.ДельтаСреднееВремяЗамера.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДекорацияЕдиницаПараметраПоказателя.Видимость = Ложь;
		ЭтотОбъект.Элементы.МинимальноеКоличествоЗамеров.Видимость = Ложь;
	ИначеЕсли Объект.ТипПоказателя = ПредопределенноеЗначение("Перечисление.ТипыПоказателейПроизводительности.ПроцентПользователейПревышенияЦелевогоВремени") Тогда
		ЭтотОбъект.Элементы.ДекорацияПериодAPDEX.Заголовок = "замеров";
		ЭтотОбъект.Элементы.ГлубинаВыборки.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДекорацияГлубинаВыборки.Видимость = Ложь;
		ЭтотОбъект.Элементы.КоличествоХудшихЗамеров.Видимость = Ложь;
		ЭтотОбъект.Элементы.ПорогПревышенияЦелевогоВремени.Видимость = Истина;
		ЭтотОбъект.Элементы.ДекорацияПорогПревышенияЦелевогоВремени.Видимость = Истина;
		ЭтотОбъект.Элементы.ДельтаСреднееВремяЗамера.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДекорацияЕдиницаПараметраПоказателя.Видимость = Ложь;
		ЭтотОбъект.Элементы.МинимальноеКоличествоЗамеров.Видимость = Ложь;
	ИначеЕсли Объект.ТипПоказателя = ПредопределенноеЗначение("Перечисление.ТипыПоказателейПроизводительности.ПроцентПользователейИзмененияЦелевогоВремени") Тогда
		ЭтотОбъект.Элементы.ДекорацияПериодAPDEX.Заголовок = "дней";
		ЭтотОбъект.Элементы.ГлубинаВыборки.Видимость = Истина;
		ЭтотОбъект.Элементы.ДекорацияГлубинаВыборки.Видимость = Истина;
		ЭтотОбъект.Элементы.КоличествоХудшихЗамеров.Видимость = Ложь;
		ЭтотОбъект.Элементы.ПорогПревышенияЦелевогоВремени.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДекорацияПорогПревышенияЦелевогоВремени.Видимость = Ложь;
		ЭтотОбъект.Элементы.ДельтаСреднееВремяЗамера.Видимость = Истина;
		ЭтотОбъект.Элементы.ДекорацияЕдиницаПараметраПоказателя.Видимость = Истина;
		ЭтотОбъект.Элементы.МинимальноеКоличествоЗамеров.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначенияПоУмолчанию()
	Если Объект.ТипПоказателя = ПредопределенноеЗначение("Перечисление.ТипыПоказателейПроизводительности.APDEX") Тогда
		Объект.ПериодAPDEX = 100;
		Объект.ГлубинаВыборки = 0;
		Объект.ДельтаСреднееВремяЗамера = 0;
		Объект.МинимальноеКоличествоЗамеров = 0;
		Объект.КоличествоХудшихЗамеров = 0;
		Объект.ПорогПревышенияЦелевогоВремени = 0;
	ИначеЕсли Объект.ТипПоказателя = ПредопределенноеЗначение("Перечисление.ТипыПоказателейПроизводительности.СреднееВремяХудшихЗамеров") Тогда
		Объект.ПериодAPDEX = 100;
		Объект.ГлубинаВыборки = 0;
		Объект.ДельтаСреднееВремяЗамера = 0;
		Объект.МинимальноеКоличествоЗамеров = 0;
		Объект.КоличествоХудшихЗамеров = 100;
		Объект.ПорогПревышенияЦелевогоВремени = 0;
	ИначеЕсли Объект.ТипПоказателя = ПредопределенноеЗначение("Перечисление.ТипыПоказателейПроизводительности.КоличествоОперацийПревышенияЦелевогоВремени") Тогда
		Объект.ПериодAPDEX = 100;
		Объект.ГлубинаВыборки = 0;
		Объект.ДельтаСреднееВремяЗамера = 0;
		Объект.МинимальноеКоличествоЗамеров = 0;
		Объект.КоличествоХудшихЗамеров = 0;
		Объект.ПорогПревышенияЦелевогоВремени = 4;
	ИначеЕсли Объект.ТипПоказателя = ПредопределенноеЗначение("Перечисление.ТипыПоказателейПроизводительности.ПроцентПользователейПревышенияЦелевогоВремени") Тогда
		Объект.ПериодAPDEX = 100;
		Объект.ГлубинаВыборки = 0;
		Объект.ДельтаСреднееВремяЗамера = 0;
		Объект.МинимальноеКоличествоЗамеров = 0;
		Объект.КоличествоХудшихЗамеров = 0;
		Объект.ПорогПревышенияЦелевогоВремени = 4;
	ИначеЕсли Объект.ТипПоказателя = ПредопределенноеЗначение("Перечисление.ТипыПоказателейПроизводительности.ПроцентПользователейИзмененияЦелевогоВремени") Тогда
		Объект.ПериодAPDEX = 7;
		Объект.ГлубинаВыборки = 7;
		Объект.ДельтаСреднееВремяЗамера = 25;
		Объект.МинимальноеКоличествоЗамеров = 10;
		Объект.КоличествоХудшихЗамеров = 0;
		Объект.ПорогПревышенияЦелевогоВремени = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьПараметраПоказателя();
	ПриОткрытииСервер();
КонецПроцедуры

&НаСервере
Функция СписокПользователей()
	
	Если Объект.ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.Все Тогда
		Возврат "";
	КонецЕсли;
	
	СписокВСтроку = "";
	
	НачалоСписка = Истина;
	Для Каждого ПользовательСтрока Из Объект.Пользователи Цикл
		Если НачалоСписка Тогда
			НачалоСписка = Ложь;
		Иначе
			СписокВСтроку = СписокВСтроку + ", ";
		КонецЕсли;
		ИмяПользователя = ПользовательСтрока.ИмяПользователя;
		Если ПустаяСтрока(ИмяПользователя) Тогда
			ИмяПользователя = "<пустое имя>";
		КонецЕсли;
		СписокВСтроку = СписокВСтроку + ИмяПользователя;
	КонецЦикла;
	
	Если Объект.ТипСпискаПользователей = Перечисления.ТипыСпискаПользователей.ВсеКроме Тогда
		Возврат ", Кроме пользователей: " + СписокВСтроку;
	Иначе
		Возврат ", Пользователи: " + СписокВСтроку;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ИдентификаторТипаПоказателя()	
	Если ЗначениеЗаполнено(Объект.Ссылка.Метаданные().РасширенноеПредставлениеОбъекта) Тогда
		Возврат Объект.Ссылка.Метаданные().РасширенноеПредставлениеОбъекта;
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка.Метаданные().ПредставлениеОбъекта) Тогда
		Возврат Объект.Ссылка.Метаданные().ПредставлениеОбъекта;
	Иначе
		Возврат Объект.Ссылка.Метаданные().Синоним;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция Описание(КлючеваяОперация)
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ОценкаПроизводительностиКлючевыеОперации.Имя,
	//	|	ОценкаПроизводительностиКлючевыеОперации.ИнформационнаяБаза.Наименование КАК ИнформационнаяБаза
	//	|ИЗ
	//	|	РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК ОценкаПроизводительностиКлючевыеОперации
	//	|ГДЕ
	//	|	(ОценкаПроизводительностиКлючевыеОперации.УникальныйИдентификатор, ОценкаПроизводительностиКлючевыеОперации.ИнформационнаяБаза) В (&КлючевыеОперации)";
	//Запрос.УстановитьПараметр("КлючевыеОперации", Объект.КлючевыеОперации.Выгрузить(,"ИдентификаторКлючевойОперации, ИнформационнаяБаза"));
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//КлючеваяОперация = "";
	//Пока Выборка.Следующий() Цикл
	//	КлючеваяОперация = КлючеваяОперация + ?(ПустаяСтрока(КлючеваяОперация), "", "; ") + 
	//		Выборка.Имя + ", " + Выборка.ИнформационнаяБаза;
	//КонецЦикла;
	
	ПользователиВСтроку = СписокПользователей();
	НаименованиеВСтроку = ИдентификаторТипаПоказателя() 
		+ "("
		+ ?(ПустаяСтрока(КлючеваяОперация), "", "операции: [" + КлючеваяОперация + "], ")
		+ "период = " + Строка(Объект.ПериодAPDEX)
		+ ПользователиВСтроку
		+ ")";
	
	Возврат НаименованиеВСтроку;
	
КонецФункции

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//СинхронизоватьСпискиОпераций();
	
	КлючеваяОперация = "";
	ТекущийОбъект.КлючевыеОперации.Очистить();
	БазыДанных = ЭтотОбъект.СписокКлючевыхОперацийДеревоЗначений.ПолучитьЭлементы();
	Для Каждого БазаДанных Из БазыДанных Цикл
		Если БазаДанных.Выбран <> 0 Тогда
			Показатели = БазаДанных.ПолучитьЭлементы();
			Для Каждого Показатель Из Показатели Цикл
				Если Показатель.Выбран = 1 Тогда
					СтрокаОбъекта = ТекущийОбъект.КлючевыеОперации.Добавить();
					СтрокаОбъекта.ИдентификаторКлючевойОперации = Показатель.ИдентификаторКлючевойОперации;
					СтрокаОбъекта.ИнформационнаяБаза = Показатель.ИнформационнаяБаза;
					
					КлючеваяОперация =
						КлючеваяОперация + 
						?(ПустаяСтрока(КлючеваяОперация), "", "; ") + 
						Показатель.Наименование + ", " + 
						Показатель.ИнформационнаяБаза;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
		
	//Для Каждого СтрокаКлючевойОперации Из СписокКлючевыхОпераций Цикл
	//	Если СтрокаКлючевойОперации.Выбрано Тогда
	//		СтрокаОбъекта = ТекущийОбъект.КлючевыеОперации.Добавить();
	//		СтрокаОбъекта.ИдентификаторКлючевойОперации = СтрокаКлючевойОперации.ИдентификаторКлючевойОперации;
	//		СтрокаОбъекта.ИнформационнаяБаза = СтрокаКлючевойОперации.ИнформационнаяБаза;
	//	КонецЕсли;
	//КонецЦикла;
	
	Изменился = ОбъектИзменился();
	Если ТекущийОбъект.ГУИД = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000") Тогда
		ТекущийОбъект.ГУИД = Новый УникальныйИдентификатор();
	КонецЕсли;
	Если ТекущийОбъект.Ссылка.Пустая() Тогда
		СтарыйИдентификаторТипа = "";
	Иначе
		СтарыйИдентификаторТипа = ТекущийОбъект.Ссылка.ПолучитьОбъект().ИдентификаторТипаПоказателя();
	КонецЕсли;
	
	ПараметрОповещения = МониторингСервер.ПараметрОповещенияПоказательЗаписан(ТекущийОбъект);
	ПараметрОповещения.Изменился = ОбъектИзменился();
	Если ТекущийОбъект.Описание = "" Тогда
		ТекущийОбъект.Описание = Описание(КлючеваяОперация);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрОповещения.Ссылка = Объект.Ссылка;
	ПараметрОповещения.Описание = Объект.Описание;
	Оповестить("ПоказательЗаписан", ПараметрОповещения, ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ТипСпискаПользователейПриИзменении(Элемент)
	ТипСпискаПользователейПриИзмененииСервер();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПриОткрытииСервер()
	НастроитьДоступностьПользователей();
КонецПроцедуры

&НаСервере
Процедура ТипСпискаПользователейПриИзмененииСервер()
	// Если предыдущее значение типа списка было "Все пользователи" (на что указывает невидимость элемента формы),
	// а новое значение подразумевает настройку пользователей, тогда обновляем варианты выбора пользователей
	Если НЕ Элементы.Пользователи.Видимость И Объект.ТипСпискаПользователей <> Перечисления.ТипыСпискаПользователей.Все Тогда
		//ОбновитьСписокПользователей();
	КонецЕсли;
	НастроитьДоступностьПользователей();
КонецПроцедуры

&НаСервере
Функция НастроитьДоступностьПользователей()
	ОграничениеНаПользователей = ОграничениеНаПользователей();
	Элементы.Пользователи.Видимость = ОграничениеНаПользователей;
	//Если НЕ ОграничениеНаПользователей Тогда
	//	Объект.Пользователи.Очистить();
	//КонецЕсли;
	Возврат ОграничениеНаПользователей;
КонецФункции

&НаСервере
Функция ОграничениеНаПользователей()
	
	Возврат Объект.ТипСпискаПользователей <> Перечисления.ТипыСпискаПользователей.Все;
	
КонецФункции

&НаСервере
Функция ОбъектИзменился()
	
	КлючевыеОперацииСсылка = Объект.Ссылка.КлючевыеОперации;
	ВыбранныеКлючевыеОперации = ВыбранныеКлючевыеОперации();
	
	Если ВыбранныеКлючевыеОперации.Количество() <> КлючевыеОперацииСсылка.Количество() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для Каждого СтрокаКО Из КлючевыеОперацииСсылка Цикл
		
		Если ВыбранныеКлючевыеОперации.Найти(СтрокаКО.ИдентификаторКлючевойОперации) = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
			
	КонецЦикла;
	
	Если Объект.ПериодAPDEX <> Объект.Ссылка.ПериодAPDEX Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Объект.ТипСпискаПользователей <> Объект.Ссылка.ТипСпискаПользователей Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПользователиСсылка = Объект.Ссылка.Пользователи;
	ВыбранныеПользователи = Объект.Пользователи;
	
	Если ВыбранныеПользователи.Количество() <> ПользователиСсылка.Количество() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для Каждого СтрокаПользователя Из ВыбранныеПользователи Цикл
		
		Если ПользователиСсылка.Найти(СтрокаПользователя.ИмяПользователя) = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
			
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьВсеКлючевыеОперации(Команда)
	Модифицированность = Истина;
	БазыДанных = ЭтотОбъект.СписокКлючевыхОперацийДеревоЗначений.ПолучитьЭлементы();
	Для Каждого БазаДанных Из БазыДанных Цикл
		БазаДанных.Выбран = 1;
		Показатели = БазаДанных.ПолучитьЭлементы();
		Для Каждого Показатель Из Показатели Цикл
			Показатель.Выбран = 1;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыборВсехКлючевыхОпераций(Команда)
	Модифицированность = Истина;
	БазыДанных = ЭтотОбъект.СписокКлючевыхОперацийДеревоЗначений.ПолучитьЭлементы();
	Для Каждого БазаДанных Из БазыДанных Цикл
		БазаДанных.Выбран = 0;
		Показатели = БазаДанных.ПолучитьЭлементы();
		Для Каждого Показатель Из Показатели Цикл
			Показатель.Выбран = 0;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ВыбранныеКлючевыеОперации()
	Результат = Новый Массив;
	
	ЧислоСтрок = СписокКлючевыхОпераций.Количество();
	ИндексСтроки = 0;
	Пока ИндексСтроки < ЧислоСтрок Цикл
		СтрокаКО = СписокКлючевыхОпераций[ИндексСтроки];
		Если СтрокаКО.Выбрано Тогда
			Результат.Добавить(СтрокаКО.ИдентификаторКлючевойОперации);
		КонецЕсли;
		ИндексСтроки = ИндексСтроки + 1;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ОбновитьДеревоЗначенийКлючевыхОпераций()
	СтруктураДереваКлючевыхОпераций = РеквизитФормыВЗначение("СписокКлючевыхОперацийДеревоЗначений");	
	СтруктураДереваКлючевыхОпераций.Строки.Очистить();
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	%ПолеВыбран КАК Выбран,
	|	КлючевыеОперацииПоказателя.Ссылка.ПометкаУдаления,
	|	ОценкаПроизводительностиКлючевыеОперации.УникальныйИдентификатор КАК УникальныйИдентификатор,
	|	ОценкаПроизводительностиКлючевыеОперации.Имя КАК Имя,
	|	ОценкаПроизводительностиКлючевыеОперации.ИнформационнаяБаза КАК ИнформационнаяБаза,
	|	ОценкаПроизводительностиКлючевыеОперации.ЦелевоеВремяВИБ КАК ЦелевоеВремя,
	|	ОценкаПроизводительностиКлючевыеОперации.ПриоритетВИБ КАК Приоритет
	|ИЗ
	|	РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК ОценкаПроизводительностиКлючевыеОперации
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.ПоказателиAPDEX.КлючевыеОперации КАК КлючевыеОперацииПоказателя
	|ПО
	|	КлючевыеОперацииПоказателя.Ссылка = &ТекущийПоказатель
	|	И КлючевыеОперацииПоказателя.ИдентификаторКлючевойОперации = ОценкаПроизводительностиКлючевыеОперации.УникальныйИдентификатор
	|	И КлючевыеОперацииПоказателя.ИнформационнаяБаза = ОценкаПроизводительностиКлючевыеОперации.ИнформационнаяБаза
	|{ГДЕ
	|	ОценкаПроизводительностиКлючевыеОперации.Имя = &Имя
	|	И ОценкаПроизводительностиКлючевыеОперации.ПомеченаНаУдаление = &ПомеченаНаУдаление}
	|УПОРЯДОЧИТЬ ПО
	|	ОценкаПроизводительностиКлючевыеОперации.ИнформационнаяБаза.Наименование,
	|	ОценкаПроизводительностиКлючевыеОперации.ПриоритетВИБ
	|";
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПолеВыбран", "ВЫБОР
		|		КОГДА КлючевыеОперацииПоказателя.Ссылка IS NULL ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПолеВыбран", "1");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ЗначениеФильтра) Тогда
		Если ЭтотОбъект.Актуальные = "Все" Тогда
			Если ЭтотОбъект.УсловиеФильтра = "равно" Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "{ГДЕ
				|	ОценкаПроизводительностиКлючевыеОперации.Имя = &Имя
				|	И ОценкаПроизводительностиКлючевыеОперации.ПомеченаНаУдаление = &ПомеченаНаУдаление}", "ГДЕ
				|	ОценкаПроизводительностиКлючевыеОперации.Имя = &Имя");
			ИначеЕсли ЭтотОбъект.УсловиеФильтра = "содержит" Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "{ГДЕ
				|	ОценкаПроизводительностиКлючевыеОперации.Имя = &Имя
				|	И ОценкаПроизводительностиКлючевыеОперации.ПомеченаНаУдаление = &ПомеченаНаУдаление}", "ГДЕ
				|	ОценкаПроизводительностиКлючевыеОперации.Имя ПОДОБНО &Имя");
			КонецЕсли;
		Иначе
			Если ЭтотОбъект.УсловиеФильтра = "равно" Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "{ГДЕ
				|	ОценкаПроизводительностиКлючевыеОперации.Имя = &Имя
				|	И ОценкаПроизводительностиКлючевыеОперации.ПомеченаНаУдаление = &ПомеченаНаУдаление}", "ГДЕ
				|	ОценкаПроизводительностиКлючевыеОперации.Имя = &Имя
				|	И ОценкаПроизводительностиКлючевыеОперации.ПомеченаНаУдаление = ЛОЖЬ");
			ИначеЕсли ЭтотОбъект.УсловиеФильтра = "содержит" Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "{ГДЕ
				|	ОценкаПроизводительностиКлючевыеОперации.Имя = &Имя
				|	И ОценкаПроизводительностиКлючевыеОперации.ПомеченаНаУдаление = &ПомеченаНаУдаление}", "ГДЕ
				|	ОценкаПроизводительностиКлючевыеОперации.Имя ПОДОБНО &Имя
				|	И ОценкаПроизводительностиКлючевыеОперации.ПомеченаНаУдаление = ЛОЖЬ");
			КонецЕсли;
		КонецЕсли;
		Запрос.УстановитьПараметр("Имя", ЭтотОбъект.ЗначениеФильтра);
	Иначе
		Если ЭтотОбъект.Актуальные = "Все" Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "{ГДЕ
			|	ОценкаПроизводительностиКлючевыеОперации.Имя = &Имя
			|	И ОценкаПроизводительностиКлючевыеОперации.ПомеченаНаУдаление = &ПомеченаНаУдаление}", "");
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "{ГДЕ
			|	ОценкаПроизводительностиКлючевыеОперации.Имя = &Имя
			|	И ОценкаПроизводительностиКлючевыеОперации.ПомеченаНаУдаление = &ПомеченаНаУдаление}", "ГДЕ
			|	ОценкаПроизводительностиКлючевыеОперации.ПомеченаНаУдаление = ЛОЖЬ");
		КонецЕсли;
	КонецЕсли;
		
	Запрос.УстановитьПараметр("ТекущийПоказатель", Объект.Ссылка);
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	
	ТекущаяБаза = Неопределено;
	ТекущаяБазаЭлементДерева = Неопределено;
	ВыбраноПоказателей = 0;
	ПоказателейВБазе = 0;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ТекущаяБаза <> Выборка.ИнформационнаяБаза Тогда
			Если ТекущаяБаза <> Неопределено Тогда
				Если ВыбраноПоказателей = 0 Тогда
					ТекущаяБазаЭлементДерева.Выбран = 0;
					ТекущаяБазаЭлементДерева.Наименование =
						ТекущаяБазаЭлементДерева.Наименование +
						": показателей " + ПоказателейВБазе;
				ИначеЕсли ВыбраноПоказателей = ТекущаяБазаЭлементДерева.Строки.Количество() Тогда
					ТекущаяБазаЭлементДерева.Выбран = 1;
					ТекущаяБазаЭлементДерева.Наименование =
						ТекущаяБазаЭлементДерева.Наименование +
						": показателей " + ПоказателейВБазе;
				Иначе
					ТекущаяБазаЭлементДерева.Выбран = 2;
					ТекущаяБазаЭлементДерева.Наименование =
						ТекущаяБазаЭлементДерева.Наименование +
						": выбрано показателей " + ВыбраноПоказателей +
						" из " + ПоказателейВБазе;
				КонецЕсли;
			КонецЕсли;
						
			ТекущаяБазаЭлементДерева = СтруктураДереваКлючевыхОпераций.Строки.Добавить();
			ТекущаяБазаЭлементДерева.Наименование = Выборка.ИнформационнаяБаза;
			ТекущаяБазаЭлементДерева.ИнформационнаяБаза = Выборка.ИнформационнаяБаза;
			ВыбраноПоказателей = 0;
			ПоказателейВБазе = 0;
		КонецЕсли;
		
		ПоказателейВБазе = ПоказателейВБазе + 1;
		ВыбраноПоказателей = ВыбраноПоказателей + Выборка.Выбран;
		
		ПоказательЭлементДерева = ТекущаяБазаЭлементДерева.Строки.Добавить();
		ПоказательЭлементДерева.Выбран = Выборка.Выбран;
		ПоказательЭлементДерева.Наименование = Выборка.Имя;
		ПоказательЭлементДерева.ЦелевоеВремя = Выборка.ЦелевоеВремя;
		ПоказательЭлементДерева.Приоритет = Выборка.Приоритет;
		
		ПоказательЭлементДерева.ИнформационнаяБаза = Выборка.ИнформационнаяБаза;
		ПоказательЭлементДерева.ИдентификаторКлючевойОперации = Выборка.УникальныйИдентификатор;
		
		ТекущаяБаза = Выборка.ИнформационнаяБаза;
	КонецЦикла;
	Если ТекущаяБазаЭлементДерева <> Неопределено Тогда
		Если ВыбраноПоказателей = 0 Тогда
			ТекущаяБазаЭлементДерева.Выбран = 0;
			ТекущаяБазаЭлементДерева.Наименование =
			ТекущаяБазаЭлементДерева.Наименование +
			": показателей " + ПоказателейВБазе;
		ИначеЕсли ВыбраноПоказателей = ТекущаяБазаЭлементДерева.Строки.Количество() Тогда
			ТекущаяБазаЭлементДерева.Выбран = 1;
			ТекущаяБазаЭлементДерева.Наименование =
			ТекущаяБазаЭлементДерева.Наименование +
			": показателей " + ПоказателейВБазе;
		Иначе
			ТекущаяБазаЭлементДерева.Выбран = 2;
			ТекущаяБазаЭлементДерева.Наименование =
			ТекущаяБазаЭлементДерева.Наименование +
			": выбрано показателей " + ВыбраноПоказателей +
			" из " + ПоказателейВБазе;
		КонецЕсли;
	КонецЕсли;
	
	
	ЗначениеВРеквизитФормы(СтруктураДереваКлючевыхОпераций, "СписокКлючевыхОперацийДеревоЗначений");
КонецПроцедуры

&НаКлиенте
Процедура СписокКлючевыхОперацийДеревоЗначенийВыбранПриИзменении(Элемент)
	Модифицированность = Истина;
	ИдентификаторТекущейСтроки = Элементы.СписокКлючевыхОперацийДеревоЗначений.ТекущаяСтрока;
	Если ИдентификаторТекущейСтроки <> Неопределено Тогда
		ЭлементДерева = ЭтотОбъект.СписокКлючевыхОперацийДеревоЗначений.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
		Если ЭлементДерева.Выбран = 2 Тогда
			ЭлементДерева.Выбран = 0;
		КонецЕсли;
			
		ЭлементыПотомки = ЭлементДерева.ПолучитьЭлементы();
		
		//Это элемент базы данных
		Если ЭлементыПотомки.Количество() > 0 Тогда
			Для Каждого ЭлементПотомок Из ЭлементыПотомки Цикл
				ЭлементПотомок.Выбран = ЭлементДерева.Выбран;
			КонецЦикла;
			ЭлементДерева.Наименование = Строка(ЭлементДерева.ИнформационнаяБаза) + ": показателей " + ЭлементыПотомки.Количество();
		//Это элемент ключевой операции
		Иначе
			РодительЭлементаДерева = ЭлементДерева.ПолучитьРодителя();
			ЭлементыПотомки = РодительЭлементаДерева.ПолучитьЭлементы();
			ВсегоВыбрано = 0;
			Для Каждого ЭлементПотомок Из ЭлементыПотомки Цикл
				ВсегоВыбрано = ВсегоВыбрано + ЭлементПотомок.Выбран;
			КонецЦикла;
			
			Если ВсегоВыбрано = 0 Тогда
				РодительЭлементаДерева.Выбран = 0;
				РодительЭлементаДерева.Наименование = Строка(РодительЭлементаДерева.ИнформационнаяБаза) + ": показателей " + ЭлементыПотомки.Количество();
			ИначеЕсли ВсегоВыбрано = ЭлементыПотомки.Количество() Тогда
				РодительЭлементаДерева.Выбран = 1;
				РодительЭлементаДерева.Наименование = Строка(РодительЭлементаДерева.ИнформационнаяБаза) + ": показателей " + ЭлементыПотомки.Количество();
			Иначе
				РодительЭлементаДерева.Выбран = 2;
				РодительЭлементаДерева.Наименование =
					Строка(РодительЭлементаДерева.ИнформационнаяБаза) +
					": выбрано показателей " + ВсегоВыбрано +
					" из " + ЭлементыПотомки.Количество();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипПоказателяПриИзменении(Элемент)
	ЭтотОбъект.Заголовок = Объект.ТипПоказателя;
	УстановитьЗначенияПоУмолчанию();
	УстановитьВидимостьПараметраПоказателя();
КонецПроцедуры

&НаКлиенте
Процедура ПорогПревышенияЦелевогоВремениПриИзменении(Элемент)
	ЗначенияДляРаз = Новый Массив;
	ЗначенияДляРаз.Добавить("0");
	ЗначенияДляРаз.Добавить("1");
	ЗначенияДляРаз.Добавить("5");
	ЗначенияДляРаз.Добавить("6");
	ЗначенияДляРаз.Добавить("7");
	ЗначенияДляРаз.Добавить("8");
	ЗначенияДляРаз.Добавить("9");
	
	Если Объект.ПорогПревышенияЦелевогоВремени >=10 И Объект.ПорогПревышенияЦелевогоВремени <= 20 Тогда
		ЭтотОбъект.Элементы.ДекорацияПорогПревышенияЦелевогоВремени.Заголовок = "раз";
	Иначе
		ПравСимвол = Прав(Строка(Объект.ПорогПревышенияЦелевогоВремени), 1);
		Если ЗначенияДляРаз.Найти(ПравСимвол) <> Неопределено Тогда
			ЭтотОбъект.Элементы.ДекорацияПорогПревышенияЦелевогоВремени.Заголовок = "раз";
		Иначе
			ЭтотОбъект.Элементы.ДекорацияПорогПревышенияЦелевогоВремени.Заголовок = "раза";
		КонецЕсли;
	КонецЕсли;
	
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДерево(Команда)
	ПодключитьОбработчикОжидания("ОбновитьДеревоЗначенийКлючевыхОперацийПодключаемый", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура АктуальныеПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("ОбновитьДеревоЗначенийКлючевыхОперацийПодключаемый", 0.1, Истина);	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоЗначенийКлючевыхОперацийПодключаемый()
	ОбновитьДеревоЗначенийКлючевыхОпераций();
КонецПроцедуры


&НаКлиенте
Процедура УсловиеФильтраПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("ОбновитьДеревоЗначенийКлючевыхОперацийПодключаемый", 0.1, Истина);
КонецПроцедуры


&НаКлиенте
Процедура ЗначениеФильтраПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("ОбновитьДеревоЗначенийКлючевыхОперацийПодключаемый", 0.1, Истина);
КонецПроцедуры


&НаКлиенте
Процедура РазвернутьДерево(Команда)
	ЭлементыДерева = СписокКлючевыхОперацийДеревоЗначений.ПолучитьЭлементы();
	Для Каждого ТекЭлемент Из ЭлементыДерева Цикл
		Элементы.СписокКлючевыхОперацийДеревоЗначений.Развернуть(ТекЭлемент.ПолучитьИдентификатор(), ИСТИНА);
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура СвернутьДерево(Команда)
	ЭлементыДерева = СписокКлючевыхОперацийДеревоЗначений.ПолучитьЭлементы();
	Для Каждого ТекЭлемент Из ЭлементыДерева Цикл
		Элементы.СписокКлючевыхОперацийДеревоЗначений.Свернуть(ТекЭлемент.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры

