#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Функция ПолучитьМассивСтруктурыПоказателей(ТипПоказателя, ИдентификаторНастройки, МассивСтруктурПоказателей, ТолькоВыбранные) Экспорт
	
	МассивСтруктурыПоказателей = Новый Массив;
	
	ТаблицаПоказателей = Новый ТаблицаЗначений;
	ТаблицаПоказателей.Колонки.Добавить("ПоказательМониторинга", Новый ОписаниеТипов("СправочникСсылка.ПоказателиМониторинга"));
	ТаблицаПоказателей.Колонки.Добавить("ГруппаОбъектовКонтроля", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтруктураПоказатель Из МассивСтруктурПоказателей Цикл
		
		Если ЗначениеЗаполнено(СтруктураПоказатель.Показатель) И СтруктураПоказатель.ТипПоказателя = "ПроцентДоступностиСервисаВсеРесурсы" Тогда
			
			НоваяСтрока							= ТаблицаПоказателей.Добавить();
			НоваяСтрока.ПоказательМониторинга	= СтруктураПоказатель.Показатель;
			НоваяСтрока.ГруппаОбъектовКонтроля	= СтруктураПоказатель.ГруппаОбъектовКонтроля;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ИдентификаторНастройки", ИдентификаторНастройки);
	Запрос.УстановитьПараметр("ТаблицаПоказателей", ТаблицаПоказателей);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПоказателей.ПоказательМониторинга КАК ПоказательМониторинга,
	|	ТаблицаПоказателей.ГруппаОбъектовКонтроля КАК ГруппаОбъектовКонтроля
	|ПОМЕСТИТЬ
	|	ТаблицаПоказателей
	|ИЗ
	|	&ТаблицаПоказателей КАК ТаблицаПоказателей
	|
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаПоказателей.ПоказательМониторинга.Наименование Как Код,
	|	ТаблицаПоказателей.ПоказательМониторинга КАК ПоказательМониторинга
	|ИЗ
	|	ТаблицаПоказателей КАК ТаблицаПоказателей
	|ГДЕ
	|	ТаблицаПоказателей.ГруппаОбъектовКонтроля
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|";
	
	СтруктураДанныхГруппы = Новый Структура();
	СтруктураДанныхГруппы.Вставить("ПоказательМониторинга", "");
	СтруктураДанныхГруппы.Вставить("ОбъектКонтроля", "ГруппаОбъектовКонтроляРодитель");
	СтруктураДанныхГруппы.Вставить("Код", "Группы доступности сервисов");
	СтруктураДанныхГруппы.Вставить("МассивСтрок", Новый Массив());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураДанных = Новый Структура();
		СтруктураДанных.Вставить("ПоказательМониторинга", Строка(Выборка.ПоказательМониторинга.УникальныйИдентификатор()));
		СтруктураДанных.Вставить("ОбъектКонтроля", "ГруппаОбъектовКонтроля");
		СтруктураДанных.Вставить("Код", Выборка.Код);
		СтруктураДанных.Вставить("МассивСтрок", Новый Массив());
		
		СтруктураДанныхГруппы.МассивСтрок.Добавить(СтруктураДанных);
		
	КонецЦикла;
	
	МассивСтруктурыПоказателей.Добавить(СтруктураДанныхГруппы);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Публикации.Ссылка.Наименование КАК ПубликацияНаименование,
	|	Публикации.Ссылка КАК ОбъектКонтроля,
	|	ЕСТЬNULL(ТаблицаПоказателей.ПоказательМониторинга, Неопределено) КАК ПоказательМониторинга
	|ИЗ
	|	Справочник.Публикации КАК Публикации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПроцентДоступностиСервисаВсеРесурсы.Ресурсы КАК ПроцентДоступностиСервисаВсеРесурсыРесурсы
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПоказателей КАК ТаблицаПоказателейОтбор
	|		ПО ТаблицаПоказателейОтбор.ПоказательМониторинга.Показатель = ПроцентДоступностиСервисаВсеРесурсыРесурсы.Ссылка
	|		И НЕ ТаблицаПоказателейОтбор.ГруппаОбъектовКонтроля
	|
	|	ПО ПроцентДоступностиСервисаВсеРесурсыРесурсы.Ресурс = Публикации.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПоказателей КАК ТаблицаПоказателей
	|	ПО ТаблицаПоказателей.ПоказательМониторинга.Показатель = ПроцентДоступностиСервисаВсеРесурсыРесурсы.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПубликацияНаименование
	|";
	
	ВыборкаПубликации = Запрос.Выполнить().Выбрать();
		
	Пока ВыборкаПубликации.Следующий() Цикл
	
		Если ТолькоВыбранные И НЕ ЗначениеЗаполнено(ВыборкаПубликации.ПоказательМониторинга) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураДанныхПубликация = Новый Структура();
		
		Если ЗначениеЗаполнено(ВыборкаПубликации.ПоказательМониторинга) Тогда
			СтруктураДанныхПубликация.Вставить("ПоказательМониторинга", Строка(ВыборкаПубликации.ПоказательМониторинга.УникальныйИдентификатор()));
		Иначе
			СтруктураДанныхПубликация.Вставить("ПоказательМониторинга", "");
		КонецЕсли;
		
		СтруктураДанныхПубликация.Вставить("Код", ВыборкаПубликации.ПубликацияНаименование);
		СтруктураДанныхПубликация.Вставить("ОбъектКонтроля", ВыборкаПубликации.ОбъектКонтроля);
		СтруктураДанныхПубликация.Вставить("МассивСтрок", Новый Массив());
		
		МассивСтруктурыПоказателей.Добавить(СтруктураДанныхПубликация);
		
	КонецЦикла;
	
	Возврат МассивСтруктурыПоказателей;
	
КонецФункции

Функция ПоискПоказателей(Знач СтрокаПоиска) Экспорт
	
	СтрокаПоиска = СтрЗаменить(СтрокаПоиска, """", "");
	
	МассивРезультатов = Новый Массив;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СтрокаПоиска", "%" + СтрокаПоиска + "%");
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	""Доступность ресурса/"" + Публикации.Наименование КАК Представление,
	|	Публикации.Наименование КАК РесурсПредставление,
	|	Публикации.Ссылка КАК ОбъектКонтроля
	|ИЗ
	|	Справочник.Публикации КАК Публикации
	|ГДЕ
	|	(Публикации.Наименование) ПОДОБНО &СтрокаПоиска
	|
	|УПОРЯДОЧИТЬ ПО
	|	Представление
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураРезультата = Новый Структура();
		СтруктураРезультата.Вставить("Представление", Выборка.Представление);
		СтруктураРезультата.Вставить("ОбъектКонтроля", Выборка.ОбъектКонтроля);
		СтруктураРезультата.Вставить("ТипПоказателя", "ПроцентДоступностиСервисаВсеРесурсы");
		
		МассивРезультатов.Добавить(СтруктураРезультата);
		
	КонецЦикла;
	
	Возврат МассивРезультатов;
	
КонецФункции

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Описание
	|ИЗ
	|	Справочник.ПроцентДоступностиСервисаВсеРесурсы
	|ГДЕ
	|	Ссылка = &Ссылка
	|";
	Запрос.УстановитьПараметр("Ссылка", Данные.Ссылка);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Представление = Выборка.Описание;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецЕсли