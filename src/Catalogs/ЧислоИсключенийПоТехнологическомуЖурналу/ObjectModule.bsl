#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

Функция ПолучитьДанные(
	Знач ОпорнаяДата,
	Знач НачальноеСмещение,
	Знач ЧислоТочек,
	Знач Шаг, 
	Статистика = Неопределено, 
	ВычислитьАгрегатныеЗначения = Истина, 
	ВычислитьГоризонтАктуальности = Ложь,
	РежимСдвига = Ложь
) Экспорт

    ТаблицаДат = Новый ТаблицаЗначений;
    ТаблицаДат.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
    ДатаНачала = ОпорнаяДата;
    ИндексТочки = 0;
    Пока ИндексТочки < ЧислоТочек Цикл
        
        НовСтрока = ТаблицаДат.Добавить();
        НовСтрока.Дата = ДатаНачала + ИндексТочки * Шаг;
        
        ИндексТочки = ИндексТочки + 1;
        
    КонецЦикла;
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   Дата
    |ПОМЕСТИТЬ
    |   ТаблицаДат   
    |ИЗ
    |   &ТаблицаДат КАК ТаблицаДат
    |ИНДЕКСИРОВАТЬ ПО
    |   Дата
    |;
    |ВЫБРАТЬ
    |   ВЫБОР
    |       КОГДА Дата < &ОпорнаяДата ТОГДА &ОпорнаяДата
    |       ИНАЧЕ Дата
    |   КОНЕЦ КАК Дата,
    |   КОЛИЧЕСТВО(*) КАК КоличествоСобытий
    |ПОМЕСТИТЬ
    |   ДанныеБуфер
    |ИЗ
    |   РегистрСведений.ТехнологическийЖурнал
    |ГДЕ
    |   Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
    |   И Тип В (&СобытияИсключений)
    |   И Кластер В (&Кластеры)
    |   И РабочийСервер в (&Серверы)
    |СГРУППИРОВАТЬ ПО
    |   ВЫБОР
    |       КОГДА Дата < &ОпорнаяДата ТОГДА &ОпорнаяДата
    |       ИНАЧЕ Дата
    |   КОНЕЦ
    |ИНДЕКСИРОВАТЬ ПО
    |   Дата
    |;
    |ВЫБРАТЬ
    |   ДОБАВИТЬКДАТЕ(&ОпорнаяДата, СЕКУНДА, ВЫРАЗИТЬ(РАЗНОСТЬДАТ(&ОпорнаяДата, Дата, СЕКУНДА)/&Шаг - 0.5 КАК ЧИСЛО(15,0)) * &Шаг + &Шаг) КАК Дата,
    |   МАКСИМУМ(КоличествоСобытий) КАК КоличествоСобытий
    |ПОМЕСТИТЬ
    |   Данные
    |ИЗ
    |   (ВЫБРАТЬ
    |       ДанныеБуфер1.Дата КАК Дата,
    |       СУММА(ДанныеБуфер2.КоличествоСобытий) КАК КоличествоСобытий
    |   ИЗ
    |       ДанныеБуфер КАК ДанныеБуфер1
    |   ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |       ДанныеБуфер КАК ДанныеБуфер2
    |   ПО
    |       ДанныеБуфер2.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(ДанныеБуфер1.Дата, СЕКУНДА, -&ИнтервалУсреднения) И ДанныеБуфер1.Дата
    |   СГРУППИРОВАТЬ ПО
    |       ДанныеБуфер1.Дата
    |   ) КАК Выборка
    |СГРУППИРОВАТЬ ПО
    |   ДОБАВИТЬКДАТЕ(&ОпорнаяДата, СЕКУНДА, ВЫРАЗИТЬ(РАЗНОСТЬДАТ(&ОпорнаяДата, Дата, СЕКУНДА)/&Шаг - 0.5 КАК ЧИСЛО(15,0)) * &Шаг + &Шаг)
    |ИНДЕКСИРОВАТЬ ПО
    |   Дата
    |;
    |ВЫБРАТЬ
    |   ТаблицаДат.Дата,
    |   Данные.КоличествоСобытий
    |ИЗ
    |   ТаблицаДат
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   Данные
    |ПО
    |   Данные.Дата = ТаблицаДат.Дата
    |УПОРЯДОЧИТЬ ПО
    |   ТаблицаДат.Дата ВОЗР
    |";
    
    ИнтервалУсредненияЧисло = ИнтервалУсреднения();
    
    Запрос.УстановитьПараметр("ОпорнаяДата", ОпорнаяДата);
    Запрос.УстановитьПараметр("ДатаНачала", ОпорнаяДата - ИнтервалУсредненияЧисло);
    Запрос.УстановитьПараметр("ДатаОкончания", ОпорнаяДата + ((ЧислоТочек-1)*Шаг));
    Запрос.УстановитьПараметр("ИнтервалУсреднения", ИнтервалУсредненияЧисло);
    Запрос.УстановитьПараметр("Шаг", Шаг);
    Запрос.УстановитьПараметр("ТаблицаДат", ТаблицаДат);
    
    СобытияИсключений = Новый Массив;
    СобытияИсключений.Добавить(Перечисления.СобытияТЖ.ОшибкаВыполнения);
    СобытияИсключений.Добавить(Перечисления.СобытияТЖ.ОшибкаБлокировки);
    Запрос.УстановитьПараметр("СобытияИсключений", СобытияИсключений);
    Запрос.УстановитьПараметр("Кластеры", НастройкиПоказателя.ВыгрузитьКолонку("Кластер"));
    Запрос.УстановитьПараметр("Серверы", НастройкиПоказателя.ВыгрузитьКолонку("РабочийСервер"));
    
    
    Результат = Запрос.Выполнить();
    
    Выборка = Результат.Выбрать();
    
    Замеры = Новый Массив;
    ТаблицаДляСтатистики = Новый ТаблицаЗначений;
    ТаблицаДляСтатистики.Колонки.Добавить("Замер");
    ПредыдущийЗамер = 0;
    
    ДатаЕстьЗамер = Неопределено;
    Пока Выборка.Следующий() Цикл
        
        НовСтрока = ТаблицаДляСтатистики.Добавить();
        
        Если Выборка.КоличествоСобытий = NULL Тогда
            
            Если ДатаЕстьЗамер <> Неопределено И Выборка.Дата - ИнтервалУсредненияЧисло > ДатаЕстьЗамер Тогда
                ПредыдущийЗамер = 0;            
            КонецЕсли;
            
            Замеры.Добавить(ПредыдущийЗамер);
            НовСтрока.Замер = ПредыдущийЗамер;
            
        Иначе
            
            Замеры.Добавить(Выборка.КоличествоСобытий);
            ПредыдущийЗамер = Выборка.КоличествоСобытий;
            НовСтрока.Замер = Выборка.КоличествоСобытий;
            ДатаЕстьЗамер = Выборка.Дата;
            
        КонецЕсли;
        
    КонецЦикла;
        
    АнализДанных = Новый АнализДанных;
    АнализДанных.ТипАнализа = Тип("АнализДанныхОбщаяСтатистика");
    АнализДанных.ИсточникДанных = ТаблицаДляСтатистики;
    РезультатАнализа = АнализДанных.Выполнить();
    
    Статистика.Вставить("Всего", "");
    Статистика.Вставить("Горизонт", ТекущаяДата());
    Статистика.Вставить("Кол", РезультатАнализа.НепрерывныеПоля.Замер.Количество);
    Статистика.Вставить("Макс", РезультатАнализа.НепрерывныеПоля.Замер.Максимум);
    Статистика.Вставить("Мин", РезультатАнализа.НепрерывныеПоля.Замер.Минимум);
    Статистика.Вставить("Сред", РезультатАнализа.НепрерывныеПоля.Замер.Среднее);
    Статистика.Вставить("Сумм", РезультатАнализа.НепрерывныеПоля.Замер.Среднее * РезультатАнализа.НепрерывныеПоля.Замер.Количество);
    Статистика.Вставить("Текущее", Неопределено);
       
    Возврат Замеры;
    	
КонецФункции

Функция ПолучитьДанныеОбнаруженияИнцидентов(ОпорнаяДата, Смещение, АгрегирующаяФункция, ФорматнаяСтрокаЗначения) Экспорт
    
    Статистика = Новый Структура;
    Шаг = Смещение/10;
    ПолучитьДанные(ОпорнаяДата - Смещение, 0, 11, Шаг, Статистика, Истина);
    
    Если АгрегирующаяФункция = Перечисления.ФункцииОповещений.Минимум Тогда
		Значение = Статистика.Мин;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Среднее Тогда
		Значение = Статистика.Сред;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Максимум Тогда
		Значение = Статистика.Макс;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Сумма Тогда
		Значение = Статистика.Сумм;
	КонецЕсли;
    
    Данные = Новый Массив;
    Данные.Добавить(Значение);
    Если ЗначениеЗаполнено(ФорматнаяСтрокаЗначения) Тогда
        ИндексНачала = СтрНайти(ФорматнаяСтрокаЗначения, "[");
        ИндексОкончания = СтрНайти(ФорматнаяСтрокаЗначения, "]");
        Если ИндексНачала > 0 И ИндексОкончания > 0 Тогда
            ФорматнаяСтрокаЗначенияБуфер = Сред(ФорматнаяСтрокаЗначения, ИндексНачала + 1, ИндексОкончания - ИндексНачала - 1);
        Иначе
            ФорматнаяСтрокаЗначенияБуфер = ФорматнаяСтрокаЗначения;
        КонецЕсли;
        
        ЗначениеСообщить = СтрЗаменить(ФорматнаяСтрокаЗначения, "[" + ФорматнаяСтрокаЗначенияБуфер + "]", Формат(Значение, ФорматнаяСтрокаЗначенияБуфер));
    Иначе
        ЗначениеСообщить = Значение;
    КонецЕсли;
    
    Сообщить(ЭтотОбъект.Ссылка.Описание + " = " + ЗначениеСообщить);
    
    Возврат Данные;
    
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИнтервалУсреднения()
    
    ИнтервалУсредненияЧисло = 0;
    
    Если ИнтервалУсреднения = Перечисления.ИнтервалыУсреднения.Минута Тогда
        ИнтервалУсредненияЧисло = 60;
    ИначеЕсли ИнтервалУсреднения = Перечисления.ИнтервалыУсреднения.Час Тогда
        ИнтервалУсредненияЧисло = 3600;
    ИначеЕсли ИнтервалУсреднения = Перечисления.ИнтервалыУсреднения.День Тогда
        ИнтервалУсредненияЧисло = 86400;
    ИначеЕсли ИнтервалУсреднения = Перечисления.ИнтервалыУсреднения.Неделя Тогда
        ИнтервалУсредненияЧисло = 86400 * 7;
    ИначеЕсли ИнтервалУсреднения = Перечисления.ИнтервалыУсреднения.Месяц Тогда
        ИнтервалУсредненияЧисло = 86400 * 210;
    КонецЕсли;
    
    Возврат ИнтервалУсредненияЧисло;
    
КонецФункции

Функция ВсегоЗаПериод(Знач ДатаНачала, Знач ДатаОкончания) Экспорт
	
	Запрос = Новый Запрос;
	ЗапросТекст = "
	|ВЫБРАТЬ
	|	СУММА(ОбъединенныйЗапрос.Всего) КАК Всего
	|ИЗ
	|(ВЫБРАТЬ
	|	Количество(*) КАК Всего
	|ИЗ
	|	РегистрСведений.ТехнологическийЖурнал КАК ОсновнаяТаблицаЗамеров
	|ГДЕ
	|	ОсновнаяТаблицаЗамеров.Дата <= &ДатаОкончания И ОсновнаяТаблицаЗамеров.Дата >= &ДатаНачала И
	|	ОсновнаяТаблицаЗамеров.Тип = &ТипСобытияБлокировки
	|	%УсловиеНаКластер
	|	%УсловиеНаСервер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Количество(*) КАК Всего
	|ИЗ
	|	РегистрСведений.ТехнологическийЖурнал КАК ОсновнаяТаблицаЗамеров
	|ГДЕ
	|	ОсновнаяТаблицаЗамеров.Дата <= &ДатаОкончания И ОсновнаяТаблицаЗамеров.Дата >= &ДатаНачала И
	|	ОсновнаяТаблицаЗамеров.Тип = &ТипСобытияИсключения
	|	%УсловиеНаКластер
	|	%УсловиеНаСервер ) КАК ОбъединенныйЗапрос
	|";
	
	МониторингСервер.УстановитьПараметрыДатыВЗапросе(Запрос, ДатаНачала, ДатаОкончания);
	
	Запрос.УстановитьПараметр("ТипСобытияИсключения", Перечисления.СобытияТЖ.ОшибкаВыполнения);
	Запрос.УстановитьПараметр("ТипСобытияБлокировки", Перечисления.СобытияТЖ.ОшибкаБлокировки);
	
	ПараметрыУсловийНаСервер = Новый Массив;
	ПараметрыУсловийНаСервер.Добавить(Новый Структура("ЗаменяемаяСтрока, Префикс, Постфикс", "%УсловиеНаСервер", " И ", " "));
	
	ПараметрыУсловийНаКластер = Новый Массив;
	ПараметрыУсловийНаКластер.Добавить(Новый Структура("ЗаменяемаяСтрока, Префикс, Постфикс", "%УсловиеНаКластер", " И ", " "));
	
	УстановитьФильтрПоОбъектамКонтроля(Запрос, ЗапросТекст, 
		ПараметрыУсловийНаКластер,
		ПараметрыУсловийНаСервер
	);
	
	Запрос.Текст = ЗапросТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И Выборка.Всего <> Null Тогда
		Возврат Выборка.Всего;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция УстановитьФильтрПоОбъектамКонтроля(
	Запрос, 
	ЗапросТекст,
	ПараметрыУсловийНаКластер,
	ПараметрыУсловийНаСервер
)
	Если ЭтотОбъект.ВсеКластеры Тогда
		УсловиеНаКластер = " ";
		УсловиеНаСервер = " ";
	Иначе
		УсловиеНаКластер = " ОсновнаяТаблицаЗамеров.Кластер = &Кластер ";
		Запрос.УстановитьПараметр("Кластер", ЭтотОбъект.Кластер);
		Если ЭтотОбъект.ВсеСерверы Тогда
			УсловиеНаСервер = " ";
		Иначе
			УсловиеНаБазу = " ОсновнаяТаблицаЗамеров.РабочийСервер = &Сервер ";
			Запрос.УстановитьПараметр("Сервер", ЭтотОбъект.Сервер);
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого ПараметрУсловий Из ПараметрыУсловийНаКластер Цикл
		ТекущееУсловиеНаКластер = УсловиеНаКластер;
		Префикс = ПараметрУсловий.Префикс;
		Постфикс = ПараметрУсловий.Постфикс;
		Если НЕ ПустаяСтрока(ТекущееУсловиеНаКластер) Тогда
			ТекущееУсловиеНаКластер = Префикс + ТекущееУсловиеНаКластер + Постфикс;
		КонецЕсли;
		ЗапросТекст = СтрЗаменить(ЗапросТекст, ПараметрУсловий.ЗаменяемаяСтрока, ТекущееУсловиеНаКластер);
	КонецЦикла;
	
	Для Каждого ПараметрУсловий Из ПараметрыУсловийНаСервер Цикл
		ТекущееУсловие = УсловиеНаБазу;
		Префикс = ПараметрУсловий.Префикс;
		Постфикс = ПараметрУсловий.Постфикс;
		Если НЕ ПустаяСтрока(ТекущееУсловие) Тогда
			ТекущееУсловие = Префикс + ТекущееУсловие + Постфикс;
		КонецЕсли;
		ЗапросТекст = СтрЗаменить(ЗапросТекст, ПараметрУсловий.ЗаменяемаяСтрока, ТекущееУсловие);
	КонецЦикла;
	
КонецФункции

Функция ИдентификаторВариантаПоказателя() Экспорт
	
	ФильтрПоОбъектамКонтроля = Новый Массив;
	ФильтрПоОбъектамКонтроля.Добавить(Новый Структура(
		"НазваниеРеквизитаВсеОбъектыКонтроля, НазваниеРеквизитаОбъектКонтроля",
		"ВсеКластеры",
		"Кластер"
	));
	Если НЕ ЭтотОбъект.ВсеКластеры Тогда
		ФильтрПоОбъектамКонтроля.Добавить(Новый Структура(
			"НазваниеРеквизитаВсеОбъектыКонтроля, НазваниеРеквизитаОбъектКонтроля",
			"ВсеСерверы",
			"Сервер"
		));
	КонецЕсли;
	
	ИД = МониторингСервер.ОбщаяЧастьИдентификатораВариантаПоказателя(
		ЭтотОбъект,
		ФильтрПоОбъектамКонтроля
	);
	
	Возврат ИД;
	
КонецФункции

// Возвращает текстовую строку, описывающую тип показателя
//
// Возвращаемое значение:
//  Строка
//
Функция ИдентификаторТипаПоказателя() Экспорт
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Метаданные().РасширенноеПредставлениеОбъекта) Тогда
		Возврат ЭтотОбъект.Метаданные().РасширенноеПредставлениеОбъекта;
	ИначеЕсли ЗначениеЗаполнено(ЭтотОбъект.Метаданные().ПредставлениеОбъекта) Тогда
		Возврат ЭтотОбъект.Метаданные().ПредставлениеОбъекта;
	Иначе
		Возврат ЭтотОбъект.Метаданные().Синоним;
	КонецЕсли;
	
КонецФункции

// Заполняет параметры по умолчанию отображения показателя на графике
// 
// Параметры:
//  ПараметрОповещения - Структура - см.МониторингСервер.ПараметрОповещенияПоказательЗаписан()
//
Процедура ЗаполнитьПараметрыОтображенияПоУмолчанию(Знач ПараметрОповещения) Экспорт
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	
	ПараметрОповещения.Цвет = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
	ПараметрОповещения.АвтоМасштаб = Истина;
	ПараметрОповещения.Масштаб = 1;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Описание) Тогда
		Описание = Описание();
	КонецЕсли;
	
КонецПроцедуры

Функция Описание()
	
	НаименованиеВСтроку = ИдентификаторТипаПоказателя() + " " + ИнтервалУсреднения;
	НастройкиВСтроку = "";
	Если НЕ ВсеКластеры Тогда
		НастройкиВСтроку = НастройкиВСтроку + "кластер " + Кластер;
		Если НЕ ВсеСерверы И ЗначениеЗаполнено(Сервер) Тогда
			НастройкиВСтроку = НастройкиВСтроку + ", сервер " + Сервер;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(НастройкиВСтроку) Тогда
		НаименованиеВСтроку = НаименованиеВСтроку + " (" + НастройкиВСтроку + ")";
	КонецЕсли;
	
	Возврат НаименованиеВСтроку;
	
КонецФункции

// Расчитывает данные показателя по периодам
//
//	Параметры:
// 		МенеджерВременныхТаблиц	- МенеджерВременныхТаблиц. Временные таблицы с периодами и показателями.
// 		Детализация				- ТипДополненияПериодаКомпоновкиДанных. Период детализации.
//
//	Возвращаемое значение:
//		ТаблицаДанных. ТаблицаЗначений. Данные показателя.
//
Функция РасчитатьПоказатель(МенеджерВременныхТаблиц, Детализация = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПоказательМониторинга", ЭтотОбъект.Владелец);
	Запрос.УстановитьПараметр("Показатель", ЭтотОбъект.Ссылка);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПодготовительная.ДатаТочки КАК ДатаТочки,
	|	СУММА(ВЫБОР КОГДА ОсновнаяТаблицаЗамеров.Дата ЕСТЬ NULL ТОГДА 0 ИНАЧЕ 1 КОНЕЦ) КАК Минимальное,
	|	СУММА(ВЫБОР КОГДА ОсновнаяТаблицаЗамеров.Дата ЕСТЬ NULL ТОГДА 0 ИНАЧЕ 1 КОНЕЦ) КАК Максимальное,
	|	СУММА(ВЫБОР КОГДА ОсновнаяТаблицаЗамеров.Дата ЕСТЬ NULL ТОГДА 0 ИНАЧЕ 1 КОНЕЦ) КАК Значение
	|
	|ИЗ
	|	ТаблицаПодготовительная КАК ТаблицаПодготовительная
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТехнологическийЖурнал КАК ОсновнаяТаблицаЗамеров
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЧислоИсключенийПоТехнологическомуЖурналу КАК ЧислоИсключенийПоТехнологическомуЖурналу
	|		ПО (ОсновнаяТаблицаЗамеров.Кластер = ЧислоИсключенийПоТехнологическомуЖурналу.Кластер ИЛИ ЧислоИсключенийПоТехнологическомуЖурналу.ВсеКластеры)
	|		И (ОсновнаяТаблицаЗамеров.РабочийСервер = ЧислоИсключенийПоТехнологическомуЖурналу.Сервер ИЛИ ЧислоИсключенийПоТехнологическомуЖурналу.ВсеСерверы)
	|		И ЧислоИсключенийПоТехнологическомуЖурналу.Ссылка = &Показатель
	|		И ОсновнаяТаблицаЗамеров.Тип В(ЗНАЧЕНИЕ(Перечисление.СобытияТЖ.ОшибкаВыполнения), ЗНАЧЕНИЕ(Перечисление.СобытияТЖ.ОшибкаБлокировки))
	|
	|	ПО ТаблицаПодготовительная.ПоказательМониторинга = &ПоказательМониторинга
	|	И ОсновнаяТаблицаЗамеров.Дата > НачалоПериода(ТаблицаПодготовительная.ДатаТочкиДанные, Квартал) 
	|	И ОсновнаяТаблицаЗамеров.Дата <= НачалоПериода(ТаблицаПодготовительная.ДатаТочкиДанныеСледующая, Квартал)
	|
	|ГДЕ
	|	ТаблицаПодготовительная.ПоказательМониторинга = &ПоказательМониторинга
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПодготовительная.ДатаТочки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТочки
	|";
	
	ИмяИнтервалУсреднения = "Час";
	
	Если ЗначениеЗаполнено(ИнтервалУсреднения) Тогда
		
		Индекс					= Перечисления.ИнтервалыУсреднения.Индекс(ИнтервалУсреднения);
		ИмяИнтервалУсреднения	= Метаданные.Перечисления.ИнтервалыУсреднения.ЗначенияПеречисления[Индекс].Имя;
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Квартал", ИмяИнтервалУсреднения);
	
	ТаблицаДетальныхДанных = Запрос.Выполнить().Выгрузить();
	
	Если ЭтотОбъект.Владелец.ПоказыватьТренд Тогда
		РасчетИтоговПоказателей.СгладитьДанные(ТаблицаДетальныхДанных, ЭтотОбъект.Владелец.ТипСглаживания, ЭтотОбъект.Владелец.КоличествоУсредняемыхЗначений);
	КонецЕсли;
	
	Возврат ТаблицаДетальныхДанных;
	
КонецФункции

#КонецОбласти

#КонецЕсли
