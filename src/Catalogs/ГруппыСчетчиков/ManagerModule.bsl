#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

Функция НайтиПоКодуДляПоиска(КодДляПоиска, Родитель) Экспорт
    
    Запрос = Новый Запрос;
    
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ГруппыСчетчиков.Ссылка
	|ИЗ
	|	Справочник.ГруппыСчетчиков КАК ГруппыСчетчиков
	|ГДЕ
	|	ГруппыСчетчиков.Родитель = &Родитель
	|	И ГруппыСчетчиков.КодДляПоиска = &КодДляПоиска
	|";
	
	Запрос.УстановитьПараметр("КодДляПоиска", КодДляПоиска);
	Запрос.УстановитьПараметр("Родитель", Родитель);
	
	Результат = Запрос.Выполнить();
    
	Если Результат.Пустой() Тогда
		Возврат Справочники.ГруппыСчетчиков.ПустаяСсылка();
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
    КонецЕсли;
    
КонецФункции

Функция НайтиПоПолномуКоду(ПолныйКод) Экспорт
    
    Ссылка = Неопределено;
    
    Запрос = Новый Запрос;
    Запрос.Текст = "
    |ВЫБРАТЬ ПЕРВЫЕ 1
    |   ГруппыСчетчиков.Ссылка
    |ИЗ
    |   Справочник.ГруппыСчетчиков КАК ГруппыСчетчиков
    |ГДЕ
    |   ГруппыСчетчиков.ПолныйКодДляПоиска = &ПолныйКод
    |";
    
    Запрос.УстановитьПараметр("ПолныйКод", ПолныйКод);
    
    Результат = Запрос.Выполнить();
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        
        Ссылка = Выборка.Ссылка;
    КонецЕсли;
    
    Возврат Ссылка;
    
КонецФункции

Функция СчетчикиРодителя(Родитель) Экспорт
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
	|ВЫБРАТЬ
	|	ГруппыСчетчиков.Ссылка
	|ИЗ
	|	Справочник.ГруппыСчетчиков КАК ГруппыСчетчиков
	|ГДЕ
	|	ГруппыСчетчиков.Родитель = &Родитель
	|";
	
	Запрос.УстановитьПараметр("Родитель", Родитель);
    
    Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
    
КонецФункции

Функция ДанныеДляДиаграммаОбщая(Параметры) Экспорт
    
    ДатаНачала = НачалоМинуты(Параметры.ДатаНачала);
    ДатаОкончания = НачалоМинуты(Параметры.ДатаОкончания);
    ЗначенияОтбора = Параметры.ЗначенияОтбора;
    
    ПериодМеждуТочками = ОКР(((ДатаОкончания - ДатаНачала)/1000)/60) * 60;
    Если ПериодМеждуТочками < 60 Тогда
        ПериодМеждуТочками = 60;
    КонецЕсли;
    ТаблицаИнтервалов = ТаблицаИнтервалов(ДатаНачала, ДатаОкончания, ПериодМеждуТочками);
    
    ТекстТаблицаПериодов = Общий.ТекстЗапросаПериодов(ДатаНачала, ДатаОкончания, "Минута");
    
    ТаблицаСобытий = Новый ТаблицаЗначений;
    ТаблицаСобытий.Колонки.Добавить("Событие", Новый ОписаниеТипов("СправочникСсылка.ГруппыСчетчиков"));
    
    Если ТипЗнч(ЗначенияОтбора) = Тип("СправочникСсылка.ГруппыСчетчиков") Тогда
        ТаблицаСобытий.Добавить();
        ТаблицаСобытий.Событие = ЗначенияОтбора; 
    Иначе
        Для Индекс = 0 По ЗначенияОтбора.ВГраница() Цикл
            ТаблицаСобытий.Добавить();
        КонецЦикла;
        ТаблицаСобытий.ЗагрузитьКолонку(ЗначенияОтбора, "Событие");
    КонецЕсли;
        
    
    Запрос = Новый Запрос;
        
    Запрос.Текст = "
    |" + ТекстТаблицаПериодов + "
    |;
    |ВЫБРАТЬ
    |   ДатаНачала,
    |   ДатаОкончания
    |ПОМЕСТИТЬ
    |   ТаблицаИнтервалов
    |ИЗ
    |   &ТаблицаИнтервалов КАК ТаблицаИнтервалов
    |ИНДЕКСИРОВАТЬ ПО
    |   ДатаНачала
    |;
    |ВЫБРАТЬ
    |   Событие
    |ПОМЕСТИТЬ
    |   ТаблицаСобытий
    |ИЗ
    |   &ТаблицаСобытий КАК ТаблицаСобытий
    |ИНДЕКСИРОВАТЬ ПО
    |   Событие
    |;
    |ВЫБРАТЬ
    |   ТаблицаИнтервалов.ДатаОкончания КАК Точка,
    |   Данные.Событие КАК Серия,
    |   МАКСИМУМ(Данные.СреднееЗначение) КАК Значение
    |ИЗ
    |   ТаблицаИнтервалов КАК ТаблицаИнтервалов
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   Периоды КАК ТаблицаПериодов
    |ПО
    |   ТаблицаПериодов.Период >= ТаблицаИнтервалов.ДатаНачала
    |   И ТаблицаПериодов.Период < ТаблицаИнтервалов.ДатаОкончания
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   ТаблицаСобытий КАК ТаблицаСобытий
    |ПО
    |   ИСТИНА
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   РегистрСведений.СтатистикаНеделя КАК Данные
    |ПО
    |   Данные.Событие = ТаблицаСобытий.Событие
    |   И Данные.Период = ТаблицаПериодов.Период
    |СГРУППИРОВАТЬ ПО
    |   ТаблицаИнтервалов.ДатаОкончания,
    |   Данные.Событие
    |УПОРЯДОЧИТЬ ПО
	|   ТаблицаИнтервалов.ДатаОкончания
    |;";
    
    Запрос.УстановитьПараметр("ТаблицаИнтервалов", ТаблицаИнтервалов);
    Запрос.УстановитьПараметр("ТаблицаСобытий", ТаблицаСобытий);
   
    Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала - ПериодМеждуТочками);
    Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
    
    Результат = Запрос.Выполнить();
            
    Возврат Результат;
    
КонецФункции

// Тип инцидента "ЦКК.Счетчики.НетДанных"
Функция ТипИнцидентаЦККСчетчикиНетДанных() Экспорт
    
    ХешТипа = Справочники.ТипыИнцидентов.ХешТипИнцидента("ЦКК.Счетчики.НетДанных");
    Возврат Справочники.ТипыИнцидентов.СоздатьЭлементПоХешу(ХешТипа, "ЦКК.Счетчики.НетДанных", Перечисления.УровниИнцидентов.Предупреждение);
        
КонецФункции

Функция КодИнцидентаЦККСчетчикиНедДанных(ПолныйКодДляПоиска) Экспорт
    
    КодИнцидента = "НетДанных/" + ПолныйКодДляПоиска;
    ХешИнцидентаНетДанныхСчетчик = Справочники.Инциденты.ХешИнцидента(КодИнцидента);
    Возврат Справочники.Инциденты.СоздатьЭлементПоХешу(ХешИнцидентаНетДанныхСчетчик, КодИнцидента, Ложь);
            
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТаблицаИнтервалов(ДатаНачала, ДатаОкончания, ПериодМеждуТочками)
    
    Если ДатаОкончания < ДатаНачала Тогда
        ВызватьИсключение "ДатаОкончания меньше ДатаНачала";
    КонецЕсли;
    
    ТаблицаИнтервалов = Новый ТаблицаЗначений;
    ТаблицаИнтервалов.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
    ТаблицаИнтервалов.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
    
    ДатаНачалаБуфер = ДатаНачала - ПериодМеждуТочками;
    ДатаОкончанияБуфер = ДатаОкончания;
    Пока ДатаНачалаБуфер < ДатаОкончанияБуфер Цикл
        НовСтрока = ТаблицаИнтервалов.Добавить();
        НовСтрока.ДатаНачала = ДатаНачалаБуфер;
        НовСтрока.ДатаОкончания = ДатаНачалаБуфер + ПериодМеждуТочками;
        
        ДатаНачалаБуфер = НовСтрока.ДатаОкончания;
    КонецЦикла;
    НовСтрока.ДатаОкончания = ДатаОкончания;
    
    Возврат ТаблицаИнтервалов;
    
КонецФункции

#КонецОбласти

#Область ПредопределенныеПроцедурыИФункции

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПолныйКодДляПоиска
	|ИЗ
	|	Справочник.ГруппыСчетчиков
	|ГДЕ
	|	Ссылка = &Ссылка
	|";
	Запрос.УстановитьПараметр("Ссылка", Данные.Ссылка);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Представление = Выборка.ПолныйКодДляПоиска;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
