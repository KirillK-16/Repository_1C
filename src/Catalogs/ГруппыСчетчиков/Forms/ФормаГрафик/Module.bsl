
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    ЭтотОбъект.Диаграмма.ОбластьЗаголовка.Верх = 0;
    ЭтотОбъект.Диаграмма.ОбластьЗаголовка.Низ = 0.05;
    ЭтотОбъект.Диаграмма.ОбластьЗаголовка.Лево = 0;
    ЭтотОбъект.Диаграмма.ОбластьЗаголовка.Право = 1;
    
    ЭтотОбъект.Диаграмма.ОбластьПостроения.Верх = 0.05;
    ЭтотОбъект.Диаграмма.ОбластьПостроения.Низ = 1;
    ЭтотОбъект.Диаграмма.ОбластьПостроения.Лево = 0;
    ЭтотОбъект.Диаграмма.ОбластьПостроения.Право = 1;
        
    ЭтотОбъект.ДиаграммаСерии.ОбластьЛегенды.Верх = 0;
    ЭтотОбъект.ДиаграммаСерии.ОбластьЛегенды.Низ = 1;
    ЭтотОбъект.ДиаграммаСерии.ОбластьЛегенды.Лево = 0;
    ЭтотОбъект.ДиаграммаСерии.ОбластьЛегенды.Право = 1;
    
    Если ЭтотОбъект.Параметры.Свойство("Счетчик") Тогда
        ПриСозданииНаСервереСчетчик();
    ИначеЕсли ЭтотОбъект.Параметры.Свойство("ПоказательСчетчика") Тогда
        ПриСозданииНаСервереПоказательСчетчика();
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
    
    ПолучитьДанныеВывода(ЭтотОбъект.ДатаНачала, ЭтотОбъект.ДатаОкончания, ЭтотОбъект.Счетчик, ЭтотОбъект.Диаграмма, ЭтотОбъект.ДиаграммаСерии);
    Если ЭтотОбъект.ДиаграммаСерии.Серии.Количество() > 3 Тогда
        Элементы.ДиаграммаСерии.РастягиватьПоВертикали = Истина;
    Иначе
        Элементы.ДиаграммаСерии.РастягиватьПоВертикали = Ложь;
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура Увеличить(Команда)
    
    ВыделитьКомандуУвеличить(Неопределено);
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    
    ПериодНовый = (ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала)/4;
    ПериодНовый = Цел(ПериодНовый/60) * 60;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала + ПериодНовый);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания - ПериодНовый);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ДлительностьПериода = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - ДлительностьПериода;
    КонецЕсли;
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура Уменьшить(Команда)
    
    ВыделитьКомандуУвеличить(Неопределено);
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    
    ПериодНовый = (ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала)/2;
    ПериодНовый = Цел(ПериодНовый/60) * 60;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала - ПериодНовый);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания + ПериодНовый);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ДлительностьПериода = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - ДлительностьПериода;
    КонецЕсли;
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлево(Команда)
    
    ПериодНовый = (ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала)/4;
    ПериодНовый = Цел(ПериодНовый/60) * 60;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала - ПериодНовый);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания - ПериодНовый);
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправо(Команда)
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    Период = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
    
    ПериодНовый = (ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала)/4;
    ПериодНовый = Цел(ПериодНовый/60) * 60;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала + ПериодНовый);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания + ПериодНовый);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - Период;
    КонецЕсли;
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьОдинЧас(Команда)
    
    ВыделитьКомандуУвеличить(Элементы.УвеличитьОдинЧас);
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 3600);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьДваЧаса(Команда)
    
    ВыделитьКомандуУвеличить(Элементы.УвеличитьДваЧаса);
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 7200);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьТриЧаса(Команда)
    
    ВыделитьКомандуУвеличить(Элементы.УвеличитьТриЧаса);
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 10800);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьШестьЧасов(Команда)
    
    ВыделитьКомандуУвеличить(Элементы.УвеличитьШестьЧасов);
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 21600);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьДвенадцатьЧасов(Команда)
    
    ВыделитьКомандуУвеличить(Элементы.УвеличитьДвенадцатьЧасов);
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 43200);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьОдинДень(Команда)
    
    ВыделитьКомандуУвеличить(Элементы.УвеличитьОдинДень);
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 86400);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьСемьДней(Команда)
    
    ВыделитьКомандуУвеличить(Элементы.УвеличитьСемьДней);
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 604800);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьЧетырнадцатьДней(Команда)
    
    ВыделитьКомандуУвеличить(Элементы.УвеличитьЧетырнадцатьДней);
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 1209600);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьОдинМесяц(Команда)
    
    ВыделитьКомандуУвеличить(Элементы.УвеличитьОдинМесяц);
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ДобавитьМесяц(ЭтотОбъект.ДатаОкончания, -1));
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоОдинМесяц(Команда)
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ДобавитьМесяц(ЭтотОбъект.ДатаНачала, -1));
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ДобавитьМесяц(ЭтотОбъект.ДатаОкончания, -1));
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоЧетырнадацатьДней(Команда)
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала - 1209600);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 1209600);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоСемьДней(Команда)
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала - 604800);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 604800);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоОдинДень(Команда)
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала - 86400);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 86400);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоДвенадцатьЧасов(Команда)
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала - 43200);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 43200);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоШестьЧасов(Команда)
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала - 21600);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 21600);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоТриЧаса(Команда)
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала - 10800);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 10800);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоДваЧаса(Команда)
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала - 7200);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 7200);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВлевоОдинЧас(Команда)
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала - 3600);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания - 3600);
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоОдинЧас(Команда)
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    Период = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала + 3600);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания + 3600);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - Период;
    КонецЕсли;
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоДваЧаса(Команда)
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    Период = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала + 7200);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания + 7200);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - Период;
    КонецЕсли;
        
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоТриЧаса(Команда)
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    Период = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала + 10800);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания + 10800);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - Период;
    КонецЕсли;
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоШестьЧасов(Команда)
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    Период = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала + 21600);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания + 21600);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - Период;
    КонецЕсли;
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоДвенадцатьЧасов(Команда)
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    Период = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала + 43200);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания + 43200);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - Период;
    КонецЕсли;
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоОдинДень(Команда)
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    Период = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала + 86400);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания + 86400);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - Период;
    КонецЕсли;
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоСемьДней(Команда)
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    Период = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала + 604800);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания + 604800);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - Период;
    КонецЕсли;
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоЧетырнадцатьДней(Команда)
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    Период = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала + 1209600);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания + 1209600);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - Период;
    КонецЕсли;
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправоОдинМесяц(Команда)
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    Период = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ДобавитьМесяц(ЭтотОбъект.ДатаНачала, 1));
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ДобавитьМесяц(ЭтотОбъект.ДатаОкончания, 1));
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - Период;
    КонецЕсли;
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеВыводаПодключаемый", 0.1, Истина);
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикСобытийЭлементовФормы

&НаКлиенте
Процедура ДиаграммаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    
    ТекДата = НачалоМинуты(ТекущаяДата());
    
    ПериодНовый = (ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала)/10;
    ПериодНовый = Цел(ПериодНовый/60) * 60;
    
    ЭтотОбъект.ДатаНачала = Расшифровка - ПериодНовый;
    ЭтотОбъект.ДатаОкончания = Расшифровка + ПериодНовый;
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ДлительностьПериода = ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала;
        ЭтотОбъект.ДатаОкончания = ТекДата;
        ЭтотОбъект.ДатаНачала = ЭтотОбъект.ДатаОкончания - ДлительностьПериода;
    КонецЕсли;
        
    ПолучитьДанныеВывода(ЭтотОбъект.ДатаНачала, ЭтотОбъект.ДатаОкончания, ЭтотОбъект.Счетчик, ЭтотОбъект.Диаграмма, ЭтотОбъект.ДиаграммаСерии);
    
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
    ВыделитьКомандуУвеличить(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
    ВыделитьКомандуУвеличить(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура СчетчикНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    
    ПараметрыВыбора = Неопределено;
    Если ТипЗнч(ЭтотОбъект.Счетчик) = Тип("СправочникСсылка.ГруппыСчетчиков") Тогда
        ПараметрыВыбора = Новый Структура("ТекущаяСтрока", ЭтотОбъект.Счетчик);
    ИначеЕсли ТипЗнч(ЭтотОбъект.Счетчик) = Тип("СписокЗначений") И ЭтотОбъект.Счетчик.Количество() > 0  Тогда
        ПараметрыВыбора = Новый Структура("ТекущаяСтрока", ЭтотОбъект.Счетчик.Получить(0).Значение);
    КонецЕсли;
        
    ОткрытьФорму("Справочник.ГруппыСчетчиков.Форма.ФормаВыбораДляГрафика", ПараметрыВыбора, Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    
КонецПроцедуры

&НаКлиенте
Процедура СчетчикОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
    
    Если ТипЗнч(ЭтотОбъект.Счетчик) = Тип("Неопределено") Тогда
        СЗн = Новый СписокЗначений;
        ЭтотОбъект.Счетчик = СЗн;
    ИначеЕсли ТипЗнч(ЭтотОбъект.Счетчик) = Тип("СправочникСсылка.ГруппыСчетчиков") Тогда
        СЗн = Новый СписокЗначений;
        СЗн.Добавить(ЭтотОбъект.Счетчик);
        ЭтотОбъект.Счетчик = СЗн;
    КонецЕсли;
        
    Для Каждого ВыбранныйСчетчик Из ВыбранноеЗначение Цикл
        Если ЭтотОбъект.Счетчик.НайтиПоЗначению(ВыбранныйСчетчик) = Неопределено Тогда
            ЭтотОбъект.Счетчик.Добавить(ВыбранныйСчетчик);
        КонецЕсли;
    КонецЦикла;
    
    ПолучитьДанныеВывода(ЭтотОбъект.ДатаНачала, ЭтотОбъект.ДатаОкончания, ЭтотОбъект.Счетчик, ЭтотОбъект.Диаграмма, ЭтотОбъект.ДиаграммаСерии);
    
    Если ЭтотОбъект.ДиаграммаСерии.Серии.Количество() > 3 Тогда
        Элементы.ДиаграммаСерии.РастягиватьПоВертикали = Истина;
    Иначе
        Элементы.ДиаграммаСерии.РастягиватьПоВертикали = Ложь;
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНаСервереСчетчик()
    
    ТекДата = ТекущаяДата();
    
    ЭтотОбъект.Счетчик = ЭтотОбъект.Параметры.Счетчик;
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ТекДата) - 86400;
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ТекДата);
    
    ПолучитьДанныеВывода(ЭтотОбъект.ДатаНачала, ЭтотОбъект.ДатаОкончания, ЭтотОбъект.Счетчик, ЭтотОбъект.Диаграмма, ЭтотОбъект.ДиаграммаСерии);
    
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервереПоказательСчетчика()
    
    ТекДата = ТекущаяДата();
    
    ЭтотОбъект.ДатаНачала = ЭтотОбъект.Параметры.ДатаОткрытия;
    ЭтотОбъект.ДатаОкончания = ЭтотОбъект.Параметры.ДатаЗакрытия;
    
    Если ЭтотОбъект.ДатаНачала > ЭтотОбъект.ДатаОкончания Тогда
        ЭтотОбъект.ДатаОкончания = ТекДата;
    КонецЕсли;
    
    Период = (ЭтотОбъект.ДатаОкончания - ЭтотОбъект.ДатаНачала)/4;
    
    ЭтотОбъект.ДатаНачала = НачалоМинуты(ЭтотОбъект.ДатаНачала - Период);
    ЭтотОбъект.ДатаОкончания = НачалоМинуты(ЭтотОбъект.ДатаОкончания + Период);
    
    Если ЭтотОбъект.ДатаОкончания > ТекДата Тогда
        ЭтотОбъект.ДатаОкончания = НачалоМинуты(ТекДата);
    КонецЕсли;
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ ПЕРВЫЕ 1
    |   Счетчик
    |ИЗ
    |   Справочник.ПоказателиСчетчиков.Счетчики
    |ГДЕ
    |   Ссылка = &Ссылка
    |";
    
    Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Параметры.ПоказательСчетчика);
    Результат = Запрос.Выполнить();
    
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        
        ЭтотОбъект.Счетчик = Выборка.Счетчик;
                
        ПолучитьДанныеВывода(ЭтотОбъект.ДатаНачала, ЭтотОбъект.ДатаОкончания, ЭтотОбъект.Счетчик, ЭтотОбъект.Диаграмма, ЭтотОбъект.ДиаграммаСерии);
        
    КонецЕсли;
        
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПолучитьДанныеВывода(Знач ДатаНачала, Знач ДатаОкончания, Знач Счетчик, Диаграмма, ДиаграммаСерии)
    
    ПредопределенныеЦвета = Новый Соответствие;
    ПредопределенныеЦвета.Вставить(1, Новый Цвет(200,0,0));
    ПредопределенныеЦвета.Вставить(2, Новый Цвет(106,90,205));
    ПредопределенныеЦвета.Вставить(3, Новый Цвет(95,158,160));
    ПредопределенныеЦвета.Вставить(4, Новый Цвет(123,104,238));
    ПредопределенныеЦвета.Вставить(5, Новый Цвет(255,0,255));
    ПредопределенныеЦвета.Вставить(6, Новый Цвет(208,32,144));
    ПредопределенныеЦвета.Вставить(7, Новый Цвет(34,139,34));
    ПредопределенныеЦвета.Вставить(8, Новый Цвет(47,79,79));
    
    ДиаграммаСерии.Очистить();
    
    Диаграмма.Обновление = Ложь;
    Диаграмма.Очистить();
    
    Если Счетчик = Неопределено Тогда
        Возврат;
    КонецЕсли;
        
    ПериодМеждуТочками = ОКР(((ДатаОкончания - ДатаНачала)/500)/60) * 60;
    Если ПериодМеждуТочками < 60 Тогда
        ПериодМеждуТочками = 60;
    КонецЕсли;
    
    ТаблицаИнтервалов = Новый ТаблицаЗначений;
    ТаблицаИнтервалов.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
    ТаблицаИнтервалов.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
    
    ДатаНачалаБуфер = ДатаНачала - ПериодМеждуТочками;
    ДатаОкончанияБуфер = ДатаОкончания;
    Пока ДатаНачалаБуфер < ДатаОкончанияБуфер Цикл
        НовСтрока = ТаблицаИнтервалов.Добавить();
        НовСтрока.ДатаНачала = ДатаНачалаБуфер;
        НовСтрока.ДатаОкончания = ДатаНачалаБуфер + ПериодМеждуТочками;
        
        ДатаНачалаБуфер = НовСтрока.ДатаОкончания;
    КонецЦикла;
    НовСтрока.ДатаОкончания = ДатаОкончания;
    
    Запрос = Новый Запрос;
    
    ТекстТаблицаПериодов = Общий.ТекстЗапросаПериодов(ДатаНачала, ДатаОкончания, "Минута");
    
    Запрос.Текст = "
    |" + ТекстТаблицаПериодов + "
    |;
    |ВЫБРАТЬ
    |   ДатаНачала,
    |   ДатаОкончания
    |ПОМЕСТИТЬ
    |   ТаблицаИнтервалов
    |ИЗ
    |   &ТаблицаИнтервалов КАК ТаблицаИнтервалов
    |ИНДЕКСИРОВАТЬ ПО
    |   ДатаНачала
    |;
    |
    |ВЫБРАТЬ
    |   ТаблицаИнтервалов.ДатаОкончания КАК Период,
    |   Данные.Событие КАК Счетчик,
    |   МАКСИМУМ(Данные.СреднееЗначение) КАК Значение
    |ИЗ
    |   ТаблицаИнтервалов КАК ТаблицаИнтервалов
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   Периоды КАК ТаблицаПериодов
    |ПО
    |   ТаблицаПериодов.Период >= ТаблицаИнтервалов.ДатаНачала
    |   И ТаблицаПериодов.Период < ТаблицаИнтервалов.ДатаОкончания 
    |ЛЕВОЕ СОЕДИНЕНИЕ
    |   РегистрСведений.СтатистикаНеделя КАК Данные
    |ПО
    |   {Данные.Событие = &Событие}
    |   И Данные.Период = ТаблицаПериодов.Период
    |СГРУППИРОВАТЬ ПО
    |   ТаблицаИнтервалов.ДатаОкончания,
    |   Данные.Событие
    |УПОРЯДОЧИТЬ ПО
	|   ТаблицаИнтервалов.ДатаОкончания
    |;";
    
    Запрос.УстановитьПараметр("ТаблицаИнтервалов", ТаблицаИнтервалов);
    
    Если ТипЗнч(Счетчик) = Тип("СправочникСсылка.ГруппыСчетчиков") Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{Данные.Событие = &Событие}", "Данные.Событие = &Событие");
    Иначе
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{Данные.Событие = &Событие}", "Данные.Событие В (&Событие)");
    КонецЕсли;
    Запрос.УстановитьПараметр("Событие", Счетчик);
    
    Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала - ПериодМеждуТочками);
    Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
    
    Результат = Запрос.Выполнить();
    
    АнализДанных = Новый АнализДанных;
	АнализДанных.ТипАнализа = Тип("АнализДанныхОбщаяСтатистика");
	АнализДанных.ИсточникДанных = Результат;
	РезультатАнализа = АнализДанных.Выполнить();
    
    Диаграмма.ОбластьПостроения.ФорматШкалыЗначений = "ЧРГ=";
    
    ЗначенияСчетчиков = Новый Соответствие;
    СерииДиаграммы = Новый Соответствие;
    Если ТипЗнч(Счетчик) = Тип("СправочникСсылка.ГруппыСчетчиков") Тогда
        
        Серия = Диаграмма.Серии.Добавить();
        Серия.Текст = "";
        Серия.Маркер = ТипМаркераДиаграммы.Нет;
        Серия.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная, 1);
        
        КолвоСерий = Диаграмма.Серии.Количество();
        Если КолвоСерий <= ПредопределенныеЦвета.Количество() Тогда
            Серия.Цвет = ПредопределенныеЦвета[КолвоСерий];
        КонецЕсли;
        
        СерииДиаграммы.Вставить(Счетчик, Серия);
        
        ТЗн = Новый ТаблицаЗначений;
        ТЗн.Колонки.Добавить("Значение");
        ЗначенияСчетчиков.Вставить(Счетчик, ТЗн);
        
    Иначе
        
        Если Счетчик <> Неопределено Тогда
            Для Каждого ТекСчетчик Из Счетчик Цикл
                
                Серия = Диаграмма.Серии.Добавить();
                Серия.Текст = "";
                Серия.Маркер = ТипМаркераДиаграммы.Нет;
                Серия.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная, 1);
                
                КолвоСерий = Диаграмма.Серии.Количество();
                Если КолвоСерий <= ПредопределенныеЦвета.Количество() Тогда
                    Серия.Цвет = ПредопределенныеЦвета[КолвоСерий];
                КонецЕсли;
                                
                СерииДиаграммы.Вставить(ТекСчетчик.Значение, Серия);
                
                ТЗн = Новый ТаблицаЗначений;
                ТЗн.Колонки.Добавить("Значение");
                ЗначенияСчетчиков.Вставить(ТекСчетчик.Значение, ТЗн);
                
            КонецЦикла;
        КонецЕсли;
                
    КонецЕсли;
    
    СерияНетДанных = Диаграмма.Серии.Добавить();
    СерияНетДанных.Текст = "";
    СерияНетДанных.Маркер = ТипМаркераДиаграммы.Нет;
    СерияНетДанных.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная, 1);
    СерияНетДанных.Цвет = Новый Цвет(169, 169, 169);
    
    ТочкиДиаграммы = Новый Соответствие;
    ТочкиДиаграммыNULL = Новый Соответствие;
       
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        
        Если ТочкиДиаграммы[Выборка.Период] = Неопределено Тогда
            Точка = Диаграмма.Точки.Добавить(Выборка.Период);
            Точка.Текст = Формат(Выборка.Период, "ДФ='дд.ММ.гг ЧЧ:мм'");
            Точка.Расшифровка = Выборка.Период;
            
            ТочкиДиаграммы.Вставить(Выборка.Период, Точка);
            ТочкиДиаграммыNULL.Вставить(Выборка.Период, NULL);
            
        КонецЕсли;
        
        Если СерииДиаграммы[Выборка.Счетчик] <> Неопределено Тогда
            
            Диаграмма.УстановитьЗначение(ТочкиДиаграммы[Выборка.Период], СерииДиаграммы[Выборка.Счетчик], Выборка.Значение);
            
            Если Выборка.Значение <> NULL Тогда
                
                Если ТочкиДиаграммыNULL[Выборка.Период] =  NULL Тогда
                    ТочкиДиаграммыNULL[Выборка.Период] = Выборка.Значение;
                КонецЕсли;
                
                НовСтрока = ЗначенияСчетчиков[Выборка.Счетчик].Добавить();
                НовСтрока.Значение = Выборка.Значение;
                
            КонецЕсли;
                        
        КонецЕсли;
        
    КонецЦикла;
    
    Для Каждого ТекТочка Из ТочкиДиаграммыNULL Цикл
        Если ТекТочка.Значение = NULL Тогда
            Диаграмма.УстановитьЗначение(ТочкиДиаграммы[ТекТочка.Ключ], СерияНетДанных, 0);        
        КонецЕсли;
    КонецЦикла;
        
    СерииДиаграммыПредставление = Новый Соответствие;
    Для Каждого ТекЗначение Из СерииДиаграммы Цикл
        СерииДиаграммыПредставление.Вставить(ТекЗначение.Ключ, СтрРазделить(ТекЗначение.Ключ.ПолныйКодДляПоиска, "/"));    
    КонецЦикла;
    ЗаголовокДиаграммы = ПреобразоватьИменаСерий(СерииДиаграммыПредставление);
    ЗаголовокДиаграммы = СтрСоединить(ЗаголовокДиаграммы, "\");
    Диаграмма.ОбластьЗаголовка.Текст = ЗаголовокДиаграммы;
    
        
    Если ТипЗнч(Счетчик) = Тип("СправочникСсылка.ГруппыСчетчиков") Тогда
        ДобавитьСерию(Счетчик, СерииДиаграммы, СерииДиаграммыПредставление, ЗначенияСчетчиков);
    Иначе
        Для Каждого ТекСчетчик Из Счетчик Цикл
            ДобавитьСерию(ТекСчетчик.Значение, СерииДиаграммы, СерииДиаграммыПредставление, ЗначенияСчетчиков);
        КонецЦикла;
    КонецЕсли;
    
    СкопироватьСерии(Диаграмма, ДиаграммаСерии);
    
    Диаграмма.Обновление = Истина;
    ДиаграммаСерии.Обновление = Истина;
    
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СкопироватьСерии(Диаграмма, ДиаграммаСерии)
    
    ДиаграммаСерии.Очистить();
    Для Каждого ТекСерия Из Диаграмма.Серии Цикл
        
        Если ЗначениеЗаполнено(ТекСерия.Текст) Тогда
            НовСерия = ДиаграммаСерии.Серии.Добавить();
            НовСерия.Цвет = ТекСерия.Цвет;
            НовСерия.Текст = ТекСерия.Текст;
        КонецЕсли;
        
    КонецЦикла;
        
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПреобразоватьИменаСерий(СерииДиаграммыПредставление)
    
    УдаленныеЗначения = Новый Массив;
    
    Если СерииДиаграммыПредставление.Количество() = 1 Тогда
        
        Для Каждого ТекСерия Из СерииДиаграммыПредставление Цикл
            КолвоУдалить = ЦЕЛ(ТекСерия.Значение.Количество()/2);
            Для ТекИндекс = 1 По КолвоУдалить Цикл
                УдаленныеЗначения.Добавить(ТекСерия.Значение[0]);
                ТекСерия.Значение.Удалить(0);
            КонецЦикла;
            
            Представление = СтрСоединить(ТекСерия.Значение, "\");
            Представление = СтрЗаменить(Представление, "\\", "\");
            СерииДиаграммыПредставление[ТекСерия.Ключ] = Представление;    
        КонецЦикла;
        
    Иначе
        
        МаксимальныйИндекс = 999999;
        
        Для Каждого ТекСерия Из СерииДиаграммыПредставление Цикл
            ТекРазмер = ТекСерия.Значение.ВГраница();
            Если ТекРазмер < МаксимальныйИндекс Тогда
                МаксимальныйИндекс = ТекРазмер;
            КонецЕсли;
        КонецЦикла;
        
        КолвоУдалить = 0;
        Для ТекИндекс = 0 По МаксимальныйИндекс Цикл
            
            Значение = Неопределено;
            КолвоСовпадений = 0;
                        
            Для Каждого ТекСерия Из СерииДиаграммыПредставление Цикл
                
                Если Значение = Неопределено Тогда
                    Значение = ТекСерия.Значение[ТекИндекс];
                КонецЕсли;
                
                Если ТекСерия.Значение[ТекИндекс] = Значение Тогда
                    КолвоСовпадений = КолвоСовпадений + 1;
                КонецЕсли;
                
            КонецЦикла;
            
            Если КолвоСовпадений = СерииДиаграммыПредставление.Количество() Тогда
                КолвоУдалить = КолвоУдалить + 1;
            Иначе
                Прервать;
            КонецЕсли;
            
        КонецЦикла;
               
        НадоДобавить = Истина;
        
        Для Каждого ТекСерия Из СерииДиаграммыПредставление Цикл
            Для ТекИндекс = 1 По КолвоУдалить Цикл
                
                Если НадоДобавить Тогда
                    УдаленныеЗначения.Добавить(ТекСерия.Значение[0]);
                КонецЕсли;
                
                ТекСерия.Значение.Удалить(0);
                
            КонецЦикла;
            
            НадоДобавить = Ложь;
            Представление = СтрСоединить(ТекСерия.Значение, "\");
            Представление = СтрЗаменить(Представление, "\\", "\");
            СерииДиаграммыПредставление[ТекСерия.Ключ] = Представление;
            
        КонецЦикла;
                        
    КонецЕсли;
    
    Возврат УдаленныеЗначения;
    
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьСерию(Счетчик, СерииДиаграммы, СерииДиаграммыПредставление, ЗначенияСчетчиков)
    
    ТекСерия =  СерииДиаграммы[Счетчик];
    ТЗнЗначений = ЗначенияСчетчиков[Счетчик];
    
    АнализДанных = Новый АнализДанных;
    АнализДанных.ТипАнализа = Тип("АнализДанныхОбщаяСтатистика");
    АнализДанных.ИсточникДанных = ТЗнЗначений;
    РезультатАнализа = АнализДанных.Выполнить();
    
    ЗаголовокСерии = СерииДиаграммыПредставление[Счетчик];
    Если РезультатАнализа.НепрерывныеПоля.Количество() > 0 И РезультатАнализа.НепрерывныеПоля.Значение.Количество > 0 Тогда
        ЗаголовокСерии = ЗаголовокСерии
        + "    min = " + Формат(РезультатАнализа.НепрерывныеПоля.Значение.Минимум, "ЧДЦ=3")
        + "    max = " + Формат(РезультатАнализа.НепрерывныеПоля.Значение.Максимум, "ЧДЦ=3")
        + "    avg = " + Формат(РезультатАнализа.НепрерывныеПоля.Значение.Среднее, "ЧДЦ=3")
        + "    med = " + Формат(РезультатАнализа.НепрерывныеПоля.Значение.Медиана, "ЧДЦ=3");
    КонецЕсли;
    
    ТекСерия.Текст = ЗаголовокСерии;
       
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеВыводаПодключаемый()
    ПолучитьДанныеВывода(ЭтотОбъект.ДатаНачала, ЭтотОбъект.ДатаОкончания, ЭтотОбъект.Счетчик, ЭтотОбъект.Диаграмма, ЭтотОбъект.ДиаграммаСерии);
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьКомандуУвеличить(ЭлементКоманды)
    
    НовыйШрифт = Новый Шрифт(Элементы.УвеличитьОдинЧас.Шрифт,,,Ложь);
    Элементы.УвеличитьОдинЧас.Шрифт = Новый Шрифт(НовыйШрифт);
    
    НовыйШрифт = Новый Шрифт(Элементы.УвеличитьДваЧаса.Шрифт,,,Ложь);
    Элементы.УвеличитьДваЧаса.Шрифт = Новый Шрифт(НовыйШрифт);
    
    НовыйШрифт = Новый Шрифт(Элементы.УвеличитьТриЧаса.Шрифт,,,Ложь);
    Элементы.УвеличитьТриЧаса.Шрифт = Новый Шрифт(НовыйШрифт);
    
    НовыйШрифт = Новый Шрифт(Элементы.УвеличитьШестьЧасов.Шрифт,,,Ложь);
    Элементы.УвеличитьШестьЧасов.Шрифт = Новый Шрифт(НовыйШрифт);
    
    НовыйШрифт = Новый Шрифт(Элементы.УвеличитьДвенадцатьЧасов.Шрифт,,,Ложь);
    Элементы.УвеличитьДвенадцатьЧасов.Шрифт = Новый Шрифт(НовыйШрифт);
    
    НовыйШрифт = Новый Шрифт(Элементы.УвеличитьОдинДень.Шрифт,,,Ложь);
    Элементы.УвеличитьОдинДень.Шрифт = Новый Шрифт(НовыйШрифт);
    
    НовыйШрифт = Новый Шрифт(Элементы.УвеличитьСемьДней.Шрифт,,,Ложь);
    Элементы.УвеличитьСемьДней.Шрифт = Новый Шрифт(НовыйШрифт);
    
    НовыйШрифт = Новый Шрифт(Элементы.УвеличитьЧетырнадцатьДней.Шрифт,,,Ложь);
    Элементы.УвеличитьЧетырнадцатьДней.Шрифт = Новый Шрифт(НовыйШрифт);
    
    НовыйШрифт = Новый Шрифт(Элементы.УвеличитьОдинМесяц.Шрифт,,,Ложь);
    Элементы.УвеличитьОдинМесяц.Шрифт = Новый Шрифт(НовыйШрифт);
    
    Если ЭлементКоманды <> Неопределено Тогда
        НовыйШрифт = Новый Шрифт(ЭлементКоманды.Шрифт,,,Истина);
        ЭлементКоманды.Шрифт = Новый Шрифт(НовыйШрифт);
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти








