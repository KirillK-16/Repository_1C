
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
    
    Если Настройки["НастройкаОтбораСписка"] <> Неопределено Тогда
        
        Поток = Новый ЧтениеXML();
        Поток.УстановитьСтроку(НастройкаОтбораСписка);
        НовыйОтбор = СериализаторXDTO.ПрочитатьXML(Поток);
        Поток.Закрыть();
        
        Если КопироватьОтбор(Список.Отбор, НовыйОтбор) Тогда
            Элементы.Список.Отображение = ОтображениеТаблицы.Список;
        Иначе
            Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
        КонецЕсли;
                
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
    
    ЕстьОтбор = Ложь;
	
	Для Каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл
		Если ЭлементОтбора.Использование Тогда
			ЕстьОтбор = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьОтбор И Элементы.Список.Отображение <> ОтображениеТаблицы.Список Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	ИначеЕсли НЕ ЕстьОтбор И Элементы.Список.Отображение <> ОтображениеТаблицы.ИерархическийСписок Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
    КонецЕсли;
    
    #Если НЕ ВебКлиент Тогда 
        Поток = Новый ЗаписьXML();
	    Поток.УстановитьСтроку();
	    СериализаторXDTO.ЗаписатьXML(Поток, Список.Отбор);
	    НастройкаОтбораСписка = Поток.Закрыть();
    #Иначе
        НастройкаОтбораСписка = СериализоватьОтборНаСервере(Список.Отбор);
    #КонецЕсли
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СериализоватьОтборНаСервере(Отбор)
    
    Поток = Новый ЗаписьXML();
	Поток.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(Поток, Отбор);
    
	Возврат Поток.Закрыть();
    
КонецФункции

&НаСервереБезКонтекста
Функция КопироватьОтбор(ОтборПолучатель, ОтборИсточник)
    
    ОтборПолучатель.Элементы.Очистить();
    ЕстьОтбор = Ложь;
    
    Для Каждого ТекЭлемент Из ОтборИсточник.Элементы Цикл
        Если ТипЗнч(ТекЭлемент) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
            ЕстьОтбор = ЕстьОтбор ИЛИ КопироватьЭлементОбора(ОтборПолучатель.Элементы, ТекЭлемент);
        ИначеЕсли ТипЗнч(ТекЭлемент) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
            ЕстьОтбор = ЕстьОтбор ИЛИ КопироватьГруппуОбора(ОтборПолучатель.Элементы, ТекЭлемент);
        КонецЕсли;
	КонецЦикла;
    
    Возврат ЕстьОтбор;
    
КонецФункции

&НаСервереБезКонтекста
Функция КопироватьЭлементОбора(ЭлементыОтбора, Элемент)
    
    НовЭлемент = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    НовЭлемент.ЛевоеЗначение = Элемент.ЛевоеЗначение;
    НовЭлемент.Использование = Элемент.Использование;
    НовЭлемент.ВидСравнения = Элемент.ВидСравнения;
    НовЭлемент.ПравоеЗначение = Элемент.ПравоеЗначение;
    
    Возврат НовЭлемент.Использование;
           
КонецФункции

&НаСервереБезКонтекста
Функция КопироватьГруппуОбора(ЭлементыОтбора, ГруппаЭлементов)
    
    НовГруппа = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
    НовГруппа.Использование = ГруппаЭлементов.Использование;
    НовГруппа.ТипГруппы = ГруппаЭлементов.ТипГруппы;
    
    ЕстьОтбор = Ложь;
    
    Для Каждого ТекЭлемент Из ГруппаЭлементов.Элементы Цикл
        Если ТипЗнч(ТекЭлемент) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
            ЕстьОтбор = ЕстьОтбор ИЛИ КопироватьЭлементОбора(НовГруппа.Элементы, ТекЭлемент);
        ИначеЕсли ТипЗнч(ТекЭлемент) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
            ЕстьОтбор = ЕстьОтбор ИЛИ КопироватьГруппуОбора(НовГруппа.Элементы, ТекЭлемент);
        КонецЕсли;
    КонецЦикла;
    
    Возврат ЕстьОтбор;
        
КонецФункции

#КонецОбласти
