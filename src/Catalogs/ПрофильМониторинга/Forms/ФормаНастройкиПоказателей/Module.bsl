
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Для Каждого Показатель Из Объект.ПорядокПоказателей Цикл
		Если СтрНайти(Строка(Показатель.Показатель), "<Объект не найден>") = 0 Тогда
			Показатель.Цвет = ЗначениеИзСтрокиВнутр(Показатель.Показатель.Цвет);
			Показатель.ТипЛинииПоказатель = Показатель.Показатель.ТипЛинии;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПоказателейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	УИДБыл = Элемент.ТекущиеДанные.УИД;
	
	Если Модифицированность Тогда
		ЭтотОбъект.Записать();
	КонецЕсли;
	
	ОповеститьОВыборе(УИДБыл);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНастройку(Команда)
	НовНастройка = Объект.НастройкиПоказателей.Добавить();
	НовНастройка.УИД = Новый УникальныйИдентификатор();
	
	ЭтотОбъект.Элементы.НастройкиПоказателей.ТекущаяСтрока = Объект.НастройкиПоказателей.Количество() - 1;
	ЭтотОбъект.Элементы.НастройкиПоказателей.ИзменитьСтроку();
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьНастройку(Команда)
	ЭтотОбъект.Элементы.НастройкиПоказателей.ИзменитьСтроку();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройку(Команда)
	ЭтотОбъект.Записать();
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПоказателейПередУдалением(Элемент, Отказ)
	Отбор = Новый Структура("НастройкаПоказателя", Элемент.ТекущиеДанные.УИД);
	СтрокиДляУдаления = Объект.ПорядокПоказателей.НайтиСтроки(Отбор);
	Для Каждого СтрокаДляУдаления Из СтрокиДляУдаления Цикл
		Объект.ПорядокПоказателей.Удалить(СтрокаДляУдаления.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНастройку(Команда)
	Объект.НастройкиПоказателей.Удалить(ЭтотОбъект.Элементы.НастройкиПоказателей.ТекущиеДанные);
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПоказателейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ЭтотОбъект.Элементы.НастройкиПоказателей.ТекущиеДанные.УИД = Новый УникальныйИдентификатор();
	КонецЕсли;
	
	Если Копирование Тогда
		ЭтотОбъект.Элементы.НастройкиПоказателей.ТекущиеДанные.Наименование = ЭтотОбъект.Элементы.НастройкиПоказателей.ТекущиеДанные.Наименование + " Копия";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНавигационнуюСсылкуКоманда(Команда)
	НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Объект.Ссылка) + "?ref_set=" + ЭтотОбъект.Элементы.НастройкиПоказателей.ТекущиеДанные.УИД;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПолучитьНавигационнуюСсылкуКомандаЗавершение", ЭтотОбъект);
	ПоказатьВводСтроки(ОписаниеОповещения, НавигационнаяСсылка, НСтр("ru = 'Ссылка на настройки'"));
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНавигационнуюСсылкуКомандаЗавершение(Строка, ДополнительныеНастройки) Экспорт
	// Т.к. после получения навигационной ссылки нам ничего делать не надо,
	// но при проверки конфигурации возникает ошибка пустого обработчика,
	// то делаем так.
	ЧтобыНиктоНеЗнал = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПоказателейПриАктивизацииСтроки(Элемент)
	Если ЭтотОбъект.Элементы.НастройкиПоказателей.ТекущиеДанные <> Неопределено Тогда 
		ТекущаяНастройкаУИД = ЭтотОбъект.Элементы.НастройкиПоказателей.ТекущиеДанные.УИД;
		
		ЭтотОбъект.ПорядокПоказателейДинамический.Очистить();
		Отбор = Новый Структура("НастройкаПоказателя", ТекущаяНастройкаУИД);
		Показатели = Объект.ПорядокПоказателей.НайтиСтроки(Отбор);
		Для Каждого Показатель Из Показатели Цикл
			НовПоказатель = ЭтотОбъект.ПорядокПоказателейДинамический.Добавить();
			НовПоказатель.ОтображатьНаДиаграмме = Показатель.ОтображатьНаДиаграмме;
			НовПоказатель.Показатель = Показатель.Показатель;
			НовПоказатель.Масштаб = Показатель.Масштаб;
			НовПоказатель.ЦветЛинии = Показатель.Цвет;
			НовПоказатель.ЦветЛинииОтобразить = "g";
			НовПоказатель.ТипЛинии = Показатель.ТипЛинииПоказатель;
		КонецЦикла;
		
		ОтобразитьЦветаПоказателей();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтобразитьЦветаПоказателей()
	ЭтотОбъект.УсловноеОформление.Элементы.Очистить();
	
	Для Каждого Показатель Из ЭтотОбъект.ПорядокПоказателейДинамический Цикл
		ЭлементУсловногоОформления = ЭтотОбъект.УсловноеОформление.Элементы.Добавить();
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПорядокПоказателейДинамическийЦветЛинииОтобразить");
		ОформляемоеПоле.Использование = ИСТИНА;
		
		ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПорядокПоказателейДинамический.ЦветЛинии");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Показатель.ЦветЛинии;
		
		ЭлементУсловногоОФормления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Показатель.ЦветЛинии);
		ЭлементУсловногоОФормления.Оформление.УстановитьЗначениеПараметра("ЦветГраницы", Показатель.ЦветЛинии);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНавигационнуюСсылку(Команда)
	
	НавигационнаяСсылкаДляЗагрузки = "";
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьНавигационнуюСсылкуЗавершение", ЭтотОбъект);
	ПоказатьВводСтроки(ОписаниеОповещения, НавигационнаяСсылкаДляЗагрузки, НСтр("ru = 'Введите ссылку на настройки'"));
		
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНавигационнуюСсылкуЗавершение(Строка, ДополнительныеПараметры) Экспорт
	ЗагрузитьНавигационнуюСсылкуНаСервере(Строка);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗагрузитьНавигационнуюСсылкуНаСервере(НавигационнаяСсылкаДляЗагрузки)
	Результат = Справочники.ПрофильМониторинга.РазобратьНавигационнуюСсылку(НавигационнаяСсылкаДляЗагрузки);
	Если Результат <> Неопределено Тогда
		Показатели = Справочники.ПрофильМониторинга.ПолучитьПоказатели(Результат.СсылкаНаПрофиль, Результат.СсылкаНастройка);
	КонецЕсли;
КонецФункции


&НаКлиенте
Процедура ВыбратьНастройку(Команда)
	ОповеститьОВыборе(ЭтотОбъект.Элементы.НастройкиПоказателей.ТекущиеДанные.УИД);
КонецПроцедуры

