
#Область ПрограммныйИнтерфейс

// Функция - Найти подключение
//
// Параметры:
//  ПараметрыПоиска - Структура - Параметры поиска с ключами:
//                                  ТипПодключения - Перечисления.ТипПодключенияКластер1С
//                                  АдресСервераАдминистрирования - Строка - для типа RAS
//                                  ПортСервераАдминистрирования - Число - для типа RAS
//                                  УникальныйИдентификаторАгента - Строка - для типа АгентКИП
//                                  ПортСервераАдминистрирования - Число - для типа АгентКИП
// 
// Возвращаемое значение:
//  Ссылка - СправочникСсылка.ПараметрыПодключенияКластер1С
//
Функция НайтиПодключение(ПараметрыПоиска) Экспорт
    
    Если ПараметрыПоиска.ТипПодключения = Перечисления.ТипПодключенияКластер1С.RAS Тогда
        Возврат НайтиПодключениеRAS(ПараметрыПоиска);
    ИначеЕсли ПараметрыПоиска.ТипПодключения = Перечисления.ТипПодключенияКластер1С.COM Тогда
        Возврат НайтиПодключениеCOM(ПараметрыПоиска);
    ИначеЕсли ПараметрыПоиска.ТипПодключения = Перечисления.ТипПодключенияКластер1С.АгентКИП Тогда
        Возврат НайтиПодключениеАгентКИП(ПараметрыПоиска);
    КонецЕсли;
    
КонецФункции

// Функция - Создать подключение
//
// Параметры:
//  ПараметрыСоздания - Структура - Параметры создания с ключами:
//                                  ТипПодключения - Перечисления.ТипПодключенияКластер1С
//                                  АдресСервераАдминистрирования - Строка - для типа RAS
//                                  ПортСервераАдминистрирования - Число - для типа RAS
// 
// Возвращаемое значение:
//  Ссылка - СправочникСсылка.ПараметрыПодключенияКластер1С
//
Функция СоздатьПодключение(ПараметрыСоздания) Экспорт
    
    Если ПараметрыСоздания.ТипПодключения = Перечисления.ТипПодключенияКластер1С.RAS Тогда
        Возврат СоздатьПодключениеRAS(ПараметрыСоздания); 
    ИначеЕсли ПараметрыСоздания.ТипПодключения = Перечисления.ТипПодключенияКластер1С.АгентКИП Тогда
        Возврат СоздатьПодключениеАгентКИП(ПараметрыСоздания);
    ИначеЕсли ПараметрыСоздания.ТипПодключения = Перечисления.ТипПодключенияКластер1С.COM Тогда
        Возврат СоздатьПодключениеCOM(ПараметрыСоздания);
    КонецЕсли;
    
КонецФункции

Функция ПараметрыПодключения(Подключение) Экспорт
    
    Если Подключение.ТипПодключения = Перечисления.ТипПодключенияКластер1С.RAS Тогда
        Возврат ПараметрыПодключенияRAS(Подключение);
    КонецЕсли;
    
КонецФункции

// Функция - Активное подключение
//
// Параметры:
//  Ссылка     - СправочникСсылка.ПараметрыПодключенияКластер1С - подключение для поиска активного.
// 
// Возвращаемое значение:
//   - 
//
Функция АктивноеПодключение(Ссылка) Экспорт
    
    Если Ссылка.ТипПодключения = Перечисления.ТипПодключенияКластер1С.АгентКИП Тогда
        Возврат АктивноеПодключениеАгентКИП(Ссылка);
    ИначеЕсли Ссылка.ТипПодключения = Перечисления.ТипПодключенияКластер1С.RAS Тогда
        Возврат АктивноеПодключениеRAS(Ссылка);
    КонецЕсли;
        
КонецФункции

Процедура ИзменитьАктивноеПодключениеАгентКИП(Ссылка, АгентКИП) Экспорт
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ ПЕРВЫЕ 1
    |   АгентКИППараметры.НомерСтроки   
    |ИЗ
    |   Справочник.ПараметрыПодключенияКластер1С.АгентКИППараметры КАК АгентКИППараметры
    |ГДЕ
    |   АгентКИППараметры.Ссылка = &Ссылка
    |   И АгентКИППараметры.АгентКИП = &АгентКИП
    |";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    Запрос.УстановитьПараметр("АгентКИП", АгентКИП);
    
    Результат = Запрос.Выполнить();
    
    Если НЕ Результат.Пустой() Тогда
        
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
                
        ПараметрыПодключенияОбъект = Ссылка.ПолучитьОбъект();
        СледующееПодключение = Выборка.НомерСтроки + 1;
        Если СледующееПодключение > ПараметрыПодключенияОбъект.АгентКИППараметры.Количество() Тогда
            СледующееПодключение = 1;
        КонецЕсли;
                
        Для Каждого ТекСтрока Из ПараметрыПодключенияОбъект.АгентКИППараметры Цикл
            Если ТекСтрока.НомерСтроки <> СледующееПодключение Тогда
                ТекСтрока.Активный = Ложь;
            Иначе
                ТекСтрока.Активный = Истина;
            КонецЕсли;
        КонецЦикла;
        
        ПараметрыПодключенияОбъект.Записать();
        
    КонецЕсли;    
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиПодключениеАгентКИП(ПараметрыПоиска)
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   ПараметрыПодключения.Ссылка КАК Ссылка
    |ПОМЕСТИТЬ
    |   Подключения
    |ИЗ
    |   Справочник.ПараметрыПодключенияКластер1С.АгентКИППараметры КАК ПараметрыПодключения
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   Справочник.АгентыКИП КАК АгентыКИП
    |ПО
    |   АгентыКИП.Ссылка = ПараметрыПодключения.АгентКИП
    |   И АгентыКИП.УникальныйИдентификаторАгента =&УникальныйИдентификаторАгента
    |ГДЕ
    |   ПараметрыПодключения.ПортRAS = &ПортСервераАдминистрирования
    |ИНДЕКСИРОВАТЬ ПО
    |   Ссылка
    |;
    |ВЫБРАТЬ
    |   Подключения.Ссылка,
    |   КОЛИЧЕСТВО(Подключения.Ссылка)
    |ИЗ
    |   Подключения КАК Подключения
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
    |   Справочник.ПараметрыПодключенияКластер1С.АгентКИППараметры КАК ПараметрыПодключения
    |ПО
    |   ПараметрыПодключения.Ссылка = Подключения.Ссылка
    |СГРУППИРОВАТЬ ПО
    |   Подключения.Ссылка
    |ИМЕЮЩИЕ
    |   КОЛИЧЕСТВО(Подключения.Ссылка) = 1   
    |";
    
    Запрос.УстановитьПараметр("УникальныйИдентификаторАгента", ПараметрыПоиска.УникальныйИдентификаторАгента);
    Запрос.УстановитьПараметр("ПортСервераАдминистрирования", ПараметрыПоиска.ПортСервераАдминистрирования);
    
    Результат = Запрос.Выполнить();
    
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        Возврат Выборка.Ссылка;
    Иначе
        Возврат Справочники.ПараметрыПодключенияКластер1С.ПустаяСсылка();
    КонецЕсли;
    
КонецФункции

Функция НайтиПодключениеRAS(ПараметрыПоиска)
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ ПЕРВЫЕ 1
    |   Ссылка
    |ИЗ
    |   Справочник.ПараметрыПодключенияКластер1С.RASПараметры
    |ГДЕ
    |   АдресСервераАдминистрирования = &АдресСервераАдминистрирования
    |   И ПортСервераАдминистрирования = &ПортСервераАдминистрирования
    |";
    
    Запрос.УстановитьПараметр("АдресСервераАдминистрирования", ПараметрыПоиска.АдресСервераАдминистрирования);
    Запрос.УстановитьПараметр("ПортСервераАдминистрирования", ПараметрыПоиска.ПортСервераАдминистрирования);
    
    Результат = Запрос.Выполнить();
    
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        Возврат Выборка.Ссылка;
    Иначе
        Возврат Справочники.ПараметрыПодключенияКластер1С.ПустаяСсылка();
    КонецЕсли;
        
КонецФункции

Функция НайтиПодключениеCOM(ПараметрыПоиска)
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ ПЕРВЫЕ 1
    |   Ссылка
    |ИЗ
    |   Справочник.ПараметрыПодключенияКластер1С.COMПараметры
    |ГДЕ
    |   АдресКластера = &АдресКластера
    |   И ПортАгентаКластера = &ПортАгентаКластера
    |";
    
    Запрос.УстановитьПараметр("АдресКластера", ПараметрыПоиска.АдресКластера);
    Запрос.УстановитьПараметр("ПортАгентаКластера", ПараметрыПоиска.ПортАгентаКластера);
    
    Результат = Запрос.Выполнить();
    
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        Возврат Выборка.Ссылка;
    Иначе
        Возврат Справочники.ПараметрыПодключенияКластер1С.ПустаяСсылка();
    КонецЕсли;
        
КонецФункции

Функция ПараметрыПодключенияRAS(Подключение)
    
    Соединители = Новый Массив;
    
    Для Каждого ТекСоединитель Из Подключение.RASПараметры Цикл
        Соединитель = Новый Структура;
        Соединитель.Вставить("Наименование", ТекСоединитель.АдресСервераАдминистрирования + ":" + Формат(ТекСоединитель.ПортСервераАдминистрирования, "ЧН=0; ЧГ=0"));
        Соединитель.Вставить("АдресСервераАдминистрирования", ТекСоединитель.АдресСервераАдминистрирования);
        Соединитель.Вставить("ПортСервераАдминистрирования", ТекСоединитель.ПортСервераАдминистрирования);
        Соединители.Добавить(Соединитель);
    КонецЦикла;
    
    Возврат Соединители;
    
КонецФункции

Функция СоздатьПодключениеRAS(ПараметрыПодключения)
    
    НовоеПодключение = СоздатьЭлемент();
    НовоеПодключение.ТипПодключения = ПараметрыПодключения.ТипПодключения;
        
    НовАдмСервер = НовоеПодключение.RASПараметры.Добавить();
    НовАдмСервер.Активный = Истина;
    НовАдмСервер.АдресСервераАдминистрирования = ПараметрыПодключения.АдресСервераАдминистрирования;
    НовАдмСервер.ПортСервераАдминистрирования = ПараметрыПодключения.ПортСервераАдминистрирования;
    
    НовоеПодключение.Наименование = СформироватьНаименование(НовоеПодключение);
    НовоеПодключение.Записать();
    
    Возврат НовоеПодключение.Ссылка;
    
КонецФункции

Функция СоздатьПодключениеCOM(ПараметрыПодключения)
    
    НовоеПодключение = СоздатьЭлемент();
    НовоеПодключение.ТипПодключения = ПараметрыПодключения.ТипПодключения;
        
    НовАдмСервер = НовоеПодключение.COMПараметры.Добавить();
    НовАдмСервер.АдресКластера = ПараметрыПодключения.АдресКластера;
    НовАдмСервер.ПортАгентаКластера = ПараметрыПодключения.ПортАгентаКластера;
    НовАдмСервер.ПортКластера = ПараметрыПодключения.ПортКластера;
    
    НовоеПодключение.Наименование = СформироватьНаименование(НовоеПодключение);
    НовоеПодключение.Записать();
    
    Возврат НовоеПодключение.Ссылка;
    
КонецФункции

Функция СоздатьПодключениеАгентКИП(ПараметрыПодключения)
    
    НовоеПодключение = СоздатьЭлемент();
    НовоеПодключение.ТипПодключения = ПараметрыПодключения.ТипПодключения;
        
    НовАгент = НовоеПодключение.АгентКИППараметры.Добавить();
    АгентКИПСтруктура = Справочники.АгентыКИП.НайтиПоУникальномуИдентификатору(Новый УникальныйИдентификатор(ПараметрыПодключения.УникальныйИдентификаторАгента));
    НовАгент.АгентКИП = АгентКИПСтруктура.Ссылка; 
    НовАгент.Активный = ПараметрыПодключения.Активный;
    НовАгент.ПортRAS = ПараметрыПодключения.ПортRAS;
    
    НовоеПодключение.Наименование = СформироватьНаименование(НовоеПодключение);
    НовоеПодключение.Записать();
    
    Возврат НовоеПодключение.Ссылка;
    
КонецФункции

Функция СформироватьНаименование(Подключение)
    
    Наименование = "";
    
    Если Подключение.ТипПодключения = Перечисления.ТипПодключенияКластер1С.RAS Тогда
        
        Наименование = "RAS(";
        Для Каждого АдмСервер Из Подключение.RASПараметры Цикл
            Наименование = Наименование + АдмСервер.АдресСервераАдминистрирования + ":" + Формат(АдмСервер.ПортСервераАдминистрирования, "ЧН=0; ЧГ=0") + ", ";            
        КонецЦикла;
        
        Наименование = Лев(Наименование, СтрДлина(Наименование) - 2) + ")";
        
    ИначеЕсли Подключение.ТипПодключения = Перечисления.ТипПодключенияКластер1С.АгентКИП Тогда 
        
        Наименование = "Агент КИП(";
        Для Каждого ТекАгент Из Подключение.АгентКИППараметры Цикл
            Наименование = Наименование + ТекАгент.АгентКИП + ":" + Формат(ТекАгент.ПортRAS, "ЧН=0; ЧГ=0") + ", ";            
        КонецЦикла;
        
        Наименование = Лев(Наименование, СтрДлина(Наименование) - 2) + ")";
        
    ИначеЕсли Подключение.ТипПодключения = Перечисления.ТипПодключенияКластер1С.COM Тогда
        
        Наименование = "COM(";
        Для Каждого АдмСервер Из Подключение.RASПараметры Цикл
            Наименование = Наименование + АдмСервер.АдресСервераАдминистрирования + ":" + Формат(АдмСервер.ПортКластера, "ЧН=0; ЧГ=0") + ", ";            
        КонецЦикла;
        
        Наименование = Лев(Наименование, СтрДлина(Наименование) - 2) + ")";
        
    КонецЕсли;
    
    Возврат Наименование;
    
КонецФункции

Функция АктивноеПодключениеАгентКИП(Ссылка)
    
    Запрос = Новый Запрос;
    
    АктивныйАгентКИП = Справочники.АгентыКИП.ПустаяСсылка();
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   АгентКИП
    |ИЗ
    |   Справочник.ПараметрыПодключенияКластер1С.АгентКИППараметры КАК ПараметрыПодключения
    |ГДЕ
    |   ПараметрыПодключения.Ссылка = &Ссылка
    |   И Активный
    |";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    
    Результат = Запрос.Выполнить();
    
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        АктивныйАгентКИП = Выборка.АгентКИП;
    КонецЕсли;
    
    Возврат АктивныйАгентКИП;
    
КонецФункции

Функция АктивноеПодключениеRAS(Ссылка)
    
    Запрос = Новый Запрос;
    
    АктивныйАгентКИП = Справочники.АгентыКИП.ПустаяСсылка();
    
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   АдресСервераАдминистрирования,
    |   ПортСервераАдминистрирования
    |ИЗ
    |   Справочник.ПараметрыПодключенияКластер1С.RASПараметры КАК ПараметрыПодключения
    |ГДЕ
    |   ПараметрыПодключения.Ссылка = &Ссылка
    |   И Активный
    |";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    
    Результат = Запрос.Выполнить();
    
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        АктивноеПодключение = Новый Структура("Сервер, Порт", Выборка.АдресСервераАдминистрирования, Выборка.ПортСервераАдминистрирования);
    КонецЕсли;
    
    Возврат АктивноеПодключение;
    
КонецФункции

#КонецОбласти