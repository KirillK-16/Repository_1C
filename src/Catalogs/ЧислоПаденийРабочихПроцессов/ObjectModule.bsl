#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

Функция ПолучитьДанные(
	Знач ОпорнаяДата,
	Знач НачальноеСмещение,
	Знач ЧислоТочек,
	Знач Шаг, 
	Статистика = Неопределено, 
	ВычислитьАгрегатныеЗначения = Истина, 
	ВычислитьГоризонтАктуальности = Ложь,
	РежимСдвига = Ложь
) Экспорт
	
	Запрос = Новый Запрос;
	ЗапросТекст = "ВЫБРАТЬ
	|	ОсновнаяТаблицаЗамеров.Период КАК Время,
	|	1 КАК ТекущееЗначение,
	|	ВЫБОР
	|		%ИндексацияИнтервалов
	|	КОНЕЦ КАК НомерИнтервала
	|ПОМЕСТИТЬ ВТ_ВыборкаЗамеров
	|ИЗ
	|	РегистрСведений.Дампы КАК ОсновнаяТаблицаЗамеров
	|ГДЕ
	|	%УсловиеНаТипПадения
	|	%УсловиеНаОбъектКонтроля 
	|	%УсловиеНаИнтервалДат";
	
	УстановитьФильтрПоТипуПадения(Запрос, ЗапросТекст);
	
	МониторингСервер.УстановитьПараметрыОбъектаКонтроляВЗапросе(
		ЭтотОбъект.Ссылка,
		Запрос, 
		ЗапросТекст,
		"ВсеСерверы",
		"РабочийСервер",
		"ОбъектКонтроля",
		"ОсновнаяТаблицаЗамеров",
		"",
		" И "
	);
	
	Данные = МониторингСервер.ВыбратьДанныеПоИнтервалам(
		ЭтотОбъект.Ссылка,
		ОпорнаяДата,
		НачальноеСмещение,
		ЧислоТочек,
		Шаг,
		МониторингСервер.СекундВИнтервалеУсреднения(ЭтотОбъект.ИнтервалУсреднения),
		Запрос,
		ЗапросТекст,
		"Период"
	);
	
	Если Статистика <> Неопределено Тогда
		Если ВычислитьАгрегатныеЗначения Тогда
			Статистика = МониторингКлиентСервер.ВычислитьСредниеЗначения(Данные);
			Статистика.Вставить("ПоТочкам");
			ДатаНачала = ОпорнаяДата + НачальноеСмещение * Шаг;
			ДатаОкончания = ОпорнаяДата + (НачальноеСмещение + ЧислоТочек - 1)* Шаг;

			// вычислим параметр "Текущее" 
			Попытка
				ТекущееЗначение = Данные[Данные.Количество() - 1];
			Исключение
				Инфо = ИнформацияОбОшибке();
				Комментарий =
					"Описание = '" +Инфо.Описание + "', " +
					"ИмяМодуля = '" + Инфо.ИмяМодуля + "', " +
					"НомерСтроки = '" + Инфо.НомерСтроки + "', " +
					"ИсходнаяСтрока = '" + Инфо.ИсходнаяСтрока + "'.";
			
				ЗаписьЖурналаРегистрации(
					"Функция ПолучитьДанные(...)",
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Справочники.ЧислоПаденийРабочихПроцессов.МодульОбъекта,
					,
					Комментарий);
				
				ТекущееЗначение = 0;
			КонецПопытки;
			Статистика.Вставить("Текущее", ТекущееЗначение);

			Статистика.Вставить("Всего", ВсегоЗаПериод(ДатаНачала, ДатаОкончания));
		КонецЕсли;
		
		Если ВычислитьГоризонтАктуальности Тогда
			Запрос = Новый Запрос;
			ЗапросТекст = "ВЫБРАТЬ
			|	МАКСИМУМ(Дампы.Период) КАК Время
			|ИЗ
			|	РегистрСведений.Дампы КАК Дампы
			| %УсловиеНаОбъектКонтроля";
			
			МониторингСервер.УстановитьПараметрыОбъектаКонтроляВЗапросе(
				ЭтотОбъект.Ссылка,
				Запрос, 
				ЗапросТекст,
				"ВсеСерверы",
				"РабочийСервер",
				"ОбъектКонтроля",
				"Дампы",
				" ГДЕ "
			);
			Запрос.Текст = ЗапросТекст;
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() И Выборка.Время <> Null Тогда
				Статистика.Вставить("Горизонт", Выборка.Время);
			Иначе
				Статистика.Вставить("Горизонт", Неопределено);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат МониторингСервер.ЗаполнитьПромежутки(Данные);
	
КонецФункции

Функция ПолучитьДанныеОбнаруженияИнцидентов(ОпорнаяДата, Смещение, АгрегирующаяФункция, ФорматнаяСтрокаЗначения) Экспорт
    
    Статистика = Новый Структура;
    Шаг = Смещение/10;
    ПолучитьДанные(ОпорнаяДата - Смещение, 0, 11, Шаг, Статистика, Истина);
    
    Если АгрегирующаяФункция = Перечисления.ФункцииОповещений.Минимум Тогда
		Значение = Статистика.Мин;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Среднее Тогда
		Значение = Статистика.Сред;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Максимум Тогда
		Значение = Статистика.Макс;
	ИначеЕсли АгрегирующаяФункция = Перечисления.ФункцииОповещений.Сумма Тогда
		Значение = Статистика.Сумм;
	КонецЕсли;
    
    Данные = Новый Массив;
    Данные.Добавить(Значение);
    Если ЗначениеЗаполнено(ФорматнаяСтрокаЗначения) Тогда
        ИндексНачала = СтрНайти(ФорматнаяСтрокаЗначения, "[");
        ИндексОкончания = СтрНайти(ФорматнаяСтрокаЗначения, "]");
        Если ИндексНачала > 0 И ИндексОкончания > 0 Тогда
            ФорматнаяСтрокаЗначенияБуфер = Сред(ФорматнаяСтрокаЗначения, ИндексНачала + 1, ИндексОкончания - ИндексНачала - 1);
        Иначе
            ФорматнаяСтрокаЗначенияБуфер = ФорматнаяСтрокаЗначения;
        КонецЕсли;
        
        ЗначениеСообщить = СтрЗаменить(ФорматнаяСтрокаЗначения, "[" + ФорматнаяСтрокаЗначенияБуфер + "]", Формат(Значение, ФорматнаяСтрокаЗначенияБуфер));
    Иначе
        ЗначениеСообщить = Значение;
    КонецЕсли;
    
    Сообщить(ЭтотОбъект.Ссылка.Описание + " = " + ЗначениеСообщить);
    
    Возврат Данные;
    
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВсегоЗаПериод(Знач ДатаНачала, Знач ДатаОкончания) Экспорт
	
	Запрос = Новый Запрос;
	ЗапросТекст = "
	|ВЫБРАТЬ
	|	Количество(*) КАК Всего
	|ИЗ
	|	РегистрСведений.Дампы КАК ОсновнаяТаблицаЗамеров
	|ГДЕ
	|	%УсловиеНаТипПадения 
	|	%УсловиеНаОбъектКонтроля 
	|	ОсновнаяТаблицаЗамеров.Период <= &ДатаОкончания И ОсновнаяТаблицаЗамеров.Период >= &ДатаНачала
	|
	|";
	
	МониторингСервер.УстановитьПараметрыДатыВЗапросе(Запрос, ДатаНачала, ДатаОкончания);
	МониторингСервер.УстановитьПараметрыОбъектаКонтроляВЗапросе(
		ЭтотОбъект.Ссылка,
		Запрос, 
		ЗапросТекст,
		"ВсеСерверы",
		"РабочийСервер",
		"ОбъектКонтроля",
		"ОсновнаяТаблицаЗамеров",
		"",
		" И "
	);
	
	УстановитьФильтрПоТипуПадения(Запрос, ЗапросТекст);
	
	Запрос.Текст = ЗапросТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И Выборка.Всего <> Null Тогда
		Возврат Выборка.Всего;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция УстановитьФильтрПоТипуПадения(Запрос, ЗапросТекст)
	ТипПадения = ЭтотОбъект.ТипПадения;
	Если ТипПадения = Перечисления.ТипыПаденияРабочегоПроцесса.СОбразованиемИБезОбразованияДампа Тогда
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "%УсловиеНаТипПадения", "");
	Иначе
		Если ТипПадения = Перечисления.ТипыПаденияРабочегоПроцесса.БезОбразованияДампа Тогда
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "%УсловиеНаТипПадения", " ОсновнаяТаблицаЗамеров.ВариантДампа = &ВариантДампа И ");
		Иначе
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "%УсловиеНаТипПадения", " ОсновнаяТаблицаЗамеров.ВариантДампа <> &ВариантДампа И ");
		КонецЕсли;
		Запрос.УстановитьПараметр("ВариантДампа", Справочники.ВариантыДампов.ДляЗавершенияБезОбразованияДампа);
	КонецЕсли;
КонецФункции

Функция ИдентификаторВариантаПоказателя() Экспорт
	
	ФильтрПоОбъектамКонтроля = Новый Массив;
	ФильтрПоОбъектамКонтроля.Добавить(Новый Структура(
		"НазваниеРеквизитаВсеОбъектыКонтроля, НазваниеРеквизитаОбъектКонтроля",
		"ВсеСерверы",
		"РабочийСервер"
	));
	
	ИД = МониторингСервер.ОбщаяЧастьИдентификатораВариантаПоказателя(
		ЭтотОбъект,
		ФильтрПоОбъектамКонтроля
	);
	
	ИД = ИД + Строка(ЭтотОбъект.ТипПадения);
	Возврат ИД;
	
КонецФункции

// Возвращает текстовую строку, описывающую тип показателя
//
// Возвращаемое значение:
//  Строка
//
Функция ИдентификаторТипаПоказателя() Экспорт
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Метаданные().РасширенноеПредставлениеОбъекта) Тогда
		Возврат ЭтотОбъект.Метаданные().РасширенноеПредставлениеОбъекта;
	ИначеЕсли ЗначениеЗаполнено(ЭтотОбъект.Метаданные().ПредставлениеОбъекта) Тогда
		Возврат ЭтотОбъект.Метаданные().ПредставлениеОбъекта;
	Иначе
		Возврат ЭтотОбъект.Метаданные().Синоним;
	КонецЕсли;
	
КонецФункции

// Заполняет параметры по умолчанию отображения показателя на графике
// 
// Параметры:
//  ПараметрОповещения - Структура - см.МониторингСервер.ПараметрОповещенияПоказательЗаписан()
//
Процедура ЗаполнитьПараметрыОтображенияПоУмолчанию(Знач ПараметрОповещения) Экспорт
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	
	ПараметрОповещения.Цвет = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
	ПараметрОповещения.АвтоМасштаб = Ложь;
	ПараметрОповещения.Масштаб = 1;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Описание) Тогда
		Описание = Описание();
	КонецЕсли;
	
КонецПроцедуры

Функция Описание()
	
	НаименованиеВСтроку = ИдентификаторТипаПоказателя() + " " + НРег(ТипПадения)
		+ " " + ИнтервалУсреднения
		+ ?(ВсеСерверы, "", " (сервер " + РабочийСервер + ")");
		
	Возврат НаименованиеВСтроку;
		
КонецФункции

// Расчитывает данные показателя по периодам
//
//	Параметры:
// 		МенеджерВременныхТаблиц	- МенеджерВременныхТаблиц. Временные таблицы с периодами и показателями.
// 		Детализация				- ТипДополненияПериодаКомпоновкиДанных. Период детализации.
//
//	Возвращаемое значение:
//		ТаблицаДанных. ТаблицаЗначений. Данные показателя.
//
Функция РасчитатьПоказатель(МенеджерВременныхТаблиц, Детализация = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПоказательМониторинга", ЭтотОбъект.Владелец);
	Запрос.УстановитьПараметр("Показатель", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("РабочийСервер", РабочийСервер);
	Запрос.УстановитьПараметр("ВариантДампа", Справочники.ВариантыДампов.ДляЗавершенияБезОбразованияДампа);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПодготовительная.ДатаТочки КАК ДатаТочки,
	|	СУММА(ВЫБОР КОГДА ОсновнаяТаблицаЗамеров.Период ЕСТЬ NULL ТОГДА 0 ИНАЧЕ 1 КОНЕЦ) КАК Максимальное,
	|	СУММА(ВЫБОР КОГДА ОсновнаяТаблицаЗамеров.Период ЕСТЬ NULL ТОГДА 0 ИНАЧЕ 1 КОНЕЦ) КАК Минимальное,
	|	СУММА(ВЫБОР КОГДА ОсновнаяТаблицаЗамеров.Период ЕСТЬ NULL ТОГДА 0 ИНАЧЕ 1 КОНЕЦ) КАК Значение
	|
	|ИЗ
	|	ТаблицаПодготовительная КАК ТаблицаПодготовительная
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Дампы КАК ОсновнаяТаблицаЗамеров
	|	ПО ОсновнаяТаблицаЗамеров.Период > НачалоПериода(ТаблицаПодготовительная.ДатаТочкиДанные, Квартал) 
	|	И ОсновнаяТаблицаЗамеров.Период <= КонецПериода(ТаблицаПодготовительная.ДатаТочкиДанные, Квартал)
	|	И &УсловиеОбъектКонтроля
	|	И &УсловиеВариантДампа
	|
	|ГДЕ
	|	ТаблицаПодготовительная.ПоказательМониторинга = &ПоказательМониторинга
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПодготовительная.ДатаТочки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТочки
	|";
	
	ИмяИнтервалУсреднения = "Час";
	
	Если ЗначениеЗаполнено(ИнтервалУсреднения) Тогда
		
		Индекс					= Перечисления.ИнтервалыУсреднения.Индекс(ИнтервалУсреднения);
		ИмяИнтервалУсреднения	= Метаданные.Перечисления.ИнтервалыУсреднения.ЗначенияПеречисления[Индекс].Имя;
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Квартал", ИмяИнтервалУсреднения);
	
	Если ВсеСерверы Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОбъектКонтроля", "Истина");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОбъектКонтроля", "ОсновнаяТаблицаЗамеров.ОбъектКонтроля = &РабочийСервер");
	КонецЕсли;
	
	Если ТипПадения = Перечисления.ТипыПаденияРабочегоПроцесса.БезОбразованияДампа Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеВариантДампа", " ОсновнаяТаблицаЗамеров.ВариантДампа = &ВариантДампа");
	ИначеЕсли ТипПадения = Перечисления.ТипыПаденияРабочегоПроцесса.СОбразованиемДампа Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеВариантДампа", " ОсновнаяТаблицаЗамеров.ВариантДампа <> &ВариантДампа");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеВариантДампа", " Истина");
	КонецЕсли;
	
	ТаблицаДетальныхДанных = Запрос.Выполнить().Выгрузить();
	
	Если ЭтотОбъект.Владелец.ПоказыватьТренд Тогда
		РасчетИтоговПоказателей.СгладитьДанные(ТаблицаДетальныхДанных, ЭтотОбъект.Владелец.ТипСглаживания, ЭтотОбъект.Владелец.КоличествоУсредняемыхЗначений);
	КонецЕсли;
	
	Возврат ТаблицаДетальныхДанных;
	
КонецФункции

#КонецОбласти

#КонецЕсли
