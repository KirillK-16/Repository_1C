&НаКлиенте
Перем ФормаВыбора;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДеревоГруппыСчетчиков();
	ОтборПредставление = "Отбор не установлен";
	
	Если Параметры.Свойство("Профиль") Тогда
		Профиль = Параметры.Профиль;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоГруппыСчетчиков()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Показатель.Группа КАК Группа,
	|	Показатель.Счетчик КАК Счетчик
	|ИЗ
	|	Справочник.ПоказателиСчетчиков.Счетчики КАК Показатель
	|ГДЕ
	|	Показатель.Ссылка = &Ссылка
	|ИТОГИ ПО
	|	Группа
	|";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Результат = Запрос.Выполнить();
	
	СтруктураДереваСчетчиков = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗначениеВРеквизитФормы(СтруктураДереваСчетчиков, "Счетчики");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор(Команда)
		
	ОткрытьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтбор()
	
	ПараметрыОткрытия = Новый Структура("Отбор", ГруппыСчетчиков.Отбор);
	ФормаВыбора = ОткрытьФорму("Справочник.ПоказателиСчетчиков.Форма.ФормаОтбора", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтбор(Команда)
	
	ГруппыСчетчиков.Отбор.Элементы.Очистить();
	ОтборПредставление = "Отбор не установлен";
	ЭтотОбъект.Элементы.ГруппыСчетчиков.Отображение = ОтображениеТаблицы.ИерархическийСписок;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора = ФормаВыбора Тогда
		ЗаполнитьОтбор(ВыбранноеЗначение);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОтбор(ВыбранноеЗначение)
	
	ГруппыСчетчиков.Отбор.Элементы.Очистить();
	
	ОбщийКлиентСервер.КопироватьОтбор(ГруппыСчетчиков.Отбор, ВыбранноеЗначение);
	
	ОтборПредставление = Строка(ГруппыСчетчиков.Отбор);
	ЭтотОбъект.Элементы.ГруппыСчетчиков.Отображение = ОтображениеТаблицы.Список;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтборСохраненный = ПриОткрытииНаСервере(ЭтотОбъект.ГруппыСчетчиковОтбор);
	ОбщийКлиентСервер.КопироватьОтбор(ЭтотОбъект.ГруппыСчетчиков.Отбор, ОтборСохраненный);
	
	ОтборПредставление = Строка(ГруппыСчетчиков.Отбор);
	Если ЗначениеЗаполнено(ОтборПредставление) Тогда
		ЭтотОбъект.Элементы.ГруппыСчетчиков.Отображение = ОтображениеТаблицы.Список;
	Иначе
		ЭтотОбъект.Элементы.ГруппыСчетчиков.Отображение = ОтображениеТаблицы.ИерархическийСписок;
		ОтборПредставление = "Отбор не установлен";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ВариантПереноса) Тогда
		ЭтотОбъект.ВариантПереноса = "Переносить в текущую группу";
	КонецЕсли;
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПриОткрытииНаСервере(ОтборСтрока)
	
	Если НЕ ЗначениеЗаполнено(ОтборСтрока) Тогда
		ОтборСтрока = "<Filter xmlns=""http://v8.1c.ru/8.1/data-composition-system/settings"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""/>";
	КонецЕсли;
	
	ОтборКомпоновкиДанных = Новый ОтборКомпоновкиДанных;
		
	Поток = Новый ЧтениеXML();
	Поток.УстановитьСтроку(ОтборСтрока);
	ОтборКомпоновкиДанных = СериализаторXDTO.ПрочитатьXML(Поток);
	Поток.Закрыть();
	
	Возврат ОтборКомпоновкиДанных;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	ЭтотОбъект.ГруппыСчетчиковОтбор = ПередЗакрытиемНаСервере(ЭтотОбъект.ГруппыСчетчиков.Отбор);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПередЗакрытиемНаСервере(Знач Отбор)
	
	Поток = Новый ЗаписьXML();
	Поток.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(Поток, Отбор);
	
	Возврат Поток.Закрыть();
	
КонецФункции

&НаКлиенте
Процедура СчетчикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные.ПолучитьРодителя() <> Неопределено Тогда
		ПараметрыОткрытия = Новый Структура("ТекущаяСтрока", Элемент.ТекущиеДанные.Счетчик);
		ОткрытьФорму("Справочник.ГруппыСчетчиков.ФормаВыбора", ПараметрыОткрытия, Элемент);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетчикиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Элемент.ТекущиеДанные.Группа = Элемент.ТекущиеДанные.ПолучитьРодителя().Группа;
	Элемент.ТекущиеДанные.Счетчик = ВыбранноеЗначение;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетчикиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
    Если Элемент.ТекущиеДанные = Неопределено ИЛИ Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
        ЭлементыГруппы = ЭтотОбъект.Счетчики.ПолучитьЭлементы();
        НовЭлемент = ЭлементыГруппы.Добавить();
        НовЭлемент.Группа = "Новая группа" + " [" + АналитикаПредставление(Объект.Аналитика) + "]";
        
        ЭлементыСчетчики = НовЭлемент.ПолучитьЭлементы();
        НовЭлементСчетчик = ЭлементыСчетчики.Добавить();
    КонецЕсли;
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыСчетчиковНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПараметрыПеретаскиванияЗначение = Новый Массив;
	Для Каждого ТекЭлемент Из ПараметрыПеретаскивания.Значение Цикл
		ПараметрыПеретаскиванияЗначение.Добавить(ТекЭлемент);	
	КонецЦикла;
		
	НовоеЗначение = Новый Структура("Идентификатор, Данные", ЭтотОбъект.УникальныйИдентификатор, ПараметрыПеретаскиванияЗначение);
	ПараметрыПеретаскивания.Значение = НовоеЗначение;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетчикиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Структура") И ПараметрыПеретаскивания.Значение.Свойство("Идентификатор") Тогда
		Если ПараметрыПеретаскивания.Значение.Идентификатор = ЭтотОбъект.УникальныйИдентификатор Тогда
			Если ВариантПереноса = "Создавать новые" Тогда
				СоздаватьНовые(ПараметрыПеретаскивания.Значение.Данные);
			Иначе
				ВТекущуюГруппу(ПараметрыПеретаскивания.Значение.Данные, Строка);
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
		
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздаватьНовые(Данные)
	
	Для Каждого ТекЗначение Из Данные Цикл
		ЭлементыГруппы =ЭтотОбъект.Счетчики.ПолучитьЭлементы();
		НовЭлемент = ЭлементыГруппы.Добавить();
		НовЭлемент.Группа = Строка(ТекЗначение) + " [" + АналитикаПредставление(Объект.Аналитика) + "]";
		
		ЭлементыСчетчики = НовЭлемент.ПолучитьЭлементы();
		НовЭлементСчетчик = ЭлементыСчетчики.Добавить();	
		НовЭлементСчетчик.Группа = Строка(ТекЗначение);
		НовЭлементСчетчик.Счетчик = ТекЗначение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВТекущуюГруппу(Данные, Строка)
	
	ТекущаяГруппа = Неопределено;
	
	ЭлементыГруппы = ЭтотОбъект.Счетчики.ПолучитьЭлементы();
	
	Если Строка = Неопределено Тогда
		ТекущаяГруппа = ЭлементыГруппы.Добавить();
		ТекущаяГруппа.Группа = "Новая группа" + " [" + АналитикаПредставление(Объект.Аналитика) + "]";
	Иначе
		ТекДанные = Счетчики.НайтиПоИдентификатору(Строка);
		ТекущаяГруппа = Счетчики.НайтиПоИдентификатору(Строка).ПолучитьРодителя();
		Если ТекущаяГруппа = Неопределено Тогда
			ТекущаяГруппа = ТекДанные;
		КонецЕсли;
	КонецЕсли;
	
	ЭлементыСчетчики = ТекущаяГруппа.ПолучитьЭлементы();
	
	ВыбранныеСчетчики = Новый Соответствие;
	Для Каждого ТекЭлемент Из ЭлементыСчетчики Цикл
		ВыбранныеСчетчики.Вставить(ТекЭлемент.Счетчик, Истина);
	КонецЦикла;
	
	Для Каждого ТекЗначение Из Данные Цикл
		Если ВыбранныеСчетчики[ТекЗначение] = Неопределено Тогда
			НовЭлементСчетчик = ЭлементыСчетчики.Добавить();	
			НовЭлементСчетчик.Группа = ТекущаяГруппа.Группа;
			НовЭлементСчетчик.Счетчик = ТекЗначение;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Функция АналитикаПредставление(ТекАналитика)
	
	Представление = "";
	
	Если ТекАналитика = "СреднееЗначение" Тогда
		Представление = "среднее";
	ИначеЕсли ТекАналитика = "Сумма" Тогда
		Представление = "сумма";
	ИначеЕсли ТекАналитика = "ЧислоСрабатываний" Тогда
		ПредставлеСтруктурание = "количество";
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

&НаКлиенте
Процедура СчетчикиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтборНажатие(Элемент, СтандартнаяОбработка)
	
	ОткрытьОтбор();
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Профиль) Тогда
		Профиль = ЭтотОбъект.ВладелецФормы.Объект.Владелец;
	КонецЕсли;
	ПараметрыЗаписи.Вставить("Профиль", ЭтотОбъект.ВладелецФормы.Объект.Владелец);
	ПараметрыЗаписи.Вставить("ВладелецФормыОбъект", ЭтотОбъект.ВладелецФормы.Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Объект.Счетчики.Очистить();
	РезультатЗаписи = ЗаписатьКаждыйНаСервере(ПараметрыЗаписи.Профиль, ПараметрыЗаписи.ВладелецФормыОбъект);
    Если РезультатЗаписи <> Неопределено Тогда
        ПараметрыЗаписи.Вставить("РезультатЗаписи", РезультатЗаписи);
    Иначе
        Отказ = Истина;
    КонецЕсли;
    	
КонецПроцедуры

&НаСервере
Функция ЗаписатьКаждыйНаСервере(ПрофильМониторинга, ВладелецФормыОбъект)
	
	НовыеПоказатели = Новый Массив;
	
	Группы = ЭтотОбъект.Счетчики.ПолучитьЭлементы();
    Если Группы.Количество() = 0 Тогда
        
        ОбщийКлиентСервер.СгенерироватьСообщениеПользователю("Нет выбранных счетчиков!", "Счетчики", ЭтотОбъект);
        Возврат Неопределено;
        
    КонецЕсли;
        
	//Для текущего объект всегда рассматриваем группу[0]
	ТекГруппа = Группы[0];
	СчетчикиГруппы = ТекГруппа.ПолучитьЭлементы();
	
	ЭтоНовый = Ложь;
	Если Объект.Ссылка = Справочники.ПоказателиСчетчиков.ПустаяСсылка() Тогда
		ЭтоНовый = Истина;
	КонецЕсли;
	
	ЭтоПрофильМониторинга = Ложь;
	Если ТипЗнч(ПрофильМониторинга) = Тип("СправочникСсылка.ПрофильМониторинга") Тогда
		ЭтоПрофильМониторинга = Истина;
	ИначеЕсли ТипЗнч(ПрофильМониторинга) = Тип("СправочникСсылка.Оповещения") Тогда
		ЭтоПрофильМониторинга = Ложь;
	КонецЕсли;
	
	НовыйПоказатель = Неопределено;
	
	Если ЭтоНовый Тогда
		Если ЭтоПрофильМониторинга Тогда
			НовыйПоказатель = Справочники.ПоказателиМониторинга.СоздатьЭлемент();
			НовыйПоказатель.Владелец = ПрофильМониторинга;
			
			ГСЧ = Новый ГенераторСлучайныхЧисел;
			Красный = ГСЧ.СлучайноеЧисло(0, 255);
			Зеленый = ГСЧ.СлучайноеЧисло(0, 255);
			Синий = ГСЧ.СлучайноеЧисло(0, 255);
			
			НовыйПоказатель.Цвет = ЗначениеВСтрокуВнутр(Новый Цвет(Красный, Зеленый, Синий));
			НовыйПоказатель.АвтоМасштаб = Истина;
			НовыйПоказатель.Масштаб = 1;
			НовыйПоказатель.ТипЛинии = "Сплошная";
			НовыйПоказатель.ТолщинаЛинии = 2;
			
			НовыйПоказатель.Записать();
		КонецЕсли;
				
		НовыйПоказательСчетчиков = Справочники.ПоказателиСчетчиков.СоздатьЭлемент();
		НовыйПоказательСчетчиков.Аналитика = Объект.Аналитика;
		НовыйПоказательСчетчиков.Пользователь = СловарьСервер.ТекущийПользователь();
		НовыйПоказательСчетчиков.ГУИД = Новый УникальныйИдентификатор();
		
		Если ЭтоПрофильМониторинга Тогда
			НовыйПоказательСчетчиков.Владелец = НовыйПоказатель.Ссылка;
		Иначе
			НовыйПоказательСчетчиков.Владелец = Объект.Владелец;
		КонецЕсли;
		
		НовыйПоказательСчетчиков.Периодичность = Объект.Периодичность;
		
		НовыйПоказательСчетчиков.Описание = ТекГруппа.Группа;
		НовыйПоказательСчетчиков.Записать();
		
		Если ЭтоПрофильМониторинга Тогда
			НовыйПоказатель.Показатель = НовыйПоказательСчетчиков.Ссылка;
			НовыйПоказатель.Записать();
		КонецЕсли;
	Иначе
		НовыйПоказатель = Объект.Владелец.ПолучитьОбъект();
		НовыйПоказательСчетчиков = Объект.Ссылка.ПолучитьОбъект();
	КонецЕсли;
		
	Для Каждого ТекСчетчик Из СчетчикиГруппы Цикл
		Если ЭтоНовый Тогда
			НовыйСчетчик = НовыйПоказательСчетчиков.Счетчики.Добавить();
			НовыйСчетчик.Группа = ТекГруппа.Группа;
			НовыйСчетчик.Счетчик = ТекСчетчик.Счетчик;
		Иначе
			НовСчетчик = Объект.Счетчики.Добавить();
			НовСчетчик.Группа = ТекГруппа.Группа;
			НовСчетчик.Счетчик = ТекСчетчик.Счетчик;
		КонецЕсли;
	КонецЦикла;
	
	Если ЭтоНовый Тогда
		НовыйПоказательСчетчиков.Записать();
	КонецЕсли;
		
	Если ЭтоПрофильМониторинга Тогда
		ПараметрОповещения = Новый Структура;
		ПараметрОповещения.Вставить("ИдентификаторВариантаПоказателя", НовыйПоказательСчетчиков.ИдентификаторВариантаПоказателя() + МониторингКлиентСервер.СуффиксИдентификатораВариантаПоказателяМониторинга(НовыйПоказатель));
		ПараметрОповещения.Вставить("ИзменилисьДанные", Истина);
		ПараметрОповещения.Вставить("ИзменилосьСглаживание", Ложь);
		ПараметрОповещения.Вставить("ИзменилсяВид", Истина);
		ПараметрОповещения.Вставить("Ссылка", НовыйПоказатель.Ссылка);
		ПараметрОповещения.Вставить("СтарыйИдентификаторТипа", Неопределено);
		Если НЕ ЭтоНовый Тогда
			ПараметрОповещения.Вставить("ПоказательИзменен", Истина);
		КонецЕсли;
	Иначе
		ПараметрОповещения = Новый Структура("Ссылка, Описание");
		ПараметрОповещения.Ссылка = НовыйПоказательСчетчиков.Ссылка;
		ПараметрОповещения.Описание = НовыйПоказательСчетчиков.Описание;
	КонецЕсли;
	
	Если НовыйПоказатель = Неопределено Тогда
		ПараметрОповещения.Вставить("ПоказательМониторинга", Неопределено);
	Иначе
		ПараметрОповещения.Вставить("ПоказательМониторинга", НовыйПоказатель.Ссылка);
	КонецЕсли;
	
	НовыеПоказатели.Добавить(ПараметрОповещения);
	
	
	//Если групп больше, чем одна - это однозначно создание нового, т.к. у записанного показателя
	//добавление групп запрещено
	Для ИндексГруппы = 1 По Группы.Количество() - 1 Цикл
		ТекГруппа = Группы[ИндексГруппы];
		
		НовыйПоказатель = Неопределено;
		
		Если ЭтоПрофильМониторинга Тогда		
			НовыйПоказатель = Справочники.ПоказателиМониторинга.СоздатьЭлемент();
			НовыйПоказатель.Владелец = ПрофильМониторинга;
			
			ГСЧ = Новый ГенераторСлучайныхЧисел;
			Красный = ГСЧ.СлучайноеЧисло(0, 255);
			Зеленый = ГСЧ.СлучайноеЧисло(0, 255);
			Синий = ГСЧ.СлучайноеЧисло(0, 255);
			
			НовыйПоказатель.Цвет = ЗначениеВСтрокуВнутр(Новый Цвет(Красный, Зеленый, Синий));
			НовыйПоказатель.АвтоМасштаб = Истина;
			НовыйПоказатель.Масштаб = 1;
			НовыйПоказатель.ТипЛинии = "Сплошная";
			НовыйПоказатель.ТолщинаЛинии = 2;
			НовыйПоказатель.Записать();
		КонецЕсли;
		
		
		НовыйПоказательСчетчиков = Справочники.ПоказателиСчетчиков.СоздатьЭлемент();
		НовыйПоказательСчетчиков.Аналитика = Объект.Аналитика;
		НовыйПоказательСчетчиков.Пользователь = СловарьСервер.ТекущийПользователь();
		НовыйПоказательСчетчиков.ГУИД = Новый УникальныйИдентификатор();
		
		Если ЭтоПрофильМониторинга Тогда
			НовыйПоказательСчетчиков.Владелец = НовыйПоказатель.Ссылка;
		Иначе
			НовВладелец = Объект.Владелец.Скопировать();
			
			НовВладелец.ЕдиницаВремениИнтервалаБазы = ВладелецФормыОбъект.ЕдиницаВремениИнтервалаБазы;
			НовВладелец.ЕдиницаВремениИнтервалаРасчета = ВладелецФормыОбъект.ЕдиницаВремениИнтервалаРасчета;
			НовВладелец.ИнтервалБазы = ВладелецФормыОбъект.ИнтервалБазы;
			НовВладелец.ИнтервалРасчета = ВладелецФормыОбъект.ИнтервалРасчета;
			НовВладелец.Порог = ВладелецФормыОбъект.Порог;
			НовВладелец.ПорогВПроцентах = ВладелецФормыОбъект.ПорогВПроцентах;
			НовВладелец.СмещениеБазы = ВладелецФормыОбъект.СмещениеБазы;
			НовВладелец.СравниватьСПрошлым = ВладелецФормыОбъект.СравниватьСПрошлым;
			НовВладелец.ФорматнаяСтрокаЗначения = ВладелецФормыОбъект.ФорматнаяСтрокаЗначения;
			НовВладелец.Функция = ВладелецФормыОбъект.Функция;
						
			НовВладелец.Записать();
			НовыйПоказательСчетчиков.Владелец = НовВладелец.Ссылка;
		КонецЕсли;
		
		НовыйПоказательСчетчиков.Периодичность = Объект.Периодичность;
		
		НовыйПоказательСчетчиков.Описание = ТекГруппа.Группа;
		
		НовыйПоказательСчетчиков.Записать();
		
		Если ЭтоПрофильМониторинга Тогда
			НовыйПоказатель.Показатель = НовыйПоказательСчетчиков.Ссылка;
			НовыйПоказатель.Записать();
		Иначе
			НовВладелец.Показатель = НовыйПоказательСчетчиков.Ссылка;
			НовВладелец.Записать();
		КонецЕсли;
		
		СчетчикиГруппы = ТекГруппа.ПолучитьЭлементы();
		Для Каждого ТекСчетчик Из СчетчикиГруппы Цикл
			НовыйСчетчик = НовыйПоказательСчетчиков.Счетчики.Добавить();
			НовыйСчетчик.Счетчик = ТекСчетчик.Счетчик;
		КонецЦикла;
		НовыйПоказательСчетчиков.Записать();
		
		Если ЭтоПрофильМониторинга Тогда
			ПараметрОповещения = Новый Структура;
			ПараметрОповещения.Вставить("ИдентификаторВариантаПоказателя", НовыйПоказательСчетчиков.ИдентификаторВариантаПоказателя() + МониторингКлиентСервер.СуффиксИдентификатораВариантаПоказателяМониторинга(НовыйПоказатель));
			ПараметрОповещения.Вставить("ИзменилисьДанные", Ложь);
			ПараметрОповещения.Вставить("ИзменилосьСглаживание", Ложь);
			ПараметрОповещения.Вставить("ИзменилсяВид", Истина);
			ПараметрОповещения.Вставить("Ссылка", НовыйПоказатель.Ссылка);
			ПараметрОповещения.Вставить("СтарыйИдентификаторТипа", Неопределено);
		Иначе
			ПараметрОповещения = Новый Структура("Ссылка, Описание");
			ПараметрОповещения.Ссылка = НовыйПоказательСчетчиков.Ссылка;
			ПараметрОповещения.Описание = НовыйПоказательСчетчиков.Описание;
		КонецЕсли;
		
		Если НовыйПоказатель = Неопределено Тогда
			
			ПараметрОповещения.Вставить("ПоказательМониторинга", Неопределено);
			ПараметрОповещения.Вставить("ГруппаОбъектовКонтроля", Ложь);
			
		Иначе
			
			ПараметрОповещения.Вставить("ПоказательМониторинга", НовыйПоказатель.Ссылка);
			ПараметрОповещения.Вставить("ГруппаОбъектовКонтроля", НовыйПоказательСчетчиков.Счетчики.Количество() > 1);
			
		КонецЕсли;
		
		НовыеПоказатели.Добавить(ПараметрОповещения);
	КонецЦикла;
	
	РезультатЗаписи = Новый Структура("ПараметрОповещения, НовыеПоказатели");
	Если ЭтоПрофильМониторинга Тогда 
		Если ЭтоНовый Тогда
			РезультатЗаписи.ПараметрОповещения = "ПоказателиМониторингаСозданы";
		Иначе
			РезультатЗаписи.ПараметрОповещения = "ПоказательМониторингаИзменен";
		КонецЕсли;
		РезультатЗаписи.НовыеПоказатели = НовыеПоказатели;
	Иначе
		РезультатЗаписи.ПараметрОповещения = "ПоказательОповещенияЗаписан";
		РезультатЗаписи.НовыеПоказатели = НовыеПоказатели;
	КонецЕсли;
		
	Возврат РезультатЗаписи;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	РезультатЗаписи = ПараметрыЗаписи.РезультатЗаписи;
	Если ТипЗнч(ЭтотОбъект.ВладелецФормы.Объект.Ссылка) = Тип("СправочникСсылка.ПоказателиМониторинга") Тогда
		Оповестить(РезультатЗаписи.ПараметрОповещения, РезультатЗаписи.НовыеПоказатели, ЭтотОбъект.ВладелецФормы);
	ИначеЕсли ТипЗнч(ЭтотОбъект.ВладелецФормы.Объект.Ссылка) = Тип("СправочникСсылка.ПоказателиИнцидентов") Тогда	
		Оповестить(РезультатЗаписи.ПараметрОповещения, РезультатЗаписи.НовыеПоказатели, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Оповестить("ЗакрытьФорму", ,ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ГруппыСчетчиковВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПараметрыДляВыбора = Новый Массив;
	ПараметрыДляВыбора.Добавить(ВыбраннаяСтрока);
	
	Если ВариантПереноса = "Создавать новые" Тогда
		СоздаватьНовые(ПараметрыДляВыбора);
	Иначе
		Строка = ЭтотОбъект.Элементы.Счетчики.ТекущаяСтрока;
		ВТекущуюГруппу(ПараметрыДляВыбора, Строка);
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры





