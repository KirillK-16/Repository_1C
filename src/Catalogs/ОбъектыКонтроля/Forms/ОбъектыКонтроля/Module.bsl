
&НаКлиенте
Перем КартаСостоянийОбъектовДерева;

&НаКлиенте
Перем ВыбранныйЭлементДерева;

&НаКлиенте
Перем ОбновлениеДереваВПроцессе;


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Общий.СоздатьНачальныеОбъектыКонтроляНаСервере();
	
	Если ЭтотОбъект.ВидимостьДиаграммы = Неопределено Тогда
		ЭтотОбъект.ВидимостьДиаграммы = Истина;
	КонецЕсли;
			
	ДиаграммаСостояние.Обновление = Ложь;	
	ИнициализироватьДиаграмму();
	ДиаграммаСостояние.Обновление = Истина;
	
	КартаСостоянийОбъектовДерева = ПостроитьДеревоОбъектов();
	ЭтотОбъект.Параметры.ПараметрыПриОткрытии = Новый Структура;
	ЭтотОбъект.Параметры.ПараметрыПриОткрытии.Вставить("КартаСостоянийОбъектовДерева", КартаСостоянийОбъектовДерева);
	
КонецПроцедуры	

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	
	Состояния = ПолучитьСостоянияДерева(ЭтотОбъект.СостояниеДерева);
	ЭтотОбъект.Параметры.ПараметрыПриОткрытии.Вставить("Состояния", Состояния);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЭтотОбъект.Параметры.ПараметрыПриОткрытии <> Неопределено Тогда
		Если ЭтотОбъект.Параметры.ПараметрыПриОткрытии.Свойство("Состояния") Тогда
			Состояния = ЭтотОбъект.Параметры.ПараметрыПриОткрытии.Состояния;
		КонецЕсли;
		Если ЭтотОбъект.Параметры.ПараметрыПриОткрытии.Свойство("КартаСостоянийОбъектовДерева") Тогда
			КартаСостоянийОбъектовДерева = ЭтотОбъект.Параметры.ПараметрыПриОткрытии.КартаСостоянийОбъектовДерева;
		КонецЕсли;
	Иначе
		Состояния = Неопределено;
	КонецЕсли;
	РазвернутьДеревоОбъектов(,, Состояния);
	
	ОбновлениеДереваВПроцессе = Ложь;
    
    ЭтотОбъект.КлючУникальности = Новый УникальныйИдентификатор("b21a559b-197d-48bb-8c7f-369009b19123");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)		
	
	Если ИмяСобытия = "Изменение.Справочник.ВидыОбъектовКонтроля" ИЛИ 
		 ИмяСобытия = "Изменение.Справочник.ОбъектыКонтроля" ИЛИ	
		 ИмяСобытия = "Изменение.Справочник.ВидыКонтрольныхПроцедур" ИЛИ
		 ИмяСобытия = "Изменение.Справочник.КонтрольныеПроцедуры" ИЛИ
		 ИмяСобытия = "Изменение.Задачи" ИЛИ
		 ИмяСобытия = "ПервичнаяНастройкаЗакончена"
	Тогда
		ОбновитьФорму(Истина, Ложь, ИмяСобытия);			
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ "ДеревоОбъектовКонтроля"

&НаКлиенте
Процедура ДеревоОбъектовКонтроляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСтрокаДанные = ТекущаяСтрокаДереваОбъектовДанные();
	Если ТекущаяСтрокаДанные.ИмяФормыРедактирование <> "" Тогда
		ОткрытьФорму(ТекущаяСтрокаДанные.ИмяФормыРедактирование, Новый Структура("Ключ", ТекущаяСтрокаДанные.Объект));
		СтандартнаяОбработка = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовКонтроляПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ТекущийОбъектДерева = ЭтотОбъект.Элементы.ДеревоОбъектовКонтроля.ТекущиеДанные.Объект;
	Если ВыбранныйЭлементДерева = ТекущийОбъектДерева Тогда
		Возврат;
	ИначеЕсли НЕ ОбновлениеДереваВПроцессе Тогда
		ВыбранныйЭлементДерева = ТекущийОбъектДерева;
		НастроитьФормуДляТекущегоЭлементаДерева();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуДляТекущегоЭлементаДерева() 
	
	ТекущийОбъектДерева = ВыбранныйЭлементДерева;
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ТекущийОбъектДерева", ТекущийОбъектДерева);
	ДопПараметры.Вставить("КартаСостоянийОбъектовДерева", КартаСостоянийОбъектовДерева);
	
	ДанныеССервера = НастроитьФормуДляТекущегоЭлементаДереваНаСервере(ДопПараметры);
	
	ВозможноДобавлять = ТипЗнч(ТекущийОбъектДерева) = Тип("СправочникСсылка.ВидыОбъектовКонтроля");
	ВозможноРедактировать = ТекущийОбъектДерева <> "root"; 
	ВозможноУдалять = ДанныеССервера.ОбъектМожноУдалять;
	
	Элементы.ДобавитьОбъектКонтроля.Доступность = ?(ВозможноДобавлять, Истина, Ложь);
	Элементы.ИзменитьОбъект.Доступность = ?(ВозможноРедактировать, Истина, Ложь);
	Элементы.УдалитьОбъектКонтроля.Доступность = ?(ВозможноУдалять, Истина, Ложь);
	
	Элементы.ДеревоОбъектовКонтроляКонтекстноеМенюДобавитьОбъектКонтроля.Доступность = ВозможноДобавлять;
	Элементы.ДеревоОбъектовКонтроляКонтекстноеМенюИзменитьОбъект.Доступность = ВозможноРедактировать;
	Элементы.ДеревоОбъектовКонтроляКонтекстноеМенюУдалитьОбъект.Доступность = ВозможноУдалять;
	Элементы.ДеревоОбъектовКонтроляКонтекстноеМенюАнализДампов.Доступность = ДанныеССервера.ВозможенАнализДампов;
	
КонецПроцедуры

&НаСервере
Функция НастроитьФормуДляТекущегоЭлементаДереваНаСервере(Параметры)
	
	Результат = Новый Структура;
	Результат.Вставить("ОбъектМожноУдалять", ОбъектМожноУдалять(Параметры.ТекущийОбъектДерева)); 
	Результат.Вставить("ВозможенАнализДампов", ВозможенАнализДампов(Параметры.ТекущийОбъектДерева));
	
	ДействияНаСервереПриАктивацииОбъектаДерева(Параметры.ТекущийОбъектДерева, Параметры.КартаСостоянийОбъектовДерева); 
	
	Возврат Результат;
	
КонецФункции


&НаСервереБезКонтекста
Функция ВозможенАнализДампов(ТекущийОбъектДерева)
	Если ТекущийОбъектДерева = "root" Тогда
		Возврат Ложь;
	Иначе
		Попытка
			Если ТекущийОбъектДерева.Владелец <> Неопределено И ТекущийОбъектДерева.Владелец.Наименование = "Контроль устойчивости системы" Тогда
				Возврат Истина;
			Иначе
				Возврат Ложь;
			КонецЕсли;
		Исключение
			Возврат Ложь;
		КонецПопытки
	КонецЕсли;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОбновитьКоманда(Команда)
	ОбновитьФорму();	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементВДеревоОбъектов(Команда)
	ТекущаяСтрокаДанные = ТекущаяСтрокаДереваОбъектовДанные();
	Если ТекущаяСтрокаДанные.ИмяФормыСоздание <> "" Тогда
		ПараметрыОткрытия = Новый Структура("ВладелецПриОткрытии", ТекущаяСтрокаДанные.Объект);
		ФормаСоздание = ПолучитьФорму(ТекущаяСтрокаДанные.ИмяФормыСоздание, ПараметрыОткрытия);
		ФормаСоздание.Объект.Владелец = ТекущаяСтрокаДанные.Объект;
		ФормаСоздание.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЭлементДереваОбъектов(Команда)
	
	ТекущаяСтрокаДанные = ТекущаяСтрокаДереваОбъектовДанные();
	Если ТекущаяСтрокаДанные.ИмяФормыРедактирование <> "" Тогда
		ОткрытьФорму(ТекущаяСтрокаДанные.ИмяФормыРедактирование, Новый Структура("Ключ", ТекущаяСтрокаДанные.Объект));
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОбъектКонтроля(Команда)
	
	ТекущийОбъект = ТекущийОбъектДереваОбъектов();
	Если НЕ ОбъектМожноУдалять(ТекущийОбъект, Ложь) Тогда
		ПоказатьПредупреждение(,"Удалением невозможно! 
			|В системе должен быть зарегистрирован 
			|хотя бы один объект типа '" + НаименованиеВидаОбъекта(ТекущийОбъект) + "'"
		);
		Возврат; 
	КонецЕсли;
	
	Если ЭтоИспользуемыйКластер(ТекущийОбъект) Тогда
		ПоказатьПредупреждение(,"Удалением невозможно! 
			|На кластере серверов развёрнуты информационные базы"
		);
		Возврат;	
	КонецЕсли;	
	
	ТекстПредупреждения = Нстр("ru='
		|Вы уверены, что желаете удалить объект контроля? 
		|Все контрольные процедуры, задачи и процессы, связанные с данным объектом будут удалены.'");
	Режим = РежимДиалогаВопрос.ДаНет;
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьОбъектКонтроляЗавершение", ЭтотОбъект, ТекущийОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстПредупреждения, Режим, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОбъектКонтроляЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		УдалитьОбъект(ДополнительныеПараметры);
		ОбновитьФорму();
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОбновитьФорму(СохранитьТекущуюПозицию = Истина, ПриОткрытии = Ложь, ИмяСобытия = Неопределено)

	ОбновлениеДереваВПроцессе = Истина;
	КартаСостоянийОбъектовДерева = ПостроитьДеревоОбъектов(ИмяСобытия);
	Если ПриОткрытии Тогда
		Состояния = ПолучитьСостоянияДерева(ЭтотОбъект.СостояниеДерева);
	Иначе
		Состояния = Неопределено;
	КонецЕсли;
	
	Если ПриОткрытии Тогда
		РазвернутьДеревоОбъектов(,, Состояния);
	КонецЕсли;
		
	// Если требуется сохранить позицию курсора в дереве,
	// то обновление формы заканчиваем в обработчике обновления
	Если СохранитьТекущуюПозицию Тогда
		ПодключитьОбработчикОжидания("АктивизироватьТекущийЭлементДерева", 0.1, Истина);
	Иначе
		ОбновлениеДереваВПроцессе = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыбратьКонтрольныеПроцедуры()
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КонтрольныеПроцедуры.Ссылка КАК КонтрольнаяПроцедура,
	|	КонтрольныеПроцедуры.ОбъектКонтроля КАК ОбъектКонтроля,
	|	ОбъектыКонтроля.Владелец КАК Владелец
	|ИЗ
	|	Справочник.КонтрольныеПроцедуры КАК КонтрольныеПроцедуры
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.ОбъектыКонтроля КАК ОбъектыКонтроля
	|ПО
	|	ОбъектыКонтроля.Ссылка = КонтрольныеПроцедуры.ОбъектКонтроля
	|ГДЕ
	|	КонтрольныеПроцедуры.ПометкаУдаления = Ложь
	|УПОРЯДОЧИТЬ ПО
	|	КонтрольныеПроцедуры.Наименование
	|";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выбрать();
КонецФункции

&НаСервере
Функция ПостроитьДеревоОбъектов(ИмяСобытия = Неопределено)	
	ВыгрузкаИзБазы = Новый Соответствие();
	
	ВыборкаВидыОбъектовКонтроля = Справочники.ВидыОбъектовКонтроля.Выбрать(,,,"Наименование");
	ВыборкаОбъектыКонтроля = Справочники.ОбъектыКонтроля.Выбрать(,,,"Наименование");	
	ВыборкаКонтрольныеПроцедуры = Справочники.КонтрольныеПроцедуры.Выбрать(,,,"Наименование");
	ВыборкаКонтрольныеПроцедурыЗапрос = ВыбратьКонтрольныеПроцедуры();
	
	Пока ВыборкаВидыОбъектовКонтроля.Следующий() Цикл	
		Если ВыборкаВидыОбъектовКонтроля.ПометкаУдаления Тогда 
			Продолжить;
		КонецЕсли;
		
		СсылкаНаОбъект = ВыборкаВидыОбъектовКонтроля.ПолучитьОбъект().Ссылка;
		
		Если СсылкаНаОбъект = Справочники.ВидыОбъектовКонтроля.ЦентрКонтроляКачества 
			И НЕ Константы.ПриниматьОтчетыЦКК.Получить() 
		Тогда
			Продолжить;
		КонецЕсли;
		
		ВыгрузкаИзБазы.Вставить(СсылкаНаОбъект, Новый Соответствие);
	КонецЦикла;
	
	ВнутренниеИБ = Новый Соответствие;
	ВнутренниеИБ.Вставить(Справочники.ОбъектыКонтроля.НайтиПоНаименованию("Центр Контроля Качества"), Истина);
	ВнутренниеИБ.Вставить(Справочники.ОбъектыКонтроля.НайтиПоНаименованию("Центр мониторинга"), Истина);
	Пока ВыборкаОбъектыКонтроля.Следующий() Цикл
		Если ВыборкаОбъектыКонтроля.ПометкаУдаления ИЛИ ВнутренниеИБ[ВыборкаОбъектыКонтроля.Ссылка] <> Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		ОбъектКонтроляСсылка = ВыборкаОбъектыКонтроля.Ссылка;
		
		БуферВидаОбъекта = ВыгрузкаИзБазы.Получить(ОбъектКонтроляСсылка.Владелец);
		Если БуферВидаОбъекта = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		БуферВидаОбъекта.Вставить(ОбъектКонтроляСсылка, Новый Массив);
	КонецЦикла;
	
	Пока ВыборкаКонтрольныеПроцедурыЗапрос.Следующий() Цикл
		КонтрольнаяПроцедураСсылка = ВыборкаКонтрольныеПроцедурыЗапрос.КонтрольнаяПроцедура;
		
		ВладелецСсылка = ВыборкаКонтрольныеПроцедурыЗапрос.Владелец;
		
		БуферВидаОбъекта = ВыгрузкаИзБазы.Получить(ВладелецСсылка);
		Если БуферВидаОбъекта = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		БуферОбъекта = БуферВидаОбъекта.Получить(ВыборкаКонтрольныеПроцедурыЗапрос.ОбъектКонтроля);
		
		Если БуферОбъекта = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		БуферОбъекта.Добавить(КонтрольнаяПроцедураСсылка);
				
	КонецЦикла;
		
	СтруктураДереваОбъектов = РеквизитФормыВЗначение("ДеревоОбъектовКонтроля");	
	СтруктураДереваОбъектов.Строки.Очистить();
	
	КореньДерева = СтруктураДереваОбъектов.Строки.Добавить();
	КореньДерева.Наименование = "Виды объектов контроля";
	КореньДерева.Объект = ОбъектКореньДереваОбъектов(); 	
	КореньДерева.Выполняется = 4;
	
	КэшКонтрольнаяПроцедураВладелец = Новый Соответствие;
	КэшКонтрольнаяПроцедураИмяБизнесПроцесса = Новый Соответствие;
	КэшКонтрольнаяПроцедураВыполняется = Новый Соответствие;
	КэшКонтрольнаяПроцедура = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Ссылка КАК Ссылка,
	|	Владелец.Наименование КАК Владелец,
	|	Владелец.ИмяБизнесПроцесса КАК ИмяБизнесПроцесса,
	|	ВЫБОР
	|		КОГДА НастройкаВыполнена ТОГДА
	|			ВЫБОР
	|				КОГДА Выполнять ТОГДА
	|					ВЫБОР
	|						КОГДА Пауза ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|				ИНАЧЕ 3
	|			КОНЕЦ
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Выполняется,
	|	НастройкаВыполнена КАК НастройкаВыполнена,
	|	Выполнять КАК Выполнять,
	|	Пауза КАК Пауза
	|ИЗ
	|	Справочник.КонтрольныеПроцедуры
	|";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		КэшКонтрольнаяПроцедураВладелец.Вставить(Выборка.Ссылка, Выборка.Владелец);
		КэшКонтрольнаяПроцедураИмяБизнесПроцесса.Вставить(Выборка.Ссылка, Выборка.ИмяБизнесПроцесса);
		КэшКонтрольнаяПроцедураВыполняется.Вставить(Выборка.Ссылка, Выборка.Выполняется);
		КэшКонтрольнаяПроцедура.Вставить(Выборка.Ссылка, Новый Структура("НастройкаВыполнена, Выполнять, Пауза", Выборка.НастройкаВыполнена, Выборка.Выполнять, Выборка.Пауза));
	КонецЦикла;
	
	
	Для Каждого ВидОбъектаБуфер Из ВыгрузкаИзБазы Цикл
	
		ВидОбъектаКонтроля = ВидОбъектаБуфер.Ключ;
		УровеньВидаОбъекта = КореньДерева.Строки.Добавить();
		УровеньВидаОбъекта.Наименование = Строка(ВидОбъектаКонтроля);
		УровеньВидаОбъекта.Объект = ВидОбъектаКонтроля;

		УровеньВидаОбъекта.ИмяФормыСоздание = НастройкиСервер.ИмяФормыОбъектаКонтроля(ВидОбъектаКонтроля);
		УровеньВидаОбъекта.ИмяФормыРедактирование = НастройкиСервер.ИмяФормыВидаОбъектаКонтроля(ВидОбъектаКонтроля);
		УровеньВидаОбъекта.Выполняется = 4;
		
		БуферВидаОбъекта = ВидОбъектаБуфер.Значение;
		Для Каждого ОбъектМассивПроцедур Из БуферВидаОбъекта Цикл

			ОбъектКонтроля = ОбъектМассивПроцедур.Ключ;
			
			УровеньОбъекта = УровеньВидаОбъекта.Строки.Добавить();
			
			УровеньОбъекта.Наименование = Строка(ОбъектКонтроля);
			УровеньОбъекта.Объект = ОбъектКонтроля;
			УровеньОбъекта.ИмяФормыРедактирование = НастройкиСервер.ИмяФормыОбъектаКонтроля(ОбъектКонтроля);
			УровеньОбъекта.Выполняется = 4;
			
			МассивКонтрольныхПроцедур = ОбъектМассивПроцедур.Значение;	
			Для Каждого КонтрольнаяПроцедура Из МассивКонтрольныхПроцедур Цикл
							
				УровеньКонтрольныхПроцедур = УровеньОбъекта.Строки.Добавить();
				
				УровеньКонтрольныхПроцедур.Наименование = КэшКонтрольнаяПроцедураВладелец[КонтрольнаяПроцедура];
				
				УровеньКонтрольныхПроцедур.Объект = КонтрольнаяПроцедура.Ссылка;
				
				УровеньКонтрольныхПроцедур.ИмяФормыРедактирование = НастройкиСервер.ИмяФормыКонтрольнойПроцедуры(
					КонтрольнаяПроцедура,
					КэшКонтрольнаяПроцедураИмяБизнесПроцесса[КонтрольнаяПроцедура]);
					
				УровеньКонтрольныхПроцедур.Выполняется = КэшКонтрольнаяПроцедураВыполняется[КонтрольнаяПроцедура];
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;	
	
	КартаСостоянийОбъектовДерева = Новый Соответствие;
	ОбновитьИконкиДереваОбъектов(КореньДерева, КартаСостоянийОбъектовДерева, КэшКонтрольнаяПроцедура, ИмяСобытия);
	
	СтруктураДереваОбъектов.Строки.Сортировать("Наименование", Истина);
	
	ЗначениеВРеквизитФормы(СтруктураДереваОбъектов, "ДеревоОбъектовКонтроля");
	
	Возврат КартаСостоянийОбъектовДерева;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСостоянияДерева(СостояниеДерева)
	
	ДанныеСостояния = СтрРазделить(СостояниеДерева, "☻");
	Состояния = Новый Соответствие;
	Для Каждого ТекСостояние Из ДанныеСостояния Цикл
		Если ЗначениеЗаполнено(ТекСостояние) Тогда
			ТекСостояниеДанные = СтрРазделить(ТекСостояние, "☺");
			Если ТекСостояниеДанные[0] <> "Строка" Тогда
				Состояния.Вставить(Справочники[ТекСостояниеДанные[0]].ПолучитьСсылку(Новый УникальныйИдентификатор(ТекСостояниеДанные[1])), Булево(ТекСостояниеДанные[2]));
			Иначе
				Состояния.Вставить(ТекСостояниеДанные[1], Булево(ТекСостояниеДанные[2]));	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Состояния;
	
КонецФункции

&НаСервере
Функция ДействияНаСервереПриАктивацииОбъектаДерева(ТекущийОбъектДерева, КартаСостоянийОбъектовДерева)
	
	ОбновитьДиаграммуСостояния(ТекущийОбъектДерева, КартаСостоянийОбъектовДерева);
	
КонецФункции

&НаСервере
Функция МожетБытьИсточникомЗадачи(Объект, ТолькоКонтрольныеПроцедуры = Ложь)
	Возврат (ТипЗнч(Объект) = Тип("СправочникСсылка.КонтрольныеПроцедуры")) ИЛИ 
	        ((НЕ ТолькоКонтрольныеПроцедуры) И ТипЗнч(Объект) = Тип("СправочникСсылка.ОбъектыКонтроля"));	        	
КонецФункции	

&НаСервере
Функция МассивИсточниковЗадачДляДанногоУзлаДереваОбъектов(РодительСтрока, ТолькоКонтрольныеПроцедуры = Ложь)
	ИсточникиЗадач = Новый Массив;
	
	Если МожетБытьИсточникомЗадачи(РодительСтрока.Объект, ТолькоКонтрольныеПроцедуры) Тогда
		ИсточникиЗадач.Добавить(РодительСтрока.Объект);
	КонецЕсли;
	
	Для Каждого ПотомокСтрока Из РодительСтрока.Строки Цикл
		ВложенныйМассив = МассивИсточниковЗадачДляДанногоУзлаДереваОбъектов(ПотомокСтрока, ТолькоКонтрольныеПроцедуры);
		Для Каждого УзелОбъект Из ВложенныйМассив Цикл
			ИсточникиЗадач.Добавить(УзелОбъект);	
		КонецЦикла;				
	КонецЦикла;
	Возврат ИсточникиЗадач;
КонецФункции	


///////////////////////////
// Состояние объектов дерева
///////////////////////////

&НаСервере
Функция ПроблемНетОбозначение()
	Возврат 0;	
КонецФункции

&НаСервере
Функция ОтказОтВыполненияПроцедурыОбозначение()
	Возврат 1;	
КонецФункции

&НаСервере
Функция НеизвестноеСостояниеОбозначение()
	Возврат 2;	
КонецФункции

&НаСервере
Функция ЕстьОшибкиОбозначение()
	Возврат 3;	
КонецФункции 

&НаСервере
Функция СостояниеОбъекта(Объект, КэшКонтрольнаяПроцедура = Неопределено, ИмяСобытия = Неопределено)
	
	Если МожетБытьИсточникомЗадачи(Объект) Тогда	
		
		ЭтоКонтрольнаяПроцедура = ОбщийКлиентСервер.ЭтоКонтрольнаяПроцедура(Объект);
		Если ЭтоКонтрольнаяПроцедура Тогда
			Если КэшКонтрольнаяПроцедура = Неопределено Тогда
				ОбъектВыполнять = Объект.Выполнять;
				НастройкаВыполнена = Объект.НастройкаВыполнена;
			Иначе
				ОбъектВыполнять = КэшКонтрольнаяПроцедура[Объект]["Выполнять"];
				НастройкаВыполнена = КэшКонтрольнаяПроцедура[Объект]["НастройкаВыполнена"];
			КонецЕсли;
		Иначе
			НастройкаВыполнена = Объект.НастройкаВыполнена;
		КонецЕсли;
		
		Если КэшКонтрольнаяПроцедура = Неопределено Тогда
			Если НЕ НастройкаВыполнена ИЛИ (
				ЭтоКонтрольнаяПроцедура И ОбъектВыполнять И (
				Объект.Пауза ИЛИ УправлениеЗаданиямиСервер.ПроцедураНеизвестноеСостояние(Объект.Ссылка) 
				)
				)Тогда
				ЗаписьЖурналаРегистрации("Отладка",,,,"КэшКонтрольнаяПроцедура = Неопределено");
				Возврат НеизвестноеСостояниеОбозначение();
				
			КонецЕсли;
		Иначе
			Если НЕ НастройкаВыполнена ИЛИ (
				ЭтоКонтрольнаяПроцедура И ОбъектВыполнять И (
				КэшКонтрольнаяПроцедура[Объект]["Пауза"] ИЛИ УправлениеЗаданиямиСервер.ПроцедураНеизвестноеСостояние(Объект.Ссылка) 
				)
				)Тогда
				
				ЗаписьЖурналаРегистрации("Отладка",,,,"КэшКонтрольнаяПроцедура <> Неопределено");
				Возврат НеизвестноеСостояниеОбозначение();
				
			КонецЕсли;
		КонецЕсли;
		
		// здесь настройка заведомо выполнена 
		Если ЭтоКонтрольнаяПроцедура И НЕ ОбъектВыполнять Тогда
			Возврат ОтказОтВыполненияПроцедурыОбозначение();
		КонецЕсли;	
		
		Если ЭтоКонтрольнаяПроцедура И УправлениеЗаданиямиСервер.ПроцедураЕстьПроблемы(Объект.Ссылка) И ИмяСобытия <> "Изменение.Справочник.КонтрольныеПроцедуры"  Тогда
			Возврат ЕстьОшибкиОбозначение();			
		КонецЕсли; 
						
	КонецЕсли;
	
	Возврат ПроблемНетОбозначение();
	
КонецФункции	

&НаСервере
Функция ОбновитьДиаграммуСостояния(КорневойЭлементОбъект, КартаСостоянийОбъектовДерева = Неопределено)
	ЗначениеДеревоОбъектов = РеквизитФормыВЗначение("ДеревоОбъектовКонтроля"); 
	КорневаяСтрока = ЗначениеДеревоОбъектов.Строки.Найти(КорневойЭлементОбъект, "Объект", Истина);
	
	Если КорневаяСтрока = Неопределено Тогда 
		Возврат НеизвестноеСостояниеОбозначение();
	КонецЕсли;	
		
	ЧислоПроцедурОтказОтВыполнения = 0;
	ЧислоПроцедурНеизвестноеСостояние = 0;
	ЧислоПроцедурВыполненоНетПроблем = 0;
	ЧислоПроцедурВыполненоЕстьПроблемы = 0;
		
	КонтрольныеПроцедурыИОбъектыКонтроля = МассивИсточниковЗадачДляДанногоУзлаДереваОбъектов(КорневаяСтрока);
	ОбъектыКонтроля = Новый Массив;
	Для Каждого Элемент Из КонтрольныеПроцедурыИОбъектыКонтроля Цикл
		 
		Если ОбщийКлиентСервер.ЭтоОбъектКонтроля(Элемент) Тогда
			Если НЕ Элемент.НастройкаВыполнена Тогда
				
				ЧислоПроцедурНеизвестноеСостояние = ЧислоПроцедурНеизвестноеСостояние + Общий.ЧислоЭлементовВыборка(
					"Справочник.ВидыКонтрольныхПроцедур",
					Новый Структура("Владелец", Элемент.Владелец)
				);
	
			КонецЕсли;
		Иначе
			
			Если КартаСостоянийОбъектовДерева <> Неопределено Тогда
				Критичность = КартаСостоянийОбъектовДерева.Получить(Элемент);
				Если Критичность = Неопределено Тогда
					
					Критичность = СостояниеОбъекта(Элемент);
	
				КонецЕсли;	
			Иначе
				
				Критичность = СостояниеОбъекта(Элемент);
	
			КонецЕсли;	
			
			Если Критичность = ЕстьОшибкиОбозначение() Тогда
				ЧислоПроцедурВыполненоЕстьПроблемы = ЧислоПроцедурВыполненоЕстьПроблемы + 1;	
			ИначеЕсли Критичность = НеизвестноеСостояниеОбозначение() Тогда
				ЧислоПроцедурНеизвестноеСостояние = ЧислоПроцедурНеизвестноеСостояние + 1;	
			ИначеЕсли Критичность = ОтказОтВыполненияПроцедурыОбозначение() Тогда
				ЧислоПроцедурОтказОтВыполнения = ЧислоПроцедурОтказОтВыполнения + 1;		
			Иначе	
				ЧислоПроцедурВыполненоНетПроблем = ЧислоПроцедурВыполненоНетПроблем + 1;	
			КонецЕсли;		
		КонецЕсли;	
	КонецЦикла;
	
	ЧислоПроцедур = ЧислоПроцедурОтказОтВыполнения +
					ЧислоПроцедурНеизвестноеСостояние +
					ЧислоПроцедурВыполненоНетПроблем +
					ЧислоПроцедурВыполненоЕстьПроблемы;
					
	ИнициализироватьДиаграмму();
	
	ДиаграммаСостояние.Обновление = Ложь;
	
	НанестиТочкуНаДиаграмму(0, "Имеются проблемы", ЧислоПроцедурВыполненоЕстьПроблемы, ЧислоПроцедур);		
	НанестиТочкуНаДиаграмму(1, "Не выполняется контроль", ЧислоПроцедурНеизвестноеСостояние, ЧислоПроцедур);
	НанестиТочкуНаДиаграмму(2, "Проблем нет", ЧислоПроцедурВыполненоНетПроблем, ЧислоПроцедур);
	НанестиТочкуНаДиаграмму(3, "Контроль отключен", ЧислоПроцедурОтказОтВыполнения, ЧислоПроцедур);
	
	ДиаграммаСостояние.Обновление = Истина;
	
КонецФункции

&НаСервере
Процедура НанестиТочкуНаДиаграмму(НомерСерии, Заголовок, ЗначениеТочки, СуммаЗначенииТочек, НаноситьНульКакЕдиницу = Ложь)
	Серия = ДиаграммаСостояние.Серии[НомерСерии];
	
	ШаблонЗаголовка = НСтр("ru = '%Число (%Процент%): %Описание'");
	Доля = ?(СуммаЗначенииТочек = 0, 0, ЗначениеТочки / СуммаЗначенииТочек);
	
	ПараметрыЗаголовка = Новый Структура("Описание, Число, Процент", 
	    Заголовок, 
		Строка(ЗначениеТочки),
		Формат(100 * Доля, "ЧДЦ=0; ЧН=0")
	); 
	Серия.Текст = СформироватьСтроку(
	    ШаблонЗаголовка,
		ПараметрыЗаголовка
	);
	Если ЗначениеТочки = 0 И НаноситьНульКакЕдиницу Тогда
		ЗначениеТочки = 1;
	КонецЕсли;	
	ДиаграммаСостояние.УстановитьЗначение(0, НомерСерии, ЗначениеТочки);
КонецПроцедуры

// Подстановка в строку 
// Параметры:
//  ШаблонСтроки - Строка
//  Параметры - Структура
// 
// Возвращаемое значение:
//  Строка
//
&НаСервере
Функция СформироватьСтроку(ЗНАЧ ШаблонСтроки, Параметры)
	Для Каждого Параметр Из Параметры Цикл
		ШаблонСтроки = СтрЗаменить(ШаблонСтроки, "%" + Параметр.Ключ, Параметр.Значение);	
	КонецЦикла;
	Возврат ШаблонСтроки;
КонецФункции

/////////////////////////
// Дерево объектов
/////////////////////////

&НаСервере
Функция ИндексКартинкиДереваОбъектов(ОбъектСтроки, Критичность)
	ВидыОбъектовСдвиги = Новый Структура(
		"ЦентрКонтроляКачества, ИнформационнаяБаза, РабочийСервер, КластерСерверов1С",
		3, 5, 7, 7
	);	
	Если ЭтоКорень(ОбъектСтроки) Тогда 
		Сдвиг = 0;
	ИначеЕсли ОбщийКлиентСервер.ЭтоКонтрольнаяПроцедура(ОбъектСтроки) Тогда
		Сдвиг = 2;
	Иначе
		Для Каждого ВидСдвиг Из ВидыОбъектовСдвиги Цикл
			Если ОбщийКлиентСервер.ЭтоВидОбъектаКонтроля(ОбъектСтроки, ВидСдвиг.Ключ) Тогда
				Сдвиг = ВидСдвиг.Значение;
			ИначеЕсли ОбщийКлиентСервер.ЭтоОбъектКонтроля(ОбъектСтроки, ВидСдвиг.Ключ) Тогда
				Сдвиг = ВидСдвиг.Значение + 1;
			КонецЕсли;	
		КонецЦикла;			
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("Отладка",,,,"" + ОбъектСтроки + ": Возврат=" + (Сдвиг * 4 + Критичность) + ";Сдвиг=" + Сдвиг + ";Критичность=" + Критичность);
	
	Возврат Сдвиг * 4 + Критичность;
КонецФункции	

&НаСервере
Функция ОбновитьИконкиДереваОбъектов(КорневаяСтрока, КартаСостояний, КэшКонтрольнаяПроцедура = Неопределено, ИмяСобытия = Неопределено)	 
	ОбъектСтроки = КорневаяСтрока.Объект;
	Состояние = СостояниеОбъекта(ОбъектСтроки, КэшКонтрольнаяПроцедура, ИмяСобытия);	
		
	Если Состояние <> ЕстьОшибкиОбозначение() Тогда
		
		Для Каждого ПотомокСтрока Из КорневаяСтрока.Строки Цикл
			СостояниеПотомка = ОбновитьИконкиДереваОбъектов(ПотомокСтрока, КартаСостояний, КэшКонтрольнаяПроцедура, ИмяСобытия);		
			Состояние = Макс(СостояниеПотомка, Состояние);		
		КонецЦикла;
		
	КонецЕсли;	

	КартаСостояний.Вставить(ОбъектСтроки, Состояние);
	КорневаяСтрока.ИндексКартинкиСтроки = ИндексКартинкиДереваОбъектов(ОбъектСтроки, Состояние);
	
	Возврат Состояние;
КонецФункции	

&НаКлиенте
Процедура РазвернутьДеревоОбъектов(Корень = Неопределено, Уровень = Неопределено, Состояния = Неопределено)
	Корень = ?(Корень = Неопределено, ДеревоОбъектовКонтроля, Корень);
	КоллекцияЭлементовДерева = Корень.ПолучитьЭлементы();
	Для Каждого ПотомокСтрока Из КоллекцияЭлементовДерева Цикл
		ИдентификаторСтроки = ПотомокСтрока.ПолучитьИдентификатор();
		УзелРазвернут = Истина;
		
		Если Состояния <> Неопределено Тогда
			Если Состояния[ПотомокСтрока.Объект] <> Неопределено Тогда
				УзелРазвернут = Состояния[ПотомокСтрока.Объект];
			КонецЕсли;
		КонецЕсли;
		
		Если УзелРазвернут Тогда
			Элементы.ДеревоОбъектовКонтроля.Развернуть(ИдентификаторСтроки, Ложь);
		Иначе
			Элементы.ДеревоОбъектовКонтроля.Свернуть(ИдентификаторСтроки);
		КонецЕсли;
		
		РазвернутьДеревоОбъектов(ПотомокСтрока, Уровень, Состояния);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ТекущаяСтрокаДереваОбъектовДанные()
	
	ТекущаяСтрока = Элементы.ДеревоОбъектовКонтроля.ТекущаяСтрока;	
	Возврат ?(ТекущаяСтрока = Неопределено, Неопределено, ДеревоОбъектовКонтроля.НайтиПоИдентификатору(ТекущаяСтрока));		
	
КонецФункции	

&НаКлиенте
Функция ТекущийОбъектДереваОбъектов()
	ТекущаяСтрока = ТекущаяСтрокаДереваОбъектовДанные(); 
	Возврат ?(ТекущаяСтрока = Неопределено, 
		ОбъектКореньДереваОбъектов(),
		ТекущаяСтрокаДереваОбъектовДанные().Объект
	);
КонецФункции	

&НаКлиенте
Функция ИдентификаторСтрокиДереваОбъектовПоОбъекту(ОбъектДерева, Корень = Неопределено)
	Корень = ?(Корень = Неопределено, ДеревоОбъектовКонтроля, Корень);
	ВсеСтрокиДанных = Корень.ПолучитьЭлементы();
	
	Для Каждого СтрокаДанных Из ВсеСтрокиДанных Цикл
		Если СтрокаДанных.Объект = ОбъектДерева Тогда
			Возврат СтрокаДанных.ПолучитьИдентификатор();
		Иначе 
			ИдентификаторСтроки = ИдентификаторСтрокиДереваОбъектовПоОбъекту(ОбъектДерева, СтрокаДанных);
			Если ИдентификаторСтроки <> Неопределено Тогда
				Возврат ИдентификаторСтроки;
			КонецЕсли;					
		КонецЕсли;	
	КонецЦикла;
	Возврат Неопределено;
		
КонецФункции	

&НаСервереБезКонтекста 
Функция ОбъектМожноУдалять(ОбъектДерева, ТолькоПроверкаТипа = Истина)
	Возврат ОбщийКлиентСервер.ЭтоОбъектКонтроля(ОбъектДерева) И 
		(ТолькоПроверкаТипа ИЛИ 
		 Общий.ЧислоЭлементовВыборка("Справочник.ОбъектыКонтроля", Новый Структура("Владелец", ОбъектДерева.Владелец)) > 1);	
КонецФункции	

&НаСервере 
Процедура УдалитьОбъект(ОбъектСсылка)
	
	ОбъектСсылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
	
КонецПроцедуры

&НаСервере 
Процедура ИнициализироватьДиаграмму() 
			
	ДиаграммаСостояние.Очистить();
	ДиаграммаСостояние.ТипДиаграммы = ТипДиаграммы.Круговая;
	ДиаграммаСостояние.КоличествоТочек = 1;
	ДиаграммаСостояние.КоличествоСерий = 4;
	ДиаграммаСостояние.Окантовка = Истина;
	ДиаграммаСостояние.ОбластьЛегенды.Верх = 0.1;
	ДиаграммаСостояние.ОбластьЛегенды.Лево = 0.20;
	
	//ДиаграммаСостояние.ОбластьПостроения.Лево = 0.2;
	ДиаграммаСостояние.ОбластьПостроения.Право = 0.2;
	
	СерияВыполняетсяПроцедур = ДиаграммаСостояние.Серии[2];
	// Зеленый цвет
	СерияВыполняетсяПроцедур.Цвет = Новый Цвет(204,255,204);	
	
	СерияОжидаетНастройки = ДиаграммаСостояние.Серии[1];
	// Желтый цвет
	СерияОжидаетНастройки.Цвет =  Новый Цвет(255, 255, 153);
			
	СерияНеВыполняется = ДиаграммаСостояние.Серии[0];
	// Красный цвет
	СерияНеВыполняется.Цвет = Новый Цвет(255, 204, 153);
	
	СерияОтказОтВыполнения = ДиаграммаСостояние.Серии[3];
	// Серый цвет
	СерияОтказОтВыполнения.Цвет = Новый Цвет(237, 237, 237);
	
КонецПроцедуры

&НаСервере 
Функция НаименованиеВидаОбъекта(Объект)
	Возврат Строка(Объект.Владелец);
КонецФункции

Функция ЭтоИспользуемыйКластер(Объект) 
	Если Объект.Владелец = Справочники.ВидыОбъектовКонтроля.КластерСерверов1С Тогда
		Возврат ВыборкаБазКластера(Объект.Ссылка).Следующий();
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаСервереБезКонтекста
Функция ВыборкаБазКластера(КластерСсылка)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Параметры.ОбъектКонтроля КАК ОбъектКонтроля
	               |ИЗ
	               |	РегистрСведений.ПараметрыИнформационныхБаз КАК Параметры
	               |ГДЕ
	               |	Параметры.Кластер = &Кластер
	               |	И Параметры.ОбъектКонтроля.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("Кластер", КластерСсылка);
	ВыборкаНастроек = Запрос.Выполнить().Выбрать();
	Возврат ВыборкаНастроек;
КонецФункции

Функция ЭтоКорень(Объект) Экспорт
	Возврат Объект = ОбъектКореньДереваОбъектов();
КонецФункции

Функция ОбъектКореньДереваОбъектов() Экспорт
	Возврат "root";
КонецФункции

&НаКлиенте
Процедура АктивизироватьТекущийЭлементДерева()
	
	Элементы.ДеревоОбъектовКонтроля.ТекущаяСтрока = ИдентификаторСтрокиДереваОбъектовПоОбъекту(ВыбранныйЭлементДерева);
	НастроитьФормуДляТекущегоЭлементаДерева();
	ОбновлениеДереваВПроцессе = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура АнализДампов(Команда)
	ОбъектКонтроля = ПолучитьОбъектКонтроля(ЭтотОбъект.Элементы.ДеревоОбъектовКонтроля.ТекущиеДанные.Объект);
	Результат = Новый Структура; 
	ПараметрыОткрытия = Новый Структура;
	
	Результат.Вставить("ИмяФормы", "ОбщаяФорма.АнализДампов");
	ПараметрыОткрытия.Вставить("ОбъектКонтроля", ОбъектКонтроля);
	
	Результат.Вставить("ПараметрыОткрытия", ПараметрыОткрытия);
	
	ОткрытьФорму(Результат.ИмяФормы, Результат.ПараметрыОткрытия);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОбъектКонтроля(КонтрольнаяПроцедура)
	Возврат КонтрольнаяПроцедура.ОбъектКонтроля;
КонецФункции

&НаКлиенте
Процедура ПолучитьСостояниеУзлов(Узел, Состояния)
	ЭлементыПотомки = Узел.ПолучитьЭлементы();
	Для Каждого ТекУзел Из ЭлементыПотомки Цикл
		Состояния.Вставить(ТекУзел.Объект, ЭтотОбъект.Элементы.ДеревоОбъектовКонтроля.Развернут(ТекУзел.ПолучитьИдентификатор()));
		ПолучитьСостояниеУзлов(ТекУзел, Состояния);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Состояния = Новый Соответствие;
	ПолучитьСостояниеУзлов(ЭтотОбъект.ДеревоОбъектовКонтроля, Состояния);
	СостояниеДерева = "";
	Для Каждого ТекСостояние Из Состояния Цикл
		Если ТипЗнч(ТекСостояние.Ключ) = Тип("СправочникСсылка.КонтрольныеПроцедуры") Тогда
			СостояниеДерева = СостояниеДерева + "КонтрольныеПроцедуры☺" + ТекСостояние.Ключ.УникальныйИдентификатор() + "☺" + ТекСостояние.Значение + "☻";
		ИначеЕсли ТипЗнч(ТекСостояние.Ключ) = Тип("СправочникСсылка.ОбъектыКонтроля") Тогда
			СостояниеДерева = СостояниеДерева + "ОбъектыКонтроля☺" + ТекСостояние.Ключ.УникальныйИдентификатор() + "☺" + ТекСостояние.Значение + "☻";
		ИначеЕсли ТипЗнч(ТекСостояние.Ключ) = Тип("СправочникСсылка.ВидыОбъектовКонтроля") Тогда
			СостояниеДерева = СостояниеДерева + "ВидыОбъектовКонтроля☺" + ТекСостояние.Ключ.УникальныйИдентификатор() + "☺" + ТекСостояние.Значение + "☻";
		ИначеЕсли ТипЗнч(ТекСостояние.Ключ) = Тип("Строка") Тогда
			СостояниеДерева = СостояниеДерева + "Строка☺" + ТекСостояние.Ключ + "☺" + ТекСостояние.Значение + "☻";
		Иначе
			Сообщить(ТипЗнч(ТекСостояние.Ключ));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
