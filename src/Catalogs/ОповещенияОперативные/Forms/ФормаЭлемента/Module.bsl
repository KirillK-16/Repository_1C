
&НаКлиенте
Перем КомпоновщикФиксированныеНастройкиОтборЛевоеЗначениеНачалоВыбора;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    ОбщийПоПочте = Константы.ВыполнятьОповещениеПоПочте.Получить();
    ОбщийПоСМС = Константы.ВыполнятьОповещениеПоСМС.Получить();
    ОбщийПоСкайпу = Константы.ВыполнятьОповещениеПоSkype.Получить();
    ОбщийПоRestAPI = Константы.ВыполнятьОповещениеПоRestAPI.Получить();
    
	СКД = Новый СхемаКомпоновкиДанных();
	ИсточникСКД = СКД.ИсточникиДанных.Добавить();
	ИсточникСКД.Имя = "ИсточникДанных1";
	ИсточникСКД.ТипИсточникаДанных = "local";
    
    НаборДанных = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
    НаборДанных.Запрос = РегистрыСведений.Инциденты.ПолучитьТекстЗапросаИнициализацииСКД_Оперативное(); 
    НаборДанных.ИсточникДанных = ИсточникСКД.Имя;
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.ПутьКДанным = "Инцидент"; 
    Поле.Поле = "Инцидент"; 
    Поле.Заголовок = "Инцидент";
    Поле.ОграничениеИспользованияРеквизитов.Условие = Истина;
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.ПутьКДанным = "ТипИнцидента"; 
    Поле.Поле = "ТипИнцидента"; 
    Поле.Заголовок = "Тип инцидента";
    Поле.ОграничениеИспользованияРеквизитов.Условие = Истина;
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.ПутьКДанным = "УровеньИнцидента"; 
    Поле.Поле = "УровеньИнцидента"; 
    Поле.Заголовок = "Уровень инцидента";
    Поле.ОграничениеИспользованияРеквизитов.Условие = Истина;
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.ПутьКДанным = "НаименованиеИнцидента"; 
    Поле.Поле = "НаименованиеИнцидента"; 
    Поле.Заголовок = "Наименование инцидента";
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.ПутьКДанным = "НаименованиеТипаИнцидента"; 
    Поле.Поле = "НаименованиеТипаИнцидента"; 
    Поле.Заголовок = "Наименование типа инцидента";
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.ПутьКДанным = "ПометкаУдаленияИнцидента"; 
    Поле.Поле = "ПометкаУдаленияИнцидента"; 
    Поле.Заголовок = "Пометка удаления инцидента";
    
    Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    Поле.ПутьКДанным = "ПометкаУдаленияТипаИнцидента"; 
    Поле.Поле = "ПометкаУдаленияТипаИнцидента"; 
    Поле.Заголовок = "Пометка удаления типа инцидента";
    
    URLСхемы = ПоместитьВоВременноеХранилище(СКД, Новый УникальныйИдентификатор());
    Компоновщик.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
     
	Если Параметры.Свойство("ИнтервалОЗакрытии") Тогда
		Объект.ИнтервалОЗакрытии = Параметры.ИнтервалОЗакрытии;
	КонецЕсли;
	
	ЭтотОбъект.СравнениеВсем = "Больше";
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
        
        ШаблонПоУмолчанию = ШаблонПоУмолчанию();
		
		Если НЕ ЗначениеЗаполнено(Объект.ТемаОповещения) Тогда
			Объект.ТемаОповещения = ШаблонПоУмолчанию.Тема;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ТемаОповещенияЗакрытие) Тогда
			Объект.ТемаОповещенияЗакрытие = СтрЗаменить(ШаблонПоУмолчанию.Тема, "PROBLEM", "OK");
		КонецЕсли;
		
		
		Если НЕ ЗначениеЗаполнено(Объект.ТекстОповещения) Тогда
			Объект.ТекстОповещения = ШаблонПоУмолчанию.ТелоПисьма;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ТекстОповещенияЗакрытие) Тогда
			Объект.ТекстОповещенияЗакрытие = СтрЗаменить(ШаблонПоУмолчанию.ТелоПисьма, "PROBLEM", "OK");
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ТекстОповещенияСмс) Тогда
			Объект.ТекстОповещенияСмс = ШаблонПоУмолчанию.ТелоСМС;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ТекстОповещенияСмсЗакрытие) Тогда
			Объект.ТекстОповещенияСмсЗакрытие = СтрЗаменить(ШаблонПоУмолчанию.ТелоСМС, "PROBLEM", "OK");
		КонецЕсли;
	КонецЕсли;
	
	ПолучательПриИзмененииНаСервере();
    
    Если Параметры.Свойство("ТипИнцидента") Тогда
        ЭлементОтбора = Компоновщик.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
        ЭлементОтбора.Использование = Истина;
        ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипИнцидента");
        ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
        ЭлементОтбора.ПравоеЗначение = Параметры.ТипИнцидента;
    КонецЕсли;
    
    ЭтотОбъект.ШаблоныЗамены = ПолучитьШаблоныОповещения();
    
    Элементы.ШаблоныЗамены.Видимость = Объект.ПоказатьШаблоныЗамены;
    Элементы.ШаблоныЗамены1.Видимость = Объект.ПоказатьШаблоныЗамены;
    
    Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
        
        НовСтрока = Объект.ПовторноеОповещение.Добавить();
        НовСтрока.Использовать = Истина;
        НовСтрока.УровеньИнцидента = Перечисления.УровниИнцидентов.Информация;
        НовСтрока.ПериодПовторногоОповещения = 86400;
        
        НовСтрока = Объект.ПовторноеОповещение.Добавить();
        НовСтрока.Использовать = Истина;
        НовСтрока.УровеньИнцидента = Перечисления.УровниИнцидентов.Предупреждение;
        НовСтрока.ПериодПовторногоОповещения = 21600;
        
        НовСтрока = Объект.ПовторноеОповещение.Добавить();
        НовСтрока.Использовать = Истина;
        НовСтрока.УровеньИнцидента = Перечисления.УровниИнцидентов.Ошибка;
        НовСтрока.ПериодПовторногоОповещения = 3600;
        
        НовСтрока = Объект.ПовторноеОповещение.Добавить();
        НовСтрока.Использовать = Истина;
        НовСтрока.УровеньИнцидента = Перечисления.УровниИнцидентов.КритическаяОшибка;
        НовСтрока.ПериодПовторногоОповещения = 600;
        
    КонецЕсли;
    
    Элементы.Запустить.Доступность = НЕ Объект.Активно;
    Элементы.Остановить.Доступность = Объект.Активно;
    
    ВидимостьДекорацияПредупреждение();
    ВидимостьПолучатели();
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтотОбъект.ПредыдущаяСтраница = ЭтотОбъект.Элементы.Страницы.ТекущаяСтраница.Имя;
	ОтдельныеШаблоныОЗакрытииПриИзменении(ЭтотОбъект.Элементы.ОтдельныеШаблоныОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОповеститьОбИзменении(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Справочник.Пользователи.ПослеЗаписи" Тогда
		ПолучательПриИзменении();	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Попытка
		Если НЕ ПустаяСтрока(ТекущийОбъект.НастройкиОтбораДляИнцидентов) Тогда
			НастройкиОтбораДляИнцидентовДесериализация(Компоновщик, ТекущийОбъект.НастройкиОтбораДляИнцидентов);
		КонецЕсли;
	Исключение
		Сообщить("Ошибка чтения настроек отбора для инцидентов");
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПолучательПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Запустить(Команда)
    
    Если ЕстьПараметрыФормированияНаСервере(Компоновщик) Тогда
        
        Объект.Активно = Истина;
        Модифицированность = Истина;
        Элементы.Запустить.Доступность = НЕ Объект.Активно;
        Элементы.Остановить.Доступность = Объект.Активно;
        
    Иначе
        
        Если Элементы.Страницы.ТекущаяСтраница <> Элементы.ГруппаОтборИнцидента Тогда
            Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаОтборИнцидента;
        КонецЕсли;
        ПодключитьОбработчикОжидания("СгенерироватьСообщениеПользователюОтложенное", 0.1, Истина);
        
    КонецЕсли;
    	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьСообщениеПользователюОтложенное() Экспорт
    ОбщийКлиентСервер.СгенерироватьСообщениеПользователю("Не заполнен или отключен отбор в параметрах формирования!", "Компоновщик.Настройки.Отбор", ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Остановить(Команда)
    
    Объект.Активно = Ложь;
    Модифицированность = Истина;
    Элементы.Запустить.Доступность = НЕ Объект.Активно;
    Элементы.Остановить.Доступность = Объект.Активно;
    
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчасНеОтправлять(Команда)
	ВыполнитьСейчас(Команда, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчас(Команда, Отправить = Истина)
	
	Если Модифицированность Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьСейчасЗавершение", ЭтотОбъект, Отправить);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Измененные данные будут записаны.'"), РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ВыполнитьСейчасОбщая(Отправить);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнцидентыПоОтбору(Команда)
    
    Если ЕстьПараметрыФормированияНаСервере(Компоновщик) Тогда 
        
        ЭтотОбъект.ТЗнИнциденты.Очистить();
        
        Инциденты = ОбновитьИнцидентыПоОтборуНаСервере(ЭтотОбъект.Компоновщик);
        
        Для Каждого Инцидент Из Инциденты Цикл
            НовСтрока = ЭтотОбъект.ТЗнИнциденты.Добавить();
            НовСтрока.ТипИнцидента = Инцидент.ТипИнцидента;
            НовСтрока.КодИнцидента = Инцидент.Инцидент;
        КонецЦикла;
        
    Иначе
        
        Если Команда <> Неопределено Тогда
            ОбщийКлиентСервер.СгенерироватьСообщениеПользователю("Не заполнен или отключен отбор в параметрах формирования!", "Компоновщик.Настройки.Отбор", ЭтотОбъект);
        КонецЕсли;
        
    КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = ЭтотОбъект.Элементы.ГруппаСтраницаТекстПросмотр Тогда
		ИзменитьТекстПросмотраШаблонов();
	ИначеЕсли ТекущаяСтраница = ЭтотОбъект.Элементы.ГруппаОтборИнцидента Тогда
		ОбновитьИнцидентыПоОтбору(Неопределено);
	КонецЕсли;
	
	ЭтотОбъект.ПредыдущаяСтраница = ТекущаяСтраница.Имя;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтоШаблонОткрытияПриИзменении(Элемент)
	ПриИзмененииШаблонаОткрытия();
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НЕ Копирование И НоваяСтрока Тогда
		Элементы.Получатели.ТекущиеДанные.ПоПочте = ИСТИНА;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТЗнИнцидентыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    ТекДанные = ЭтотОбъект.Элементы.ТЗнИнциденты.ТекущиеДанные;
    
	КлючЗаписи = ПолучитьКлючЗаписиИнцидента(ТекДанные.КодИнцидента, ТекДанные.ТипИнцидента);
	ПараметрыОткрытия = Новый Структура("Ключ", КлючЗаписи);
	ОткрытьФорму("РегистрСведений.Инциденты.Форма.ФормаЗаписи", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьОтборПоТипуИнцидентаВГруппе(ГруппаЭлементовОтбораКомпоновкиДанных)
    
    ЕстьОтбор = Ложь;
    
    Для Каждого ТекЭлемент Из ГруппаЭлементовОтбораКомпоновкиДанных.Элементы Цикл
        Если ТипЗнч(ТекЭлемент) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
            Если ТекЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипИнцидента") Тогда
                ЕстьОтбор = Истина;
                Возврат ЕстьОтбор;
            КонецЕсли;
        ИначеЕсли ТипЗнч(ТекЭлемент) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
            ЕстьОтбор = ЕстьОтборПоТипуИнцидентаВГруппе(ТекЭлемент);
            Если ЕстьОтбор Тогда
                Возврат ЕстьОтбор;
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
    
    Возврат ЕстьОтбор;
    
КонецФункции

&НаКлиенте
Процедура КомпоновщикФиксированныеНастройкиОтборЛевоеЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    КомпоновщикФиксированныеНастройкиОтборЛевоеЗначениеНачалоВыбора = ЭтотОбъект.Элементы.КомпоновщикФиксированныеНастройкиОтбор.ТекущиеДанные.ЛевоеЗначение; 
    
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    Если Поле.Имя =  "ПолучателиЕстьПоПочтеТекст" И ТипЗнч(Элементы.Получатели.ТекущиеДанные.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
        
        ПараметрыОткрытия = Новый Структура("Ключ, ТекущийЭлемент", Элементы.Получатели.ТекущиеДанные.Адресат, "АдресЭлектроннойПочты");
        ОткрытьФорму("Справочник.Пользователи.Форма.ФормаЭлемента", ПараметрыОткрытия);
        
    ИначеЕсли Поле.Имя = "ПолучателиЕстьПоСмсТекст" И ТипЗнч(Элементы.Получатели.ТекущиеДанные.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
        
        ПараметрыОткрытия = Новый Структура("Ключ, ТекущийЭлемент", Элементы.Получатели.ТекущиеДанные.Адресат, "НомерТелефона");
        ОткрытьФорму("Справочник.Пользователи.Форма.ФормаЭлемента", ПараметрыОткрытия);
        
    ИначеЕсли Поле.Имя = "ПолучателиЕстьПоСкайпуТекст" И ТипЗнч(Элементы.Получатели.ТекущиеДанные.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
        
        ПараметрыОткрытия = Новый Структура("Ключ, ТекущийЭлемент", Элементы.Получатели.ТекущиеДанные.Адресат, "Скайп");
        ОткрытьФорму("Справочник.Пользователи.Форма.ФормаЭлемента", ПараметрыОткрытия);
        
    ИначеЕсли Поле.Имя = "ПолучателиЕстьПоRestApiТекст" И ТипЗнч(Элементы.Получатели.ТекущиеДанные.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
        
        ПараметрыОткрытия = Новый Структура("Ключ, ТекущийЭлемент", Элементы.Получатели.ТекущиеДанные.Адресат, "RestApiАдрес");
        ОткрытьФорму("Справочник.Пользователи.Форма.ФормаЭлемента", ПараметрыОткрытия);    
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПредупреждениеНажатие(Элемент)
    ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияПредупреждениеЗакрытие", ЭтотОбъект);
    ОткрытьФорму("ОбщаяФорма.ФормаКонстантОповещения",,,,,,ОписаниеОповещения);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДекорацияПредупреждениеЗакрытиеНаСервере()
    ВидимостьДекорацияПредупреждение();
    ВидимостьПолучатели();
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПредупреждениеЗакрытие(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
    ДекорацияПредупреждениеЗакрытиеНаСервере();    
КонецПроцедуры

&НаСервере
Процедура ВидимостьДекорацияПредупреждение()
    
    Если
        НЕ Константы.ВыполнятьОповещениеПоПочте.Получить()
        И НЕ Константы.ВыполнятьОповещениеПоСМС.Получить()
        И НЕ Константы.ВыполнятьОповещениеПоSkype.Получить()
        И НЕ Константы.ВыполнятьОповещениеПоRestAPI.Получить()
    Тогда
        Элементы.ДекорацияПредупреждение.Видимость = Истина;
    Иначе
        Элементы.ДекорацияПредупреждение.Видимость = Ложь;
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура ВидимостьПолучатели()
    
    Элементы.ПолучателиГруппа2.Видимость = Константы.ВыполнятьОповещениеПоПочте.Получить();
    Элементы.ПолучателиГруппа3.Видимость = Константы.ВыполнятьОповещениеПоСМС.Получить();
    Элементы.ПолучателиГруппа4.Видимость = Константы.ВыполнятьОповещениеПоSkype.Получить();
    Элементы.ПолучателиГруппа5.Видимость = Константы.ВыполнятьОповещениеПоRestAPI.Получить();
        
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьПараметрыФормированияНаСервере(Компоновщик)
    Возврат ФункцииСКД.КомпоновщикНастроекЕстьОтбор(Компоновщик);
КонецФункции

&НаКлиенте
Процедура ИзменитьТекстПросмотраШаблонов()
	
	Если ЭтоШаблонОткрытия = 0 Тогда
		ЭтоЗакрытие = Ложь;
	Иначе
		ЭтоЗакрытие = Истина;
	КонецЕсли;
	
	ТекстыОповещенияМассив = ПолучитьТекстыОповещенияНаСервере(Объект, ЭтоЗакрытие);
	
	Тема = "";
	ТелоПисьма = "";
	ТелоСМС = "";
	Для Каждого ТекстыОповещения Из ТекстыОповещенияМассив Цикл
		Тема = Тема + ТекстыОповещения.Тема + ";";
		ТелоПисьма = ТелоПисьма + ТекстыОповещения.ТелоПисьма + Символы.ПС;
		ТелоСМС = ТелоСМС + ТекстыОповещения.ТелоСМС + ";";
	КонецЦикла;
	
	Если ТекстыОповещенияМассив.Количество() = 1 Тогда
		Тема = Лев(Тема, СтрДлина(Тема) - 1);
		ТелоПисьма = Лев(ТелоПисьма, СтрДлина(ТелоПисьма) - 1);
		ТелоСМС = Лев(ТелоСМС, СтрДлина(ТелоСМС) - 1);
	КонецЕсли;
	
	ЭтотОбъект.ТемаОповещенияПросмотр = Тема;
	ЭтотОбъект.ТекстОповещенияПросмотр = ТелоПисьма;
	ЭтотОбъект.ТекстОповещенияСмсПросмотр = ТелоСмс;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекстыОповещенияНаСервере(Знач Объект, Знач ЭтоЗакрытие)
	
	ОповещениеСсылка = Объект.Ссылка;
	
	ТекстыОповещенийМассив = Новый Массив;
	
	Инциденты = Справочники.ОповещенияОперативные.ПолучитьИнцидентыОповещения(ОповещениеСсылка.НастройкиОтбораДляИнцидентов);
	
	Если Инциденты.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = РегистрыСведений.Инциденты.ПолучитьТекстЗапросаВыбратьЗаписи();
        Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	СпрИнциденты.Ссылка В (&ИнцидентыМассив)
		|";
		
		Запрос.УстановитьПараметр("ИнцидентыМассив", Инциденты.ВыгрузитьКолонку("Инцидент"));
		Результат = Запрос.Выполнить();
		
		Инциденты = Результат.Выгрузить();
		
		Если НЕ ЭтоЗакрытие Тогда
			ТекстОповещенияТема = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТемаОповещения, Инциденты, ":", ",");
			ТекстОповещенияТело = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТекстОповещения, Инциденты);
			ТекстОповещенияТелоСМС = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТекстОповещенияСмс, Инциденты);
		Иначе
			ТекстОповещенияТема = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТемаОповещенияЗакрытие, Инциденты, ":", ",");
			ТекстОповещенияТело = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТекстОповещенияЗакрытие, Инциденты);
			ТекстОповещенияТелоСМС = Справочники.Оповещения.ПолучитьТекстОповещения(Объект.ТекстОповещенияСмсЗакрытие, Инциденты);
		КонецЕсли;
		
		Результат = Новый Структура;
		Результат.Вставить("Тема", ТекстОповещенияТема);
		Результат.Вставить("ТелоПисьма", ТекстОповещенияТело);
		Результат.Вставить("ТелоСМС", ТекстОповещенияТелоСМС);
	Иначе
		Результат = Новый Структура;
		Результат.Вставить("Тема", "");
		Результат.Вставить("ТелоПисьма", "");
		Результат.Вставить("ТелоСМС", "");
	КонецЕсли;

	ТекстыОповещенийМассив.Добавить(Результат);
	
	Возврат ТекстыОповещенийМассив;
	
КонецФункции

&НаСервере
Процедура ПолучательПриИзмененииНаСервере()
	Для Каждого ТекПолучатель Из Объект.Получатели Цикл
        
        Если ТипЗнч(ТекПолучатель.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
			ТекПолучатель.ЕстьПоПочте = ЗначениеЗаполнено(ТекПолучатель.Адресат.АдресЭлектроннойПочты);
			ТекПолучатель.ЕстьПоПочтеТекст = "";
		Иначе
			ТекПолучатель.ЕстьПоПочте = Истина;
			ТекПолучатель.ЕстьПоПочтеТекст = "";
		КонецЕсли;
		
		Если ТипЗнч(ТекПолучатель.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
			ТекПолучатель.ЕстьПоСмс = ЗначениеЗаполнено(ТекПолучатель.Адресат.НомерТелефона);
			ТекПолучатель.ЕстьПоСмсТекст = "";
		Иначе
			ТекПолучатель.ЕстьПоСмс = Истина;
			ТекПолучатель.ЕстьПоСмсТекст = "";
        КонецЕсли;
        
        Если ТипЗнч(ТекПолучатель.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
			ТекПолучатель.ЕстьПоСкайпу = ЗначениеЗаполнено(ТекПолучатель.Адресат.Скайп);
			ТекПолучатель.ЕстьПоСкайпуТекст = "";
		Иначе
			ТекПолучатель.ЕстьПоСкайпу = Истина;
			ТекПолучатель.ЕстьПоСкайпуТекст = "";
        КонецЕсли;
        
        Если ТипЗнч(ТекПолучатель.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
			ТекПолучатель.ЕстьПоRestAPI = ЗначениеЗаполнено(ТекПолучатель.Адресат.RestApiМетод) И ЗначениеЗаполнено(ТекПолучатель.Адресат.RestApiАдрес);
			ТекПолучатель.ЕстьПоRestApiТекст = "";
		Иначе
			ТекПолучатель.ЕстьПоRestAPI = Истина;
			ТекПолучатель.ЕстьПоRestApiТекст = "";
        КонецЕсли;
        
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.НастройкиОтбораДляИнцидентов = НастройкиОтбораДляИнцидентовСериализация(Компоновщик.ПолучитьНастройки());
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкиОтбораДляИнцидентовСериализация(Настройки)
	
	НастройкиОтбораДляИнцидентов = Справочники.Оповещения.НастройкиОтбораДляИнцидентовСериализация(Настройки);
	
	Возврат НастройкиОтбораДляИнцидентов;
	
КонецФункции

&НаСервереБезКонтекста
Процедура НастройкиОтбораДляИнцидентовДесериализация(Компоновщик, НастройкиОтбораДляИнцидентов)
	
	Справочники.Оповещения.НастройкиОтбораДляИнцидентовДесериализация(Компоновщик, НастройкиОтбораДляИнцидентов);

КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчасЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		Записать();
		ВыполнитьСейчасОбщая(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчасОбщая(Отправить)
	
	Результат = ВыполнитьСервер(Отправить);
	Если Результат = Ложь Тогда
		Возврат;
	ИначеЕсли Результат = Неопределено Тогда
		Пояснение = НСтр("ru = 'Оповещение не сформировано'");
		НавигационнаяСсылка = Неопределено;
	Иначе
		Пояснение = НСтр("ru = 'Оповещение сформировано. См. Журнал оповещений'");
		
		Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() = 1 Тогда
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Результат[0]);
        ИначеЕсли ТипЗнч(Результат) = Тип("РегистрСведенийКлючЗаписи.ЖурналОповещений") Тогда
            НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Результат);
		Иначе
			НавигационнаяСсылка = "";
			Пояснение = НСтр("ru = 'Оповещения сформированы. См. Журнал оповещений'");
		КонецЕсли;
		
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Проверка выполнена'"), НавигационнаяСсылка, Пояснение);
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗаданияЗавершение(РасписаниеВыбрано, ДополнительныеПараметры) Экспорт
	
	Если РасписаниеВыбрано <> Неопределено Тогда
		Расписание = РасписаниеВыбрано;
		РасписаниеПредставление = "Расписание: " + Строка(Расписание);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьСервер(Отправить)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	Если Не ТекущийОбъект.ПроверитьКорректностьЗаполнения(Истина) Тогда
		Возврат Ложь;
	КонецЕсли;

    Инциденты = ОбновитьИнцидентыПоОтборуНаСервере(ЭтотОбъект.Компоновщик);
    
    Если Инциденты.Количество() > 0 Тогда
        
        Инцидент = РегистрыСведений.Инциденты.СоздатьМенеджерЗаписи();
        Инцидент.Инцидент = Инциденты[0].Инцидент;
        Инцидент.ТипИнцидента = Инциденты[0].ТипИнцидента; 
        Инцидент.Прочитать();
        
        Возврат Справочники.Оповещения.ОповеститьПользователей(Инцидент, Объект.Ссылка, "", Истина, Отправить);  
        
    Иначе
        
        Инцидент = РегистрыСведений.Инциденты.СоздатьМенеджерЗаписи();
        Инцидент.Инцидент = Справочники.Инциденты.ПустаяСсылка();
        Инцидент.ТипИнцидента = Справочники.ТипыИнцидентов.ПустаяСсылка();
        
        Возврат Справочники.Оповещения.ОповеститьПользователей(Инцидент, Объект.Ссылка, "", Истина, Отправить);
        
    КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьШаблоныОповещения()
    
    Шаблоны = Новый Массив;
    Шаблоны.Добавить("[НаименованиеОповещения]");
    Шаблоны.Добавить("[Наименование]");
	Шаблоны.Добавить("[ТипИнцидента]");
	Шаблоны.Добавить("[КодИнцидента]");
	Шаблоны.Добавить("[Кластер]");
	Шаблоны.Добавить("[СтрокаПодключения]");
	Шаблоны.Добавить("[ДатаФормированияОповещения=дд.ММ.гггг ЧЧ:мм:сс]");
	Шаблоны.Добавить("[ДатаОткрытияИнцидента=дд.ММ.гггг ЧЧ:мм:сс]");
	Шаблоны.Добавить("[ДатаЗакрытияИнцидента=дд.ММ.гггг ЧЧ:мм:сс]");
	Шаблоны.Добавить("[СтатусИнцидента]");
	Шаблоны.Добавить("[ПоследнееСрабатывание=дд.ММ.гггг ЧЧ:мм:сс]");
	Шаблоны.Добавить("[ВремяВСтатусе]");
	Шаблоны.Добавить("[StatusTime]");
	Шаблоны.Добавить("[ВремяАктуальностиПроблемы]");
	Шаблоны.Добавить("[RelevanceTimeProblems]");	
	Шаблоны.Добавить("[СообщениеИнцидента]");
	Шаблоны.Добавить("[Показатели]");
	Шаблоны.Добавить("[Отправитель]");
	
	Возврат СтрСоединить(Шаблоны, Символы.ПС);
    
КонецФункции

&НаСервереБезКонтекста
Функция ШаблонПоУмолчанию()
	
    ШаблонПоУмолчанию = Новый Структура("Тема, ТелоПисьма, ТелоСМС");
    
    ШаблонПоУмолчанию.Тема = "<Шапка>PROBLEM:[НаименованиеОповещения]</Шапка>";
    ШаблонПоУмолчанию.ТелоПисьма = "<Шапка>PROBLEM:[НаименованиеОповещения]</Шапка>
    |<Тело>[ВремяВСтатусе];[ДатаОткрытияИнцидента=дд.ММ ЧЧ:мм:сс]: [СтрокаПодключения]
    |</Тело>";
    ШаблонПоУмолчанию.ТелоСМС = "<Шапка>PROBLEM:[НаименованиеОповещения]</Шапка>
    |<Тело>[ВремяВСтатусе];[ДатаОткрытияИнцидента=дд.ММ ЧЧ:мм:сс]: [СтрокаПодключения]
    |</Тело>"; 
        
    Возврат ШаблонПоУмолчанию;
	
КонецФункции

&НаКлиенте
Процедура ПриИзмененииШаблонаОткрытия()
	
	ИзменитьТекстПросмотраШаблонов();
	
	Если ЭтоШаблонОткрытия = 0 Тогда
		ЭтотОбъект.Элементы.ГруппаШаблонОткрытия.Видимость = Истина;
		ЭтотОбъект.Элементы.ГруппаШаблонЗакрытие.Видимость = Ложь;
	Иначе
		ЭтотОбъект.Элементы.ГруппаШаблонОткрытия.Видимость = Ложь;
		ЭтотОбъект.Элементы.ГруппаШаблонЗакрытие.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьИнцидентыПоОтборуНаСервере(Компоновщик)
	
	НастройкиОтбораДляИнцидентов = НастройкиОтбораДляИнцидентовСериализация(Компоновщик.ПолучитьНастройки());
	
	Инциденты = Новый Массив;
	
	ТЗн = Справочники.ОповещенияОперативные.ПолучитьИнцидентыОповещения(НастройкиОтбораДляИнцидентов);
	Если ТЗн.Количество() > 0 Тогда
		Для Каждого ТекСтрока Из ТЗн Цикл
			ПараметрыИнцидента = Новый Структура("ТипИнцидента, Инцидент", ТекСтрока.ТипИнцидента, ТекСтрока.Инцидент);
			Инциденты.Добавить(ПараметрыИнцидента);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Инциденты;
	
КонецФункции

&НаКлиенте
Процедура ОтдельныеШаблоныОЗакрытииПриИзменении(Элемент)
	ОтдельныеШаблоныОЗакрытииПриИзмененииОбщая();	
КонецПроцедуры

&НаКлиенте
Процедура ОтдельныеШаблоныОЗакрытии1ПриИзменении(Элемент)
	ОтдельныеШаблоныОЗакрытииПриИзмененииОбщая();
КонецПроцедуры

&НаКлиенте
Процедура ОтдельныеШаблоныОЗакрытииПриИзмененииОбщая()
    Элементы.ГруппаШаблонЗакрытие.Видимость = Объект.ОтдельныеШаблоныОЗакрытии;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКлючЗаписиИнцидента(КодИнцидента, ТипИнцидента)
	ЗначениеКлюча = Новый Структура("Инцидент, ТипИнцидента", Справочники.Инциденты.НайтиСсылкуПоНаименованию(КодИнцидента), ТипИнцидента);
	КлючЗаписи = РегистрыСведений.Инциденты.СоздатьКлючЗаписи(ЗначениеКлюча);
	Возврат КлючЗаписи;
КонецФункции

&НаКлиенте
Процедура ПолучателиАдресатПриИзменении(Элемент)
	
	ПолучательПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПриИзменении()
    
    Если ЭтотОбъект.Элементы.Получатели.ТекущиеДанные <> Неопределено Тогда
        
        ТекПолучатель = ПолучитьПолучателяСтруктура(ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.Адресат);
        
        Если ТипЗнч(ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоПочте = ЗначениеЗаполнено(ТекПолучатель.АдресЭлектроннойПочты);
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоПочтеТекст = "";
        Иначе
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоПочте = Истина;
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоПочтеТекст = "";
        КонецЕсли;
        
        
        Если ТипЗнч(ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСмс = ЗначениеЗаполнено(ТекПолучатель.НомерТелефона);
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСмсТекст = "";
        Иначе
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСмс = Истина;
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСмсТекст = "";
        КонецЕсли;
        
        Если ТипЗнч(ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСкайпу = ЗначениеЗаполнено(ТекПолучатель.Скайп);
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСкайпуТекст = "";
        Иначе
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСкайпу = Истина;
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСкайпуТекст = "";
        КонецЕсли;
        
        Если ТипЗнч(ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.Адресат) = Тип("СправочникСсылка.Пользователи") Тогда
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоRestApi = ЗначениеЗаполнено(ТекПолучатель.RestApiМетод) И ЗначениеЗаполнено(ТекПолучатель.RestApiАдрес);
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоRestApiТекст = "";
        Иначе
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоRestApi = Истина;
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоRestApiТекст = "";
        КонецЕсли;
        
        Если ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоПочте
            ИЛИ ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСмс
            ИЛИ ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоСкайпу
            ИЛИ ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ЕстьПоRestApi
            Тогда
            ЭтотОбъект.Элементы.Получатели.ТекущиеДанные.ОповещатьЗакрыт = Истина;
        КонецЕсли;
        
    КонецЕсли;
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПолучателяСтруктура(Получатель)
    
    ПолучательСтруктура = Новый Структура("Адресат, АдресЭлектроннойПочты, НомерТелефона, Скайп, RestApiМетод, RestApiАдрес");
	ПолучательСтруктура.Адресат = Получатель;
    Если ТипЗнч(Получатель) = Тип("СправочникСсылка.Пользователи") Тогда
        ПолучательСтруктура.АдресЭлектроннойПочты = Получатель.АдресЭлектроннойПочты;
        ПолучательСтруктура.НомерТелефона = Получатель.НомерТелефона;
        ПолучательСтруктура.Скайп = Получатель.Скайп;
        ПолучательСтруктура.RestApiМетод = Получатель.RestApiМетод;
        ПолучательСтруктура.RestApiАдрес = Получатель.RestApiАдрес;
    КонецЕсли;
    	
	Возврат ПолучательСтруктура;
    
КонецФункции

&НаКлиенте
Процедура ПоказатьШаблоныЗаменыПриИзменении(Элемент)
    Элементы.ШаблоныЗамены.Видимость = Объект.ПоказатьШаблоныЗамены;
    Элементы.ШаблоныЗамены1.Видимость = Объект.ПоказатьШаблоныЗамены;
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьНаШаблонПоУмолчанию(Команда)
    
    Шаблоны = ШаблонПоУмолчанию();
    Если ЭтотОбъект.ТекущийЭлемент.Имя = "ТемаОповещения" Тогда
        Объект.ТемаОповещения = Шаблоны.Тема;
    ИначеЕсли ЭтотОбъект.ТекущийЭлемент.Имя = "ТекстОповещения" Тогда
        Объект.ТекстОповещения = Шаблоны.ТелоПисьма;
    ИначеЕсли ЭтотОбъект.ТекущийЭлемент.Имя = "ТекстОповещенияСмс" Тогда
        Объект.ТекстОповещенияСмс = Шаблоны.ТелоСМС;
    ИначеЕсли ЭтотОбъект.ТекущийЭлемент.Имя = "ТемаОповещенияЗакрытие" Тогда
        Объект.ТемаОповещенияЗакрытие = СтрЗаменить(Шаблоны.Тема, "PROBLEM", "OK");
    ИначеЕсли ЭтотОбъект.ТекущийЭлемент.Имя = "ТекстОповещенияЗакрытие" Тогда
        Объект.ТекстОповещенияЗакрытие = СтрЗаменить(Шаблоны.ТелоПисьма, "PROBLEM", "OK");
    ИначеЕсли ЭтотОбъект.ТекущийЭлемент.Имя = "ТекстОповещенияСмсЗакрытие" Тогда
        Объект.ТекстОповещенияСмсЗакрытие = СтрЗаменить(Шаблоны.ТелоСМС, "PROBLEM", "OK");
    КонецЕсли;
            
КонецПроцедуры

#КонецОбласти









