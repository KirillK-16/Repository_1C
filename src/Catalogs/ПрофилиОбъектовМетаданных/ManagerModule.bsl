
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗаполнитьПоУмолчанию(Ссылка) Экспорт
	Объект = Ссылка.ПолучитьОбъект();
	ТаблицаКонфигураций = Объект.Конфигурации.Выгрузить();
	ТаблицаКонфигураций.Свернуть("Конфигурация");
	Конфигурации = ТаблицаКонфигураций.ВыгрузитьКолонку("Конфигурация");
	Запрос = Новый Запрос(ТекстЗапросаДляЗаполнения());
	Запрос.УстановитьПараметр("Конфигурации", Конфигурации);
	Если Объект.ОбновлятьАвтоматически Тогда
		Запрос.УстановитьПараметр("МассивРодителей", МассивРодителейПоУмолчанию());
	Иначе
		Запрос.УстановитьПараметр("МассивРодителей", Справочники.ОперацииСтатистикиКонфигурации.ПустаяСсылка());
	КонецЕсли;
	ДеревоЗначений = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Объект.ХранилищеДереваМетаданных = Новый ХранилищеЗначения(ДеревоЗначений, Новый СжатиеДанных(9));
	
	Объект.ОбъектыМетаданных.Очистить();
	Для Каждого ЭлементДерева Из ДеревоЗначений.Строки Цикл
		Если НЕ ЭлементДерева.Флажок Тогда
			Продолжить;
		КонецЕсли;
		ДобавитьОбъектМетаданных(ЭлементДерева, Объект);
	КонецЦикла;
	
	Попытка
		Объект.Записать();
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ПрофилиОбъектовМетаданных.ЗаполнениеПоУмолчанию", УровеньЖурналаРегистрации.Ошибка, Метаданные.Справочники.ПрофилиОбъектовМетаданных, Ссылка, ОписаниеОшибки);
	КонецПопытки;
КонецПроцедуры

Процедура ДобавитьОбъектМетаданных(СтрокаДерева, ТекущийОбъект)
	КоллекцияПодчиненных = СтрокаДерева.Строки;
	Если КоллекцияПодчиненных.Количество() Тогда
		Для Каждого ЭлементДерева Из КоллекцияПодчиненных Цикл
			Если НЕ ЭлементДерева.Флажок Тогда
				Продолжить;
			КонецЕсли;         
			ДобавитьОбъектМетаданных(ЭлементДерева, ТекущийОбъект);
		КонецЦикла;
	ИначеЕсли СтрокаДерева.Флажок Тогда
		НоваяСтрока = ТекущийОбъект.ОбъектыМетаданных.Добавить();
		НоваяСтрока.ОбъектМетаданных = СтрокаДерева.ОбъектМетаданных;
	КонецЕсли;
КонецПроцедуры

Функция ТекстЗапросаДляЗаполнения()
	Возврат "ВЫБРАТЬ
	        |	ОперацииСтатистикиКонфигурации.Ссылка КАК Ссылка
	        |ПОМЕСТИТЬ ВТ_ДопустимыеОперации
	        |ИЗ
	        |	Справочник.ОперацииСтатистикиКонфигурации КАК ОперацииСтатистикиКонфигурации
	        |ГДЕ
	        |	ОперацииСтатистикиКонфигурации.Ссылка В ИЕРАРХИИ(&МассивРодителей)
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	КонфигурацияИнформационнойБазыСрезПоследних.ИнформационнаяБаза КАК ИнформационнаяБаза
	        |ПОМЕСТИТЬ ВТ_ИБКонфигураций
	        |ИЗ
	        |	РегистрСведений.КонфигурацияИнформационнойБазыСрезПоследних КАК КонфигурацияИнформационнойБазыСрезПоследних
	        |ГДЕ
	        |	КонфигурацияИнформационнойБазыСрезПоследних.Конфигурация В(&Конфигурации)
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	ИнформационнаяБаза
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |	ОперацииСтатистикиКонфигурацииСрезПоследних.ОперацияСтатистикиКонфигурации КАК ОбъектМетаданных,
	        |	ИСТИНА КАК Флажок
	        |ИЗ
	        |	ВТ_ИБКонфигураций КАК ВТ_ИБКонфигураций
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОперацииСтатистикиКонфигурацииСрезПоследних КАК ОперацииСтатистикиКонфигурацииСрезПоследних
	        |		ПО ВТ_ИБКонфигураций.ИнформационнаяБаза = ОперацииСтатистикиКонфигурацииСрезПоследних.ИнформационнаяБаза
	        |			И (ОперацииСтатистикиКонфигурацииСрезПоследних.ОперацияСтатистикиКонфигурации В
	        |				(ВЫБРАТЬ
	        |					ВТ_ДопустимыеОперации.Ссылка КАК Ссылка
	        |				ИЗ
	        |					ВТ_ДопустимыеОперации КАК ВТ_ДопустимыеОперации))
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	ОперацииСтатистикиКонфигурацииСрезПоследних.ОперацияСтатистикиКонфигурации.Наименование
	        |ИТОГИ
	        |	МАКСИМУМ(Флажок)
	        |ПО
	        |	ОбъектМетаданных ИЕРАРХИЯ"
КонецФункции

Функция МассивРодителейПоУмолчанию()
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("БизнесПроцесс");
	МассивСтрок.Добавить("Документ");
	МассивСтрок.Добавить("ЖурналДокументов");
	МассивСтрок.Добавить("Задача");
	МассивСтрок.Добавить("Перечисление");
	МассивСтрок.Добавить("ПланВидовРасчета");
	МассивСтрок.Добавить("ПланВидовХарактеристик");
	МассивСтрок.Добавить("ПланОбмена");
	МассивСтрок.Добавить("ПланСчетов");
	МассивСтрок.Добавить("Последовательность");
	МассивСтрок.Добавить("РегистрБухгалтерии");
	МассивСтрок.Добавить("РегистрНакопления");
	МассивСтрок.Добавить("РегистрРасчета");
	МассивСтрок.Добавить("РегистрСведений");
	МассивСтрок.Добавить("Справочник");
	
	Родитель = Справочники.ОперацииСтатистикиКонфигурации.ПустаяСсылка();
	МассивРодителей = Новый Массив;
	Для Каждого Элемент Из МассивСтрок Цикл
		Ссылка = Справочники.ОперацииСтатистикиКонфигурации.НайтиПоНаименованию(Элемент, Истина, Родитель);	
		Если Ссылка.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		МассивРодителей.Добавить(Ссылка);
	КонецЦикла;                          
	
	Возврат МассивРодителей;
КонецФункции

Процедура ПересчитатьСтатистикуЗаполненияИнформационныхБаз() Экспорт
	
	// Алгоритм:
	// 1.	Получить список актуальных информационных баз.
	// 2.	Получить конфигурации и их версии по актуальным ИБ. ВТ_КонфигурацииВерсииАктуальныхИБ.
	// 3.	Обходить коллекцию профилей объектов метаданных. 
	// 4.	Для каждого элемента коллекции отобрать данные из таблицы п. 2. ВТ_КонфигурацииВерсииАктуальныхИБПрофиля.
	// 5.	Соединить ВТ_КонфигурацииВерсииАктуальныхИБПрофиля с РС ОперацииСтатистикиКонфигурацииСрезПоследних.
	// 6.	Свернуть таблицу по Конфигурации и Версии, очистить данные в РС СтатистикаЗаполненияИнформационныхБаз.
	// 7.	Анализ данных.
	// 8. 	Запись данных.
	
	ВремяНачалаВмс = ТекущаяУниверсальнаяДатаВМиллисекундах();
		
	Запрос = Новый Запрос;
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
	// 1.	Получить список актуальных информационных баз.
	// 2.	Получить конфигурации и их версии по актуальным ИБ. ВТ_КонфигурацииВерсииАктуальныхИБ.
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ИнформацияИсторияПодробно.ИнформационнаяБаза КАК ИнформационнаяБаза
	                |ПОМЕСТИТЬ ВТ_АктуальныеИБ
	                |ИЗ
	                |	РегистрСведений.ИнформацияИсторияПодробно КАК ИнформацияИсторияПодробно
					|ГДЕ
					|	ИнформацияИсторияПодробно.ПериодЗаписи МЕЖДУ ДОБАВИТЬКДАТЕ(&ПериодЗаписи, ДЕНЬ, -21) И &ПериодЗаписи
	                |
	                |ИНДЕКСИРОВАТЬ ПО
	                |	ИнформационнаяБаза
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ИнформацияСрезПоследних.Конфигурация КАК Конфигурация,
	                |	ИнформацияСрезПоследних.ВерсияКонфигурации КАК ВерсияКонфигурации,
	                |	ИнформацияСрезПоследних.ИнформационнаяБаза КАК ИнформационнаяБаза
	                |ПОМЕСТИТЬ ВТ_КонфигурацииВерсииАктуальныхИБ
	                |ИЗ
	                |	ВТ_АктуальныеИБ КАК ВТ_АктуальныеИБ
	                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИнформацияСрезПоследних КАК ИнформацияСрезПоследних
	                |		ПО ВТ_АктуальныеИБ.ИнформационнаяБаза = ИнформацияСрезПоследних.ИнформационнаяБаза
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ИнформацияСрезПоследних.Конфигурация,
	                |	ИнформацияСрезПоследних.ВерсияКонфигурации,
	                |	ИнформацияСрезПоследних.ИнформационнаяБаза
	                |
	                |ИНДЕКСИРОВАТЬ ПО
	                |	Конфигурация";
	Запрос.УстановитьПараметр("ПериодЗаписи", НачалоДня(ТекущаяДата()));
	Запрос.Выполнить();
	
	// 3.	Обходить коллекцию профилей объектов метаданных. 
	ЗапросПрофилей = Новый Запрос("ВЫБРАТЬ
	                              |	ПрофилиОбъектовМетаданных.Ссылка КАК Ссылка
	                              |ИЗ
	                              |	Справочник.ПрофилиОбъектовМетаданных КАК ПрофилиОбъектовМетаданных
	                              |ГДЕ
	                              |	ПрофилиОбъектовМетаданных.ПометкаУдаления = ЛОЖЬ");
	ВыборкаПрофиль = ЗапросПрофилей.Выполнить().Выбрать();
	ЭлементПользователи = Константы.ОперацияСправочникПользователи.Получить();
	
	Пока ВыборкаПрофиль.Следующий() Цикл
		
		ВремяНачалаПрофиляВмс = ТекущаяУниверсальнаяДатаВМиллисекундах();
		
		ПрофильОбъект = ВыборкаПрофиль.Ссылка.ПолучитьОбъект();	
		
		МассивКонфигураций = ПрофильОбъект.Конфигурации.ВыгрузитьКолонку("Конфигурация");
		МассивОбъектовМетаданных = ПрофильОбъект.ОбъектыМетаданных.ВыгрузитьКолонку("ОбъектМетаданных");
		
		// 4.	Для каждого элемента коллекции отобрать данные из таблицы п. 2. ВТ_КонфигурацииВерсииАктуальныхИБПрофиля.
		// 5.	Соединить ВТ_КонфигурацииВерсииАктуальныхИБПрофиля с РС ОперацииСтатистикиКонфигурацииСрезПоследних.
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВТ_КонфигурацииВерсииАктуальныхИБ.Конфигурация КАК Конфигурация,
		               |	ВТ_КонфигурацииВерсииАктуальныхИБ.ВерсияКонфигурации КАК ВерсияКонфигурации,
		               |	ВТ_КонфигурацииВерсииАктуальныхИБ.ИнформационнаяБаза КАК ИнформационнаяБаза
		               |ПОМЕСТИТЬ ВТ_КонфигурацииВерсииАктуальныхИБПрофиля
		               |ИЗ
		               |	ВТ_КонфигурацииВерсииАктуальныхИБ КАК ВТ_КонфигурацииВерсииАктуальныхИБ
		               |ГДЕ
		               |	ВТ_КонфигурацииВерсииАктуальныхИБ.Конфигурация В(&Конфигурация)
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Конфигурация,
		               |	ВерсияКонфигурации
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_КонфигурацииВерсииАктуальныхИБПрофиля.Конфигурация КАК Конфигурация,
		               |	ВТ_КонфигурацииВерсииАктуальныхИБПрофиля.ВерсияКонфигурации КАК ВерсияКонфигурации
		               |ИЗ
		               |	ВТ_КонфигурацииВерсииАктуальныхИБПрофиля КАК ВТ_КонфигурацииВерсииАктуальныхИБПрофиля
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_КонфигурацииВерсииАктуальныхИБПрофиля.Конфигурация,
		               |	ВТ_КонфигурацииВерсииАктуальныхИБПрофиля.ВерсияКонфигурации
		               |;";
		Запрос.УстановитьПараметр("Конфигурация",МассивКонфигураций);
		ВыборкаВерсииКонфигураций = Запрос.Выполнить().Выбрать();
		Пока ВыборкаВерсииКонфигураций.Следующий() Цикл
			
			ВремяНачалаВерсииВмс = ТекущаяУниверсальнаяДатаВМиллисекундах();
			
			// 6.	Свернуть таблицу по Конфигурации и Версии, очистить данные в РС СтатистикаЗаполненияИнформационныхБаз.
			НаборЗаписей = РегистрыСведений.СтатистикаЗаполненияИнформационныхБаз.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Конфигурация.Установить(ВыборкаВерсииКонфигураций.Конфигурация);
			НаборЗаписей.Отбор.ВерсияКонфигурации.Установить(ВыборкаВерсииКонфигураций.ВерсияКонфигурации);
			НаборЗаписей.Записать();
			
			Запрос.Текст = "ВЫБРАТЬ
			               |	ВТ_КонфигурацииВерсииАктуальныхИБПрофиля.Конфигурация КАК Конфигурация,
			               |	ВТ_КонфигурацииВерсииАктуальныхИБПрофиля.ВерсияКонфигурации КАК ВерсияКонфигурации,
			               |	ВТ_КонфигурацииВерсииАктуальныхИБПрофиля.ИнформационнаяБаза КАК ИнформационнаяБаза
			               |ПОМЕСТИТЬ ВТ_ИнформационныеБазыВерсииКонфигурации
			               |ИЗ
			               |	ВТ_КонфигурацииВерсииАктуальныхИБПрофиля КАК ВТ_КонфигурацииВерсииАктуальныхИБПрофиля
			               |ГДЕ
			               |	ВТ_КонфигурацииВерсииАктуальныхИБПрофиля.Конфигурация = &Конфигурация
			               |	И ВТ_КонфигурацииВерсииАктуальныхИБПрофиля.ВерсияКонфигурации = &ВерсияКонфигурации
			               |
			               |ИНДЕКСИРОВАТЬ ПО
			               |	ИнформационнаяБаза
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ВТ_ИнформационныеБазыВерсииКонфигурации.Конфигурация КАК Конфигурация,
			               |	ВТ_ИнформационныеБазыВерсииКонфигурации.ВерсияКонфигурации КАК ВерсияКонфигурации,
			               |	ОперацииСтатистикиКонфигурацииСрезПоследних.ОперацияСтатистикиКонфигурации КАК ОбъектМетаданных,
			               |	ОперацииСтатистикиКонфигурацииСрезПоследних.ИнформационнаяБаза КАК ИнформационнаяБаза,
			               |	ОперацииСтатистикиКонфигурацииСрезПоследних.Значение КАК Значение
			               |ПОМЕСТИТЬ Статистика
			               |ИЗ
			               |	ВТ_ИнформационныеБазыВерсииКонфигурации КАК ВТ_ИнформационныеБазыВерсииКонфигурации
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОперацииСтатистикиКонфигурацииСрезПоследних КАК ОперацииСтатистикиКонфигурацииСрезПоследних
			               |		ПО ВТ_ИнформационныеБазыВерсииКонфигурации.ИнформационнаяБаза = ОперацииСтатистикиКонфигурацииСрезПоследних.ИнформационнаяБаза
			               |ГДЕ
			               |	ОперацииСтатистикиКонфигурацииСрезПоследних.ОперацияСтатистикиКонфигурации В(&ОбъектыМетаданных)
			               |
			               |ИНДЕКСИРОВАТЬ ПО
			               |	ОбъектМетаданных
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ ВТ_ИнформационныеБазыВерсииКонфигурации";
			Запрос.УстановитьПараметр("Конфигурация",ВыборкаВерсииКонфигураций.Конфигурация);
			Запрос.УстановитьПараметр("ВерсияКонфигурации",ВыборкаВерсииКонфигураций.ВерсияКонфигурации);
			Запрос.УстановитьПараметр("ОбъектыМетаданных",МассивОбъектовМетаданных);
			Запрос.Выполнить();
			
			Для Каждого ОбъектМетаданных Из МассивОбъектовМетаданных Цикл
				
				Запрос.Текст = "ВЫБРАТЬ
			               |	Статистика.Конфигурация КАК Конфигурация,
			               |	Статистика.ВерсияКонфигурации КАК ВерсияКонфигурации,
			               |	Статистика.ОбъектМетаданных КАК ОбъектМетаданных,
			               |	Статистика.ИнформационнаяБаза КАК ИнформационнаяБаза,
			               |	Статистика.Значение КАК Значение
			               |ИЗ
			               |	Статистика КАК Статистика
			               |ГДЕ
			               |	Статистика.ОбъектМетаданных = &ОбъектМетаданных";
				Запрос.УстановитьПараметр("ОбъектМетаданных", ОбъектМетаданных);
				
				ТаблицаОбъектМетаданных	= Запрос.Выполнить().Выгрузить();
				ВсегоЗаписей = ТаблицаОбъектМетаданных.Итог("Значение");
				
				Если ВсегоЗаписей = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				// 7.	Анализ данных.
				РезультатАнализа = РезультатАнализа(ТаблицаОбъектМетаданных);
				ПоказателиАнализа = РезультатАнализа.НепрерывныеПоля.Значение;
								
				// 8. 	Запись данных
				МенеджерЗаписи = РегистрыСведений.СтатистикаЗаполненияИнформационныхБаз.СоздатьМенеджерЗаписи();
				МенеджерЗаписи.Конфигурация = ВыборкаВерсииКонфигураций.Конфигурация;
				МенеджерЗаписи.ВерсияКонфигурации = ВыборкаВерсииКонфигураций.ВерсияКонфигурации;
				МенеджерЗаписи.ОбъектМетаданных = ОбъектМетаданных;
				МенеджерЗаписи.ВсегоЗаписей = ВсегоЗаписей;
				МенеджерЗаписи.СреднееКоличествоЗаписей = ПоказателиАнализа.Среднее;
				МенеджерЗаписи.КоличествоИБ = ПоказателиАнализа.Количество;
				МенеджерЗаписи.МинимумЗаписей = ПоказателиАнализа.Минимум;
				МенеджерЗаписи.МаксимумЗаписей = ПоказателиАнализа.Максимум;
				МенеджерЗаписи.Медиана = ПоказателиАнализа.Медиана;
				Если ОбъектМетаданных = ЭлементПользователи Тогда
					МенеджерЗаписи.СреднееКоличествоПользователей = ПоказателиАнализа.Среднее;
				КонецЕсли;
				МенеджерЗаписи.Записать(Ложь);
				
			КонецЦикла;
			
			Запрос.Текст = "УНИЧТОЖИТЬ Статистика";
			Запрос.Выполнить();
			
			Общий.ЗаписатьВнутреннийЗамерПроизводительности("ПересчетСтатистикиЗаполненияИБ по версии конфигурации " + Строка(ВыборкаВерсииКонфигураций.Конфигурация), ВремяНачалаВерсииВмс, 3600, Ложь,, Истина);
			
		КонецЦикла;
		
		Запрос.Текст = "УНИЧТОЖИТЬ ВТ_КонфигурацииВерсииАктуальныхИБПрофиля";
		Запрос.Выполнить();
		
		Общий.ЗаписатьВнутреннийЗамерПроизводительности("ПересчетСтатистикиЗаполненияИБ " + Строка(ВыборкаПрофиль.Ссылка), ВремяНачалаПрофиляВмс, 3600, Ложь,, Истина);
	КонецЦикла;
	
	// 9. Удаление устаревших данных
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_КонфигурацииВерсииАктуальныхИБ.Конфигурация КАК Конфигурация,
	               |	ВТ_КонфигурацииВерсииАктуальныхИБ.ВерсияКонфигурации КАК ВерсияКонфигурации
	               |ПОМЕСТИТЬ ВТ_АктуальныеВерсииКонфигураций
	               |ИЗ
	               |	ВТ_КонфигурацииВерсииАктуальныхИБ КАК ВТ_КонфигурацииВерсииАктуальныхИБ
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Конфигурация,
	               |	ВерсияКонфигурации
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СтатистикаЗаполненияИнформационныхБаз.Конфигурация КАК Конфигурация,
	               |	СтатистикаЗаполненияИнформационныхБаз.ВерсияКонфигурации КАК ВерсияКонфигурации
	               |ИЗ
	               |	РегистрСведений.СтатистикаЗаполненияИнформационныхБаз КАК СтатистикаЗаполненияИнформационныхБаз
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АктуальныеВерсииКонфигураций КАК ВТ_АктуальныеВерсииКонфигураций
	               |		ПО СтатистикаЗаполненияИнформационныхБаз.Конфигурация = ВТ_АктуальныеВерсииКонфигураций.Конфигурация
	               |			И СтатистикаЗаполненияИнформационныхБаз.ВерсияКонфигурации = ВТ_АктуальныеВерсииКонфигураций.ВерсияКонфигурации
	               |ГДЕ
	               |	ВТ_АктуальныеВерсииКонфигураций.ВерсияКонфигурации ЕСТЬ NULL";
	ВыборкаКУдалению = Запрос.Выполнить().Выбрать();
	Пока ВыборкаКУдалению.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.СтатистикаЗаполненияИнформационныхБаз.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Конфигурация.Установить(ВыборкаКУдалению.Конфигурация);
		НаборЗаписей.Отбор.ВерсияКонфигурации.Установить(ВыборкаКУдалению.ВерсияКонфигурации);
		НаборЗаписей.Записать();	
	КонецЦикла;
	
	Общий.ЗаписатьВнутреннийЗамерПроизводительности("ПересчетСтатистикиЗаполненияИБ", ВремяНачалаВмс, 3600, Ложь,, Истина);
	
КонецПроцедуры

Функция РезультатАнализа(ИсточникДанных)
	АнализДанных = Новый АнализДанных;
	АнализДанных.ТипАнализа = Тип("АнализДанныхОбщаяСтатистика");
	АнализДанных.ИсточникДанных = ИсточникДанных;
	
	РезультатАнализа = АнализДанных.Выполнить();
	Возврат РезультатАнализа;
КонецФункции

#КонецЕсли