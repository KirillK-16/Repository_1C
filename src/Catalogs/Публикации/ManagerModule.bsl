#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Создает публикацию.
//
// Параметры:
//  ПараметрыСоздания - Структура - структура создания с ключами:
//                                   — Наименование                  - Строка - максимальная длина 100.
//                                   — ПлощадкаЭксплуатации          - СправочникСсылка.ПлощадкиЭксплуатации.
//                                   — АдресРесурса                  - Строка.
//                                   — ВыполнятьКонтроль             - Булево.
//                                   — ЗапретитьПеренаправление      - Булево.
//                                   — Логин                         - Строка.
//                                   — Пароль                        - Строка.
//                                   — Ответсвенный                  - СправочникСсылка.Пользователи.
//                                   — Таймаут                       - Число, секунды.
//                                   — ПериодКонтроля                - Число, секунды.
//                                   — МинимальныйПроцентДоступности - Число, секунды.
//                                   — ПериодичностьКонтроля         - Число, секунды
//
// Возвращаемое значение:
//   СправочникСсылка.КонтрольныеПроцедуры - ссылка на созданный элемент.
//
Функция СоздатьПубликацию(ПараметрыСоздания) Экспорт
    
    Публикация = Справочники.Публикации.СоздатьЭлемент();
    Публикация.Наименование = ПараметрыСоздания.Наименование;
    Публикация.ПлощадкаЭксплуатации = ПараметрыСоздания.ПлощадкаЭксплуатации;
    Публикация.АдресРесурса = ПараметрыСоздания.АдресРесурса;
    Публикация.ВыполнятьКонтроль = ПараметрыСоздания.ВыполнятьКонтроль;
    Публикация.ЗапретитьПеренаправление = ПараметрыСоздания.ЗапретитьПеренаправление;
    Публикация.Ответственный = ПараметрыСоздания.Ответсвенный;
    Публикация.Таймаут = ПараметрыСоздания.Таймаут;
    Публикация.ПериодКонтроля = ПараметрыСоздания.ПериодКонтроля;
    Публикация.МинимальныйПроцентДоступности = ПараметрыСоздания.МинимальныйПроцентДоступности;
    Публикация.ПериодичностьКонтроля = ПараметрыСоздания.ПериодичностьКонтроля;
    Публикация.ДопустимоНетДанных = ПараметрыСоздания.ДопустимоНетДанных;
    
    Публикация.Записать();
    
    ДанныеХранилища = Новый Структура("Логин, Пароль", ПараметрыСоздания.Логин, ПараметрыСоздания.Пароль);
    УстановитьПривилегированныйРежим(Истина);
    РегистрыСведений.БезопасноеХранилище.ЗаписатьДанные(Публикация.Ссылка, ДанныеХранилища);
    УстановитьПривилегированныйРежим(Ложь);
    
КонецФункции

Процедура ЗаписатьНастройки(Ссылка, Настройки) Экспорт
    
    УстановитьПривилегированныйРежим(Истина);
    ДанныеАутентификации = РегистрыСведений.БезопасноеХранилище.ПолучитьДанные(Ссылка);
    УстановитьПривилегированныйРежим(Ложь);
    
    Если ДанныеАутентификации = Неопределено Тогда
        ДанныеАутентификации = Новый Структура("Логин, Пароль", "", "");
    КонецЕсли;
        
    СпрОбъект = Ссылка.ПолучитьОбъект();
        
    Для Каждого ТекЭлемент Из Настройки Цикл
        
        Если ТекЭлемент.Ключ = "Логин" Тогда
            ДанныеАутентификации.Логин = ТекЭлемент.Значение;
        ИначеЕсли ТекЭлемент.Ключ = "Пароль" Тогда
            ДанныеАутентификации.Пароль = ТекЭлемент.Значение;
        Иначе
            СпрОбъект[ТекЭлемент.Ключ] = ТекЭлемент.Значение;
        КонецЕсли;
        
    КонецЦикла;
    
    СпрОбъект.Записать();
    
    УстановитьПривилегированныйРежим(Истина);
    РегистрыСведений.БезопасноеХранилище.ЗаписатьДанные(Ссылка, ДанныеАутентификации);
    УстановитьПривилегированныйРежим(Ложь);    
    
КонецПроцедуры


Функция ПрочитатьНастройкиПоУмолчанию() Экспорт
    
    НастройкиПоУмолчаниюОбщие = Константы.НастройкиПоУмолчаниюОбщие.Получить().Получить();
    
    Если НастройкиПоУмолчаниюОбщие <> Неопределено И НастройкиПоУмолчаниюОбщие.Свойство("Публикации") Тогда
                
        НастройкиПубликации = НастройкиПоУмолчаниюОбщие.Публикации;
        
    Иначе
        
        НастройкиПубликации = Новый Структура;
        НастройкиПубликации.Вставить("Логин", "");
        НастройкиПубликации.Вставить("Пароль", "");
        НастройкиПубликации.Вставить("ВыполнятьКонтроль", Истина);
        НастройкиПубликации.Вставить("ЗапретитьПеренаправление", Ложь);
        НастройкиПубликации.Вставить("Таймаут", 8);
        НастройкиПубликации.Вставить("ПериодКонтроля", 120);
        НастройкиПубликации.Вставить("МинимальныйПроцентДоступности", 90);
        НастройкиПубликации.Вставить("ДопустимоНетДанных", 120);
        НастройкиПубликации.Вставить("ПроверятьТелоОтвета", Ложь);
            
    КонецЕсли;
    
    Возврат НастройкиПубликации;
           
КонецФункции

Процедура ЗаписатьНастройкиПоУмолчанию(Настройки) Экспорт
    
    НастройкиПоУмолчаниюОбщие = Константы.НастройкиПоУмолчаниюОбщие.Получить().Получить();
    
    Если НастройкиПоУмолчаниюОбщие = Неопределено Тогда
        НастройкиПоУмолчаниюОбщие = Новый Структура;
    КонецЕсли;
    
    НастройкиПоУмолчаниюОбщие.Вставить("Публикации", Настройки);
    
    Константы.НастройкиПоУмолчаниюОбщие.Установить(Новый ХранилищеЗначения(НастройкиПоУмолчаниюОбщие));
    
КонецПроцедуры

#КонецОбласти

#КонецЕсли
    