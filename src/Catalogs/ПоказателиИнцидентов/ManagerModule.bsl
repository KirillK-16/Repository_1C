#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Создает новый показатель инцидента у которого тип реквизита "Показатель" равен
// типу СправочникСсылка.ПоказателиСчетчиков
//  Параметры:
//    Владелец  - СправочникСсылка.ОбнаружениеИнцидентов - владелец нового элемента
//    Счетчик   - СправочникСсылка.ГруппыСчетчиков - счетчик для создания показателя
//    Параметры - Структура                         - структура создания показателя с ключами:
//                                                    Функция                        - ПеречислениеСсылка.ФункцииОповещений
//                                                    ИнтервалРасчета                - Число(10,0)
//                                                    ЕдиницаВремениИнтервалаРасчета - ПеречислениеСсылка.ЕдиницыВремени
//                                                    ВидСравнения                   - ПеречислениеСсылка.ВидыСравненияПоказателейОповещения
//                                                    Порог                          - Число(15,4)
//                                                    ФорматнаяСтрокаЗначения        - Строка
//                                                    Аналитика                      - ПеречислениеСсылка.АналитикаСчетчиков
//                                                    Периодичность                  - ПеречислениеСсылка.ПериодичностьСчетчиков
//                                                    ПорогДо                        - Число(15,4), обязателен, если ВидСравнения = Между
//                                                    ПорогВПроцентах                - Булево, обязателен, если ВидСравнения = Изменился
//                                                    СмещениеБазы                   - ПеречислениеСсылка.ВариантыСмещенияБазы, обязателен,
//                                                                                     если ВидСравнения = Изменился
//
Функция СоздатьЭлементПоСчетчику(Владелец, Счетчик, Параметры) Экспорт
    
    ПоказательИнцидента = Справочники.ПоказателиИнцидентов.СоздатьЭлемент();
    ПоказательИнцидента.Владелец = Владелец;
    ПоказательИнцидента.УстановитьСсылкуНового(Справочники.ПоказателиИнцидентов.ПолучитьСсылку());
    ПоказательИнцидента.Функция = Параметры.Функция;
    
    ПараметрыПоказателя = Новый Структура;
    ПараметрыПоказателя.Вставить("Аналитика", Параметры.Аналитика);
    ПараметрыПоказателя.Вставить("Периодичность", Параметры.Периодичность);
    ПараметрыПоказателя.Вставить("РегулярноеВыражениеПоиска", Параметры.РегулярноеВыражениеПоиска);
    ПараметрыПоказателя.Вставить("РегулярноеВыражениеЗамены", Параметры.РегулярноеВыражениеЗамены);
    
    Показатель = Справочники.ПоказателиСчетчиков.СоздатьЭлементПоСчетчику(ПоказательИнцидента.ПолучитьСсылкуНового(), Счетчик, ПараметрыПоказателя);
    
    ПоказательИнцидента.Показатель = Показатель;
    
    ПоказательИнцидента.ИнтервалРасчета = Параметры.ИнтервалРасчета;
    ПоказательИнцидента.ЕдиницаВремениИнтервалаРасчета = Параметры.ЕдиницаВремениИнтервалаРасчета;
    ПоказательИнцидента.ВидСравнения = Параметры.ВидСравнения;
    ПоказательИнцидента.Порог = Параметры.Порог;
    ПоказательИнцидента.ФорматнаяСтрокаЗначения = Параметры.ФорматнаяСтрокаЗначения;
    
    Если Параметры.ВидСравнения = Перечисления.ВидыСравненияПоказателейОповещения.Между Тогда
        ПоказательИнцидента.ПорогДо = Параметры.ПорогДо;
    КонецЕсли;
    
    Если Параметры.ВидСравнения = Перечисления.ВидыСравненияПоказателейОповещения.Изменился Тогда
        ПоказательИнцидента.ПорогВПроцентах = Параметры.ПорогВПроцентах;
        ПоказательИнцидента.СмещениеБазы = Параметры.СмещениеБазы;
    КонецЕсли;
    
    
    ПоказательИнцидента.Записать();
    Возврат ПоказательИнцидента;
    
КонецФункции

Функция СоздатьЭлементXML(Параметры) Экспорт
    
    НовыйПоказатель = Справочники.ПоказателиИнцидентов.СоздатьЭлемент();
	НовыйПоказатель.УстановитьСсылкуНового(Справочники.ПоказателиИнцидентов.ПолучитьСсылку());
	НовыйПоказатель.Владелец = Параметры.Владелец;
	НовыйПоказатель.Функция = Параметры.Функция;
	НовыйПоказатель.ИнтервалРасчета = Параметры.ИнтервалРасчета;
	НовыйПоказатель.ЕдиницаВремениИнтервалаРасчета = Параметры.ЕдиницаВремениИнтервалаРасчета;
	НовыйПоказатель.ФорматнаяСтрокаЗначения = Параметры.ФорматнаяСтрокаЗначения;
	НовыйПоказатель.ВидСравнения = Параметры.ВидСравнения;
	НовыйПоказатель.Порог = Параметры.Порог;
	НовыйПоказатель.ПорогВПроцентах = Параметры.ПорогВПроцентах;
	НовыйПоказатель.СравниватьСПрошлым = Параметры.СравниватьСПрошлым;
	НовыйПоказатель.СмещениеБазы = Параметры.СмещениеБазы;
	
	Поток = Новый ЗаписьXML();
	Поток.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(Поток, НовыйПоказатель);
	
	ПоказательРезультат = Новый Соответствие;
	ПоказательРезультат.Вставить("СсылкаПоказательИнцидента", НовыйПоказатель.ПолучитьСсылкуНового());
	ПоказательРезультат.Вставить("ПоказательИнцидентаXML", Поток.Закрыть());
	
	Возврат ПоказательРезультат;
    
КонецФункции

#КонецОбласти
    
#Область ПредопределенныеПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)

	Попытка
		Представление = Данные.Ссылка.Показатель;
		СтандартнаяОбработка = Ложь;
	Исключение
		СтандартнаяОбработка = Истина;
	КонецПопытки;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли