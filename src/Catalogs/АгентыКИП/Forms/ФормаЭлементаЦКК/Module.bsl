
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    ЭтотОбъект.КомандыАгенту.Параметры.УстановитьЗначениеПараметра("АгентКИП", Объект.Ссылка);
    
    ЭтотОбъект.ДополнительныеРеквизиты = Справочники.АгентыКИПДополнительныеРеквизиты.ПолучитьСсылкуПоВладельцу(Объект.Ссылка);
    ЭтотОбъект.КонтрольДоступностиИнформационныхБаз = ЭтотОбъект.ДополнительныеРеквизиты.КонтрольДоступностиИнформационныхБаз;
    ЭтотОбъект.ПериодКонтроляИнформационнойБазы = ЭтотОбъект.ДополнительныеРеквизиты.ПериодКонтроляИнформационнойБазы;
    ЭтотОбъект.МинимальныйПроцентДоступностиИнформационнойБазы = ЭтотОбъект.ДополнительныеРеквизиты.МинимальныйПроцентДоступностиИнформационнойБазы;
    ЭтотОбъект.РазмерБуфераСчетчиковПроизводительности = ЭтотОбъект.ДополнительныеРеквизиты.РазмерБуфераСчетчиковПроизводительности;
    ЭтотОбъект.ИнформационныеБазы.Загрузить(ЭтотОбъект.ДополнительныеРеквизиты.ИнформационныеБазы.Выгрузить(,"ИнформационнаяБаза"));
    ЭтотОбъект.МониторингКластеров = ЭтотОбъект.ДополнительныеРеквизиты.МониторингКластеров;
        
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
    
    ПараметрыЗаписи.Вставить("ИнформационныеБазыХешБыл", ЭтотОбъект.ДополнительныеРеквизиты.ИнформационныеБазыХеш);
    
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
    
    ДопРеквизитыОбъект = ЭтотОбъект.ДополнительныеРеквизиты.ПолучитьОбъект();
    РазмерБуфераСчетчиковПроизводительностиБыл = ДопРеквизитыОбъект.РазмерБуфераСчетчиковПроизводительности;    
    
    ДопРеквизитыОбъект.КонтрольДоступностиИнформационныхБаз = ЭтотОбъект.КонтрольДоступностиИнформационныхБаз;
    ДопРеквизитыОбъект.ПериодКонтроляИнформационнойБазы = ЭтотОбъект.ПериодКонтроляИнформационнойБазы;
    ДопРеквизитыОбъект.МинимальныйПроцентДоступностиИнформационнойБазы = ЭтотОбъект.МинимальныйПроцентДоступностиИнформационнойБазы;
    ДопРеквизитыОбъект.РазмерБуфераСчетчиковПроизводительности = ЭтотОбъект.РазмерБуфераСчетчиковПроизводительности;
    ДопРеквизитыОбъект.ИнформационныеБазы.Загрузить(ЭтотОбъект.ИнформационныеБазы.Выгрузить());
    ДопРеквизитыОбъект.МониторингКластеров = ЭтотОбъект.МониторингКластеров;
        
    ДопРеквизитыОбъект.ДополнительныеСвойства.Вставить("ИнформационныеБазыХешБыл", ПараметрыЗаписи.ИнформационныеБазыХешБыл);
    ДопРеквизитыОбъект.ДополнительныеСвойства.Вставить("РазмерБуфераСчетчиковПроизводительностиБыл", РазмерБуфераСчетчиковПроизводительностиБыл);
        
    ДопРеквизитыОбъект.Записать();
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПерейтиКОборудованию(Команда)
    
    ОборудованиеСсылка = НайтиОборудование(Объект.Ссылка);
    Если ЗначениеЗаполнено(ОборудованиеСсылка) Тогда
        ПараметрыОткрытия = Новый Структура("Ключ", ОборудованиеСсылка);
        ОткрытьФорму("Справочник.Оборудование.Форма.ФормаЭлемента", ПараметрыОткрытия);
    Иначе
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не нашел оборудование агента!", Объект.Ссылка);
    КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКРабочемуСерверу(Команда)
    
    РабочийСервер1С = НайтиРабочийСервер1С(Объект.Ссылка);
    Если ЗначениеЗаполнено(РабочийСервер1С) Тогда
        ПараметрыОткрытия = Новый Структура("Ключ", РабочийСервер1С);
        ОткрытьФорму("Справочник.ОбъектыКонтроля.Форма.ФормаЭлемента", ПараметрыОткрытия);
    Иначе
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не нашел рабочий сервер 1С агента!", Объект.Ссылка);
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКонтрольУстойчивости(Команда)
    
    КонтрольУстойчивости = НайтиКонтрольУстойчивости(Объект.Ссылка);
    Если ЗначениеЗаполнено(КонтрольУстойчивости) Тогда
        ПараметрыОткрытия = Новый Структура("Ключ", КонтрольУстойчивости);
        ОткрытьФорму("Справочник.КонтрольныеПроцедуры.Форма.ФормаЭлементаСборДампов", ПараметрыОткрытия);
    Иначе
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не нашел контроль устойчивости агента!", Объект.Ссылка);
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция НайтиОборудование(АгентКИП)
    
    Возврат Справочники.Оборудование.НайтиПоАгенту(АгентКИП, Истина);
    
КонецФункции

&НаСервереБезКонтекста
Функция НайтиРабочийСервер1С(АгентКИП)
    
    РабочийСервер1С = Неопределено;
    
    ОборудованиеСсылка = Справочники.Оборудование.НайтиПоАгенту(АгентКИП, Истина);
    Если ЗначениеЗаполнено(ОборудованиеСсылка) Тогда
        РабочийСервер1С = Справочники.ОбъектыКонтроля.НайтиРабочийСервер1сОборудования(ОборудованиеСсылка);
    Иначе
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не нашел оборудование агента!");
    КонецЕсли;
    
    Возврат РабочийСервер1С;
    
КонецФункции

&НаСервереБезКонтекста
Функция НайтиКонтрольУстойчивости(АгентКИП)
    
    КонтрольУстойчивости = Неопределено;
    
    РабочийСервер1С = НайтиРабочийСервер1С(АгентКИП);
    
    Если ЗначениеЗаполнено(РабочийСервер1С) Тогда
        КонтрольУстойчивости = Справочники.КонтрольныеПроцедуры.ПолучитьКонтрольнуюПроцедуруПоОбъектуКонтроля(РабочийСервер1С, Справочники.ВидыКонтрольныхПроцедур.КонтрольУстойчивостиСистемы());
    Иначе
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не нашел рабочий сервер 1с агента!");
    КонецЕсли;
    
    Возврат КонтрольУстойчивости;
        
КонецФункции

&НаКлиенте
Функция ДобавитьОтступы(Знач Строка)
    
    #Если ТонкийКлиент Тогда
        
    ЧтениеJSON = Новый ЧтениеJSON();
    ЧтениеJSON.УстановитьСтроку(Строка);
    Попытка
        КомандаСоответствие = ПрочитатьJSON(ЧтениеJSON, Истина);
        ЗаписьJSON = Новый ЗаписьJSON();
        ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, "  "));
        ЗаписатьJSON(ЗаписьJSON, КомандаСоответствие);
        Возврат ЗаписьJSON.Закрыть();
    Исключение
        Возврат Строка;
    КонецПопытки;
    
    #КонецЕсли

КонецФункции

&НаСервереБезКонтекста
Функция ДобавитьОтступыНаСервере(Знач Строка)
    
    ЧтениеJSON = Новый ЧтениеJSON();
    ЧтениеJSON.УстановитьСтроку(Строка);
    Попытка
        КомандаСоответствие = ПрочитатьJSON(ЧтениеJSON, Истина);
        ЗаписьJSON = Новый ЗаписьJSON();
        ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, "  "));
        ЗаписатьJSON(ЗаписьJSON, КомандаСоответствие);
        Возврат ЗаписьJSON.Закрыть();
    Исключение
        Возврат Строка;
    КонецПопытки;
    
КонецФункции

&НаКлиенте
Процедура КомандыАгентуПриАктивизацииСтроки(Элемент)
    ПодключитьОбработчикОжидания("КомандыАгентуПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандыАгентуПриАктивизацииСтрокиОбработчикОжидания() Экспорт
    
    ТекущиеДанные = ЭтотОбъект.Элементы.КомандыАгенту.ТекущиеДанные;
    
    Если ТекущиеДанные <> Неопределено Тогда
        #Если ТонкийКлиент Тогда
            ЭтотОбъект.ТекущаяКоманда = ДобавитьОтступы(ТекущиеДанные.Команда);
            Если ЗначениеЗаполнено(ТекущиеДанные.РезультатВыполнения) Тогда
                ЭтотОбъект.РезультатВыполненияКоманды = ДобавитьОтступы(ТекущиеДанные.РезультатВыполнения);
            Иначе
                ЭтотОбъект.РезультатВыполненияКоманды = "";                
            КонецЕсли;
        #ИначеЕсли ВебКлиент Тогда
            ЭтотОбъект.ТекущаяКоманда = ДобавитьОтступыНаСервере(ТекущиеДанные.Команда);
            Если ЗначениеЗаполнено(ТекущиеДанные.РезультатВыполнения) Тогда
                ЭтотОбъект.РезультатВыполненияКоманды = ДобавитьОтступыНаСервере(ТекущиеДанные.РезультатВыполнения);
            Иначе
                ЭтотОбъект.РезультатВыполненияКоманды = "";
            КонецЕсли;
        #КонецЕсли
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти
