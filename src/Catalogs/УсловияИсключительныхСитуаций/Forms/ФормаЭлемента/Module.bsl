// Параметры опроса фонового задания
&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

// Признак того, что запись была инициирована кнопкой Записать, а не Записать и закрыть или вызвана при закрытии формы
&НаКлиенте
Перем ПродолжитьРедактирование;

// Признак того, что записываемый объект - новый
&НаКлиенте
Перем ЭтоНовый;

&НаКлиенте
Перем УдаляемыеИсключения;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = Истина;
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПродолжитьРедактирование = ПараметрыЗаписи.Свойство("ПродолжитьРедактирование");
	ЭтоНовый = Не ЗначениеЗаполнено(Объект.Ссылка);
	
	УдаляемыеИсключения = Неопределено;
	ПараметрыФормы = Новый Структура("УсловиеИсключения", Объект);
	ОткрытьФорму("Справочник.ИсключительныеСитуации.Форма.СмежныеИсключения", ПараметрыФормы, ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	Если УдаляемыеИсключения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ЗаписатьДанныеНаСервере(УдаляемыеИсключения);
	Если НЕ Результат.ЗаданиеВыполнено Тогда
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресХранилища;
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтотОбъект, ИдентификаторЗадания);
	Иначе
		ЗавершитьЗапись();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)

	УдаляемыеИсключения = ВыбранноеЗначение;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ФормаЗаписать(Команда)
	Записать(Новый Структура("ПродолжитьРедактирование", Истина));
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ЗаписатьДанныеНаСервере(Знач УдаляемыеИсключения)
	
	Результат = Новый Структура("ЗаданиеВыполнено", Истина);
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, ТекущийОбъект);
	ОбъектСтрокой = ЗаписьXML.Закрыть();
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ЗаписываемыйОбъект", ОбъектСтрокой);
	ПараметрыЗадания.Вставить("УдаляемыеИсключения", УдаляемыеИсключения);
	
	Если Общий.ИнформационнаяБазаФайловая() Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		Справочники.УсловияИсключительныхСитуаций.ЗаписатьЭлемент(ПараметрыЗадания, АдресХранилища);
	Иначе
		НаименованиеЗадания = НСтр("ru = 'Выгрузка пользователей ИБ'");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор,
			"Справочники.УсловияИсключительныхСитуаций.ЗаписатьЭлемент", 
			ПараметрыЗадания);
			
		АдресХранилища = Результат.АдресХранилища;
	КонецЕсли;

	Если Результат.ЗаданиеВыполнено Тогда
		ЗагрузитьПодготовленныеДанные();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
				ЗагрузитьПодготовленныеДанные();
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
				ЗавершитьЗапись();
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания", 
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
					Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		Сообщить(ПредставлениеОшибки);
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные()
	
	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);
	ЗначениеВРеквизитФормы(РезультатВыполнения.ПолучитьОбъект(), "Объект");
	Прочитать();
	ИдентификаторЗадания = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗапись()
	
	Модифицированность = Ложь;
	ОповеститьОбИзменении(Объект.Ссылка);
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ТехнологическийЖурнал"));
	ОповеститьОбИзменении(Тип("СправочникСсылка.ИсключительныеСитуации"));
	
	ПоказатьОповещениеПользователя(?(ЭтоНовый, НСтр("ru = 'Создание'"), НСтр("ru = 'Изменение'")), 
		ПолучитьНавигационнуюСсылку(Объект.Ссылка), Объект.Наименование, БиблиотекаКартинок.Информация32);
		
	Если Не ПродолжитьРедактирование Тогда
		Закрыть();
	КонецЕсли;
		
КонецПроцедуры

