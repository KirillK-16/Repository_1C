
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура РассчитатьПроизводительностьПлатформыПоПрофилю(ПрофильКлючевыхОпераций) Экспорт
	
	// 1. Получить дату, по которую рассчитан профиль.
	// 2. Определить период расчета.
	// 3. Повторять действия, пока дата окончания расчета меньше текущей даты.
	// 4. Получить и проанализировать данные.
	// 5. Записать данные в регистр.
	// 6. Определить период расчета.
	
	ТекущаяДата = НачалоДня(ТекущаяДата());
	
	// 1. Получить дату, по которую рассчитан профиль.
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НастройкиРасчетаПроизводительностиПлатформы.ПрофильКлючевыхОпераций КАК ПрофильКлючевыхОпераций,
	                      |	НастройкиРасчетаПроизводительностиПлатформы.РассчитанПо КАК РассчитанПо,
	                      |	НастройкиРасчетаПроизводительностиПлатформы.ГлубинаРасчета КАК ГлубинаРасчета
	                      |ИЗ
	                      |	РегистрСведений.НастройкиРасчетаПроизводительностиПлатформы КАК НастройкиРасчетаПроизводительностиПлатформы
	                      |ГДЕ
	                      |	НастройкиРасчетаПроизводительностиПлатформы.ПрофильКлючевыхОпераций = &ПрофильКлючевыхОпераций");
	Запрос.УстановитьПараметр("ПрофильКлючевыхОпераций", ПрофильКлючевыхОпераций);
	ВыборкаНастройка = Запрос.Выполнить().Выбрать();
	Если Не ВыборкаНастройка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	РассчитанПо = ВыборкаНастройка.РассчитанПо;
	ГлубинаРасчета = ВыборкаНастройка.ГлубинаРасчета;
	Если ВыборкаНастройка.РассчитанПо >= ТекущаяДата Тогда
		Возврат;
	КонецЕсли;
			
	// 2. Определить период расчета.
	ПериодРасчета = ПериодРасчета(РассчитанПо, ГлубинаРасчета);
	ПустаяВерсия = Справочники.ВерсииПлатформыЦентрМониторинга.НайтиПоНаименованию("0.0.0.0", Истина);
	РежимыРаботыКонфигурации = Новый Массив;
    РежимыРаботыКонфигурации.Добавить(Перечисления.РежимРаботыКонфигурации.F);
    РежимыРаботыКонфигурации.Добавить(Перечисления.РежимРаботыКонфигурации.S);
	// 3. Повторять действия, пока дата окончания расчета меньше текущей даты.
	
	Запрос = Новый Запрос;
    МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;       
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
    Справочники.ПрофилиКлючевыхОпераций.ДобавитьВременнуюТаблицуКлючевыхОпераций(ПрофильКлючевыхОпераций, Запрос, "КлючевыеОперации");	
	Запрос.Выполнить();
	
	Пока ПериодРасчета.ДатаОкончания < ТекущаяДата Цикл  
		// 4. Получить и проанализировать данные.
		Запрос.Текст = ТекстЗапросаАнализа(ПериодРасчета.ДатаНачала, ПериодРасчета.ДатаОкончания);
		Запрос.УстановитьПараметр("ДатаНачала", ПериодРасчета.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", ПериодРасчета.ДатаОкончания);
		Запрос.УстановитьПараметр("ПустаяВерсия", ПустаяВерсия);
		Запрос.УстановитьПараметр("РежимыРаботыКонфигурации", РежимыРаботыКонфигурации); 
		
		ВыборкаПоПериоду = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоПериоду.Следующий() Цикл
			// 5. Очистим данные по профилю в разрезе даты.
			НаборЗаписей = РегистрыСведений.ПроизводительностьПлатформы.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Период.Установить(ВыборкаПоПериоду.Период);
			НаборЗаписей.Отбор.ПрофильКлючевыхОпераций.Установить(ПрофильКлючевыхОпераций);
			НаборЗаписей.Записать();
			// 6. Записать данные в регистр и в настройки.
			Выборка = ВыборкаПоПериоду.Выбрать();
			Пока Выборка.Следующий() Цикл
				НаборЗаписей = РегистрыСведений.ПроизводительностьПлатформы.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
				НаборЗаписей.Отбор.ПрофильКлючевыхОпераций.Установить(ПрофильКлючевыхОпераций);
				НаборЗаписей.Отбор.ВерсияПлатформы.Установить(Выборка.ВерсияПлатформы);
				НаборЗаписей.Отбор.СтатусИнформационнойБазы.Установить(Выборка.СтатусИнформационнойБазы);
				НаборЗаписей.Отбор.РелизнаяВерсияКонфигурации.Установить(Выборка.РелизнаяВерсияКонфигурации);
				НаборЗаписей.Отбор.РежимРаботыКонфигурации.Установить(Выборка.РежимРаботыКонфигурации);
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Выборка);
				Запись.ПрофильКлючевыхОпераций = ПрофильКлючевыхОпераций;
				НаборЗаписей.Записать();
			КонецЦикла;
		КонецЦикла;
		
		
		// 7. Определить период расчета.
	    РассчитанПо = РассчитанПо + ГлубинаРасчета * 86400;
	 	ПериодРасчета = ПериодРасчета(РассчитанПо, ГлубинаРасчета);
		
		ЗаписьНастройки = РегистрыСведений.НастройкиРасчетаПроизводительностиПлатформы.СоздатьМенеджерЗаписи();
		ЗаписьНастройки.ПрофильКлючевыхОпераций = ПрофильКлючевыхОпераций;
		ЗаписьНастройки.Прочитать();
		ЗаписьНастройки.РассчитанПо = ?(РассчитанПо > ТекущаяДата, ТекущаяДата, РассчитанПо);
		ЗаписьНастройки.Записать();
	КонецЦикла;
	
КонецПроцедуры

Функция ПериодРасчета(РассчитанПо, ГлубинаРасчета)
	ДатаОкончания = НачалоДня(РассчитанПо)-1;
	ДатаНачала = НачалоДня(РассчитанПо - ГлубинаРасчета * 86400);
	Возврат Новый Структура("ДатаНачала, ДатаОкончания", ДатаНачала, ДатаОкончания);
КонецФункции

Функция ТекстЗапросаАнализа(ДатаНачала, ДатаОкончания)
	ТекстЗапроса = Общий.ТекстЗапросаПериодов(ДатаНачала, ДатаОкончания, "День");
    ТекстЗапроса = ТекстЗапроса + ";
			|ВЫБРАТЬ
			|	Периоды.Период КАК Период,
			|	История.ВерсияПлатформы КАК ВерсияПлатформы,
			|	История.РежимРаботыКонфигурации КАК РежимРаботыКонфигурации,
			|	История.ВерсияКонфигурации.Релизная КАК РелизнаяВерсияКонфигурации,
			|	ЕСТЬNULL(РезультатАнализаИнформационныхБаз.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыИнформационнойБазы.ПустаяССылка)) КАК СтатусИнформационнойБазы,
			|	История.ИнформационнаяБаза КАК ИнформационнаяБаза
			|ПОМЕСТИТЬ ВТ_ИБ
			|ИЗ
			|	Периоды КАК Периоды
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИнформацияИсторияПодробно КАК История
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатАнализаИнформационныхБаз КАК РезультатАнализаИнформационныхБаз
			|			ПО История.ИнформационнаяБаза = РезультатАнализаИнформационныхБаз.ИнформационнаяБаза
			|		ПО (История.ПериодЗаписи = Периоды.Период)
			|			И (История.РежимРаботыКонфигурации В (&РежимыРаботыКонфигурации))
			|			И (История.ВерсияПлатформы <> &ПустаяВерсия)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Периоды.Период,
			|	История.ИнформационнаяБаза
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ Периоды
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИнформационныеБазы.Период КАК Период,
			|	ИнформационныеБазы.ВерсияПлатформы КАК ВерсияПлатформы,
			|	ИнформационныеБазы.РежимРаботыКонфигурации КАК РежимРаботыКонфигурации,
			|	СУММА(ВЫБОР
			|			КОГДА Замеры.ВремяВыполнения <= ЕСТЬNULL(Профиль.ЦелевоеВремя, 1)
			|				ТОГДА Замеры.КоличествоОпераций
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК N_T,
			|	СУММА(ВЫБОР
			|			КОГДА Замеры.ВремяВыполнения > ЕСТЬNULL(Профиль.ЦелевоеВремя, 1)
			|					И Замеры.ВремяВыполнения <= ЕСТЬNULL(Профиль.ЦелевоеВремя, 1) * 4
			|				ТОГДА Замеры.КоличествоОпераций
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК N_T_4T,
			|	СУММА(Замеры.КоличествоОпераций) КАК КоличествоОпераций,
			|	СУММА(Замеры.ВремяВыполнения * Замеры.КоличествоОпераций) КАК СуммаВремениВыполнения,
			|	ИнформационныеБазы.СтатусИнформационнойБазы КАК СтатусИнформационнойБазы,
			|	ИнформационныеБазы.РелизнаяВерсияКонфигурации КАК РелизнаяВерсияКонфигурации
			|ИЗ
			|	ВТ_ИБ КАК ИнформационныеБазы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗамерыВремениЦентрМониторинга КАК Замеры
			|		ПО (Замеры.Период = ИнформационныеБазы.Период)
			|			И (Замеры.ИнформационнаяБаза = ИнформационныеБазы.ИнформационнаяБаза)
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючевыеОперации КАК Профиль
			|		ПО (Профиль.КлючеваяОперация = Замеры.КлючеваяОперация)
			|
			|СГРУППИРОВАТЬ ПО
			|	ИнформационныеБазы.ВерсияПлатформы,
			|	ИнформационныеБазы.РежимРаботыКонфигурации,
			|	ИнформационныеБазы.Период,
			|	ИнформационныеБазы.СтатусИнформационнойБазы,
			|	ИнформационныеБазы.РелизнаяВерсияКонфигурации
			|
			|УПОРЯДОЧИТЬ ПО
			|	Период
			|ИТОГИ ПО
			|	Период
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_ИБ";
	Возврат ТекстЗапроса;
КонецФункции

#КонецЕсли