#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

Функция ПрочитатьНастройки(КонтрольнаяПроцедура) Экспорт
    
    МенеджерЗаписи = СоздатьМенеджерЗаписи();
    МенеджерЗаписи.КонтрольнаяПроцедура = КонтрольнаяПроцедура;
    МенеджерЗаписи.Прочитать();
    
    Настройки = Новый Структура;
    
    Для Каждого ТекРесурс Из Метаданные.РегистрыСведений.НастройкиКонтрольПодключений.Ресурсы Цикл
        Настройки.Вставить(ТекРесурс.Имя, МенеджерЗаписи[ТекРесурс.Имя]);    
    КонецЦикла;
    
    УстановитьПривилегированныйРежим(Истина);
    Данные = РегистрыСведений.БезопасноеХранилище.ПолучитьДанные(КонтрольнаяПроцедура);
    УстановитьПривилегированныйРежим(Ложь);
    
    Если Данные <> Неопределено Тогда
        Настройки.Вставить("ЛогинПриПодключении", Данные.ЛогинПриПодключении);
        Настройки.Вставить("ПарольПриПодключении", Данные.ПарольПриПодключении);
    Иначе
        Настройки.Вставить("ЛогинПриПодключении", "");
        Настройки.Вставить("ПарольПриПодключении", "");
    КонецЕсли;
            
    Возврат Настройки;
    
КонецФункции

// Записать настройки
//
// Параметры:
//  КонтрольнаяПроцедура - СправочникСсылка.КонтрольныеПроцедуры - контрольная процедура, для которой записываются настройки.
//  Настройки            - Структура - структура создания с ключами:
//                                   — МеханизмПроверкиОбрабатыватьИзменения - ПеречислениеСсылка.МеханизмыПроверкиПодключения.
//                                   — URLОпубликованнойИнформационнойБазы   - Строка.
//                                   — Таймаут                               - Число, секунды.
//                                   — ЛогинПриПодключении                   - Строка.
//                                   — ПарольПриПодключении                  - Строка.
//                                   — ИспользоватьПрокси                    - Булево.
//                                   — ПроксиСервер                          - Строка, если ИспользоватьПрокси = Ложь, то необязателен.
//                                   — ПроксиПорт                            - Число, если ИспользоватьПрокси = Ложь, то необязателен.
//                                   — ПериодКонтроля                        - Число, секунды.
//                                   — МинимальныйПроцентДоступности         - Чилсо, %.
//                                   — ДопустимоНетДанных                    - Число, секунды
//
Процедура ЗаписатьНастройки(КонтрольнаяПроцедура, Настройки) Экспорт
    
    МенеджерЗаписи = СоздатьМенеджерЗаписи();
    МенеджерЗаписи.КонтрольнаяПроцедура = КонтрольнаяПроцедура;
    МенеджерЗаписи.Прочитать();
    
    МенеджерЗаписи.КонтрольнаяПроцедура = КонтрольнаяПроцедура;
    
    Если Настройки.Свойство("МеханизмПроверкиОбрабатыватьИзменения") Тогда
        МенеджерЗаписи.МеханизмПроверкиОбрабатыватьИзменения = Настройки.МеханизмПроверкиОбрабатыватьИзменения;
    КонецЕсли;
    
    Если Настройки.Свойство("URLОпубликованнойИнформационнойБазы") Тогда
        МенеджерЗаписи.URLОпубликованнойИнформационнойБазы = Настройки.URLОпубликованнойИнформационнойБазы;
    КонецЕсли;
    
    Если Настройки.Свойство("СтрокаСоединения") Тогда
        МенеджерЗаписи.СтрокаСоединения = Настройки.СтрокаСоединения;
    КонецЕсли;
    
    Если Настройки.Свойство("Таймаут") Тогда
        МенеджерЗаписи.Таймаут = Настройки.Таймаут;
    КонецЕсли;
    
    Если Настройки.Свойство("ИспользоватьПрокси") Тогда
        МенеджерЗаписи.ИспользоватьПрокси = Настройки.ИспользоватьПрокси;
    КонецЕсли;
    
    Если Настройки.Свойство("ПроксиСервер") Тогда
        МенеджерЗаписи.ПроксиСервер = Настройки.ПроксиСервер;
    КонецЕсли;
    
    Если Настройки.Свойство("ПроксиПорт") Тогда
        МенеджерЗаписи.ПроксиПорт = Настройки.ПроксиПорт;
    КонецЕсли;
    
    Если Настройки.Свойство("ПериодКонтроля") Тогда
        МенеджерЗаписи.ПериодКонтроля = Настройки.ПериодКонтроля;
    КонецЕсли;
    
    Если Настройки.Свойство("МинимальныйПроцентДоступности") Тогда
        МенеджерЗаписи.МинимальныйПроцентДоступности = Настройки.МинимальныйПроцентДоступности;
    КонецЕсли;
    
    Если Настройки.Свойство("ДопустимоНетДанных") Тогда
        МенеджерЗаписи.ДопустимоНетДанных = Настройки.ДопустимоНетДанных;
    КонецЕсли;
    
    МенеджерЗаписи.Записать(Истина);
    
    УстановитьПривилегированныйРежим(Истина);
    Данные = РегистрыСведений.БезопасноеХранилище.ПолучитьДанные(КонтрольнаяПроцедура);
    УстановитьПривилегированныйРежим(Ложь);
    
    Если Данные = Неопределено Тогда
        Данные = Новый Структура("ЛогинПриПодключении, ПарольПриПодключении", "", "");
    КонецЕсли;
    
    ЕстьЗапись = Ложь;
    Если Настройки.Свойство("ЛогинПриПодключении") Тогда
        Данные.ЛогинПриПодключении = Настройки.ЛогинПриПодключении;
        ЕстьЗапись = Истина;
    КонецЕсли;
    Если Настройки.Свойство("ПарольПриПодключении") Тогда
        Данные.ПарольПриПодключении = Настройки.ПарольПриПодключении;
        ЕстьЗапись = Истина;
    КонецЕсли;
    
    Если ЕстьЗапись Тогда
        УстановитьПривилегированныйРежим(Истина);
        РегистрыСведений.БезопасноеХранилище.ЗаписатьДанные(КонтрольнаяПроцедура, Данные);
        УстановитьПривилегированныйРежим(Ложь);
    КонецЕсли;
   
КонецПроцедуры

#КонецОбласти

#КонецЕсли