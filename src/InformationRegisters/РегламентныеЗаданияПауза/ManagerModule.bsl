#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ВключитьПаузу(УникальныеИдентификаторы) Экспорт
    
    НачатьТранзакцию();
    
    НаборЗаписей = РегистрыСведений.РегламентныеЗаданияПауза.СоздатьНаборЗаписей();
    
    Для Каждого УникальныйИдентификатор Из УникальныеИдентификаторы Цикл
        
        НовЗапись = НаборЗаписей.Добавить();
        НовЗапись.УникальныйИдентификатор = УникальныйИдентификатор;
        
        Задание = РегламентныеЗаданияСервер.ПолучитьРегламентноеЗадание(УникальныйИдентификатор);
        Задание.Использование = Ложь;
        Задание.Записать();
        
    КонецЦикла;
    
    НаборЗаписей.Записать(Истина);
    
    Константы.ОтключитьРегламентныеЗадания.Установить(Истина);
    
    ЗафиксироватьТранзакцию();
        
КонецПроцедуры

Процедура СнятьСПаузы() Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   УникальныйИдентификатор
    |ИЗ
    |   РегистрСведений.РегламентныеЗаданияПауза
    |";
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        Задание = РегламентныеЗаданияСервер.ПолучитьРегламентноеЗадание(Выборка.УникальныйИдентификатор);
        Если Задание <> Неопределено Тогда
            Задание.Использование = Истина;
            Задание.Записать();
            КипВнешнийКомпонент.Пауза(1000);
        КонецЕсли;
    КонецЦикла;
    
    НаборЗаписей = РегистрыСведений.РегламентныеЗаданияПауза.СоздатьНаборЗаписей();
    НаборЗаписей.Записать(Истина);
    
    Константы.ОтключитьРегламентныеЗадания.Установить(Ложь);
            
КонецПроцедуры

Функция ПолучитьЗадания() Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   УникальныйИдентификатор
    |ИЗ
    |   РегистрСведений.РегламентныеЗаданияПауза
    |";
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Задания = Новый Соответствие;
    
    Пока Выборка.Следующий() Цикл
        Задания.Вставить(Выборка.УникальныйИдентификатор, Истина);
    КонецЦикла;
    
    Возврат Задания;
    
КонецФункции

#КонецОбласти

#КонецЕсли