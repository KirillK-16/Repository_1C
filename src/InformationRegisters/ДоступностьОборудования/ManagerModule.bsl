#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

Функция ТекущийПроцентДоступности(РабочийСервер, ПериодКонтроля) Экспорт
    
    ТекДата = ТекущаяДата();
    
    ДатаНачала = ТекДата - ПериодКонтроля;
    ДатаОкончания = ТекДата;
    
    Запрос = Новый Запрос;
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   МИНИМУМ(Период) КАК Период
    |ИЗ
    |   РегистрСведений.ДоступностьОборудования КАК ДоступностьОборудования
    |ГДЕ
    |   ДоступностьОборудования.РабочийСервер = &РабочийСервер
    |";
    Запрос.УстановитьПараметр("РабочийСервер", РабочийСервер);
    
    Результат = Запрос.Выполнить();
    
    ТекущийПроцентДоступности = -1;
    
    Если НЕ Результат.Пустой() Тогда
        
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        Если Выборка.Период > ДатаНачала Тогда
            ДатаНачала = Выборка.Период;
        КонецЕсли;
                
        ТекстЗапросаПериодов = Общий.ТекстЗапросаПериодов(ДатаНачала, ДатаОкончания, "Секунда");
        
        Запрос.Текст = ТекстЗапросаПериодов + "
        |;
        |ВЫБРАТЬ
        |   МАКСИМУМ(Период) КАК Период
        |ПОМЕСТИТЬ
        |	ПредыдущаяЗапись
        |ИЗ
        |    РегистрСведений.ДоступностьОборудования КАК ДоступностьОборудования
        |ГДЕ
        |    ДоступностьОборудования.РабочийСервер = &РабочийСервер
        |    И ДоступностьОборудования.Период <= &ДатаНачала
        |;
        |ВЫБРАТЬ
        |	&ДатаНачала КАК Период,
        |	ВЫБОР 
        |      КОГДА ДоступностьОборудования.Доступность = 1 Тогда 1
        |      КОГДА ДоступностьОборудования.Доступность = 0 Тогда -1
        |   КОНЕЦ КАК Результат
        |ПОМЕСТИТЬ
        |	ПредыдущийРезультат
        |ИЗ
        |	ПредыдущаяЗапись КАК ПредыдущаяЗапись
        |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
        |   РегистрСведений.ДоступностьОборудования КАК ДоступностьОборудования
        |ПО
        |   ДоступностьОборудования.РабочийСервер = &РабочийСервер
        |   И ДоступностьОборудования.Период = ПредыдущаяЗапись.Период
        |;
        |ВЫБРАТЬ
        |   Периоды.Период,
        |   ВЫБОР 
        |      КОГДА ЕстьNULL(ДоступностьОборудования.Период, 0)  = 0 ТОГДА 0
        |      КОГДА ДоступностьОборудования.Доступность = 1 Тогда 1
        |      КОГДА ДоступностьОборудования.Доступность = 0 Тогда -1
        |   КОНЕЦ КАК Результат
        |ПОМЕСТИТЬ
        |	ТекущийРезультат
        |ИЗ
        |   Периоды КАК Периоды
        |ЛЕВОЕ СОЕДИНЕНИЕ
        |   РегистрСведений.ДоступностьОборудования КАК ДоступностьОборудования
        |ПО
        |   ДоступностьОборудования.Период = Периоды.Период
        |   И ДоступностьОборудования.РабочийСервер = &РабочийСервер
        |;
        |ВЫБРАТЬ
        |	Период,
        |	Результат
        |ИЗ
        |	ПредыдущийРезультат
        |	
        |ОБЪЕДИНИТЬ
        |
        |ВЫБРАТЬ
        |	Период,
        |	Результат
        |ИЗ
        |	ТекущийРезультат
        |ГДЕ
        |   Период <> &ДатаНачала 
        |УПОРЯДОЧИТЬ ПО
        |	Период
        |";
        
        Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
        Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
        Запрос.УстановитьПараметр("РабочийСервер", РабочийСервер);    
        
        Результат = Запрос.Выполнить();
        
        ТаблицаПодключений = Результат.Выгрузить();
        
        ПредыдущийРезультатПодключения = Неопределено;
        КоличествоУспешно = 0;
        Для Каждого ТекРезультат Из ТаблицаПодключений Цикл
            
            Если ТекРезультат.Результат = 1 Тогда
                
                КоличествоУспешно = КоличествоУспешно + 1;
                ПредыдущийРезультатПодключения = ТекРезультат.Результат;
                
            ИначеЕсли ТекРезультат.Результат = 0 И ПредыдущийРезультатПодключения = 1 Тогда
                
                КоличествоУспешно = КоличествоУспешно + 1;
                
            ИначеЕсли ТекРезультат.Результат = -1 Тогда
                
                ПредыдущийРезультатПодключения = ТекРезультат.Результат;
                
            КонецЕсли;
            
        КонецЦикла;
        
        ТекущийПроцентДоступности = ОКР((КоличествоУспешно/ТаблицаПодключений.Количество()) * 100, 2);
        
    КонецЕсли;
    
    Возврат ТекущийПроцентДоступности;
    
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИзменитьДоступность(Период, РабочийСервер, Доступность, ПериодКонтроля, МинимальныйПроцентДоступности) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Доступность
	|ИЗ
	|	РегистрСведений.ДоступностьОборудования
	|ГДЕ
	|	РабочийСервер = &РабочийСервер
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ
	|";
	
	Запрос.УстановитьПараметр("РабочийСервер", РабочийСервер);
    
    УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
    УстановитьПривилегированныйРежим(Ложь);
    
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Если Выборка.Доступность <> Доступность Тогда
			ДобавитьЗапись(Период, РабочийСервер, Доступность);
		КонецЕсли;
	Иначе
		ДобавитьЗапись(Период, РабочийСервер, Доступность);
	КонецЕсли;
    
    ТекущийПроцентДоступности = РегистрыСведений.ДоступностьОборудования.ТекущийПроцентДоступности(РабочийСервер, ПериодКонтроля);
    
    Если ТекущийПроцентДоступности <> -1 Тогда
        
        Если ТекущийПроцентДоступности < МинимальныйПроцентДоступности Тогда
            
            // Тип инцидента "ping"
            НаименованиеТипаИнцидента = "ping";
            ХешТипа = Справочники.ТипыИнцидентов.ХешТипИнцидента(НаименованиеТипаИнцидента);
            ТипИнцидента = Справочники.ТипыИнцидентов.СоздатьЭлементПоХешу(ХешТипа, НаименованиеТипаИнцидента, Перечисления.УровниИнцидентов.Ошибка);
            
            // Инцидент "РабочийСервер"
            ХешИнцидентаРабочийСервер = Справочники.Инциденты.ХешИнцидента(НаименованиеТипаИнцидента + Строка(РабочийСервер.УникальныйИдентификатор()));
            Инцидент = Справочники.Инциденты.СоздатьЭлементПоХешу(ХешИнцидентаРабочийСервер, "ping/" + РабочийСервер, Ложь);
            
            Сообщение = "" + РабочийСервер + " не доступен!";
            
            СсылкаНаСчетчикПроизводительности = Справочники.ГруппыСчетчиков.НайтиПоПолномуКоду("Длительность подключения/Доступность оборудования/" + РабочийСервер.Наименование + ", мс");
            Если СсылкаНаСчетчикПроизводительности = Неопределено Тогда
                СсылкаНаСчетчикПроизводительности = "";
            КонецЕсли;
            ИнцидентыСервер.ОткрытьИнцидент(ТипИнцидента, Инцидент, РабочийСервер,, Сообщение, 1,,,,СсылкаНаСчетчикПроизводительности);
            
        Иначе
            
            // Тип инцидента "ping"
            НаименованиеТипаИнцидента = "ping";
            ХешТипа = Справочники.ТипыИнцидентов.ХешТипИнцидента(НаименованиеТипаИнцидента);
            ТипИнцидента = Справочники.ТипыИнцидентов.СоздатьЭлементПоХешу(ХешТипа, НаименованиеТипаИнцидента, Перечисления.УровниИнцидентов.Ошибка);
            
            // Инцидент "РабочийСервер"
            ХешИнцидентаРабочийСервер = Справочники.Инциденты.ХешИнцидента(НаименованиеТипаИнцидента + Строка(РабочийСервер.УникальныйИдентификатор()));
            Инцидент = Справочники.Инциденты.СоздатьЭлементПоХешу(ХешИнцидентаРабочийСервер, "ping/" + РабочийСервер, Ложь);
            
            ИнцидентыСервер.ЗакрытьИнцидент(ТипИнцидента, Инцидент, Истина);
            
        КонецЕсли;
        
        НаименованиеТипаИнцидента = "НедоступностьНетДанных";
        // Тип инцидента "НедоступностьНетДанных"
        НаименованиеТипаИнцидента = "НедоступностьНетДанных";
        ХешТипа = Справочники.ТипыИнцидентов.ХешТипИнцидента(НаименованиеТипаИнцидента);
        ТипИнцидента = Справочники.ТипыИнцидентов.СоздатьЭлементПоХешу(ХешТипа, НаименованиеТипаИнцидента, Перечисления.УровниИнцидентов.Предупреждение);
        
        // Инцидент "РабочийСервер"
        ХешИнцидентаРабочийСервер = Справочники.Инциденты.ХешИнцидента(НаименованиеТипаИнцидента + Строка(РабочийСервер.УникальныйИдентификатор()));
        Инцидент = Справочники.Инциденты.СоздатьЭлементПоХешу(ХешИнцидентаРабочийСервер, "НедоступностьНетДанных/" + РабочийСервер, Ложь);
        
        ИнцидентыСервер.ЗакрытьИнцидент(ТипИнцидента, Инцидент, Истина);
        
        Параметры = Новый Структура("ИнформационнаяБаза, ТекущийПроцентДоступности, Источник", РабочийСервер, ТекущийПроцентДоступности, Справочники.ОбъектыКонтроля.ЦентрКонтроляКачества());
        РегистрыСведений.КонтрольПодключенийТекущееСостояние.ЗаписатьТекущееСостояние(Параметры, ?(Доступность = 1, Истина, Ложь));
        
    КонецЕсли;
	
КонецПроцедуры

Функция ДобавитьЗапись(Период, РабочийСервер, Доступность)
	
	МенеджерЗаписи = РегистрыСведений.ДоступностьОборудования.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = Период;
	МенеджерЗаписи.РабочийСервер = РабочийСервер;
	МенеджерЗаписи.Доступность = Доступность;
	
	МенеджерЗаписи.Записать(Истина);
	
КонецФункции

#КонецОбласти

#КонецЕсли
