#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

Функция ПрочитатьНастройки(КонтрольнаяПроцедура) Экспорт
    
    МенеджерЗаписи = СоздатьМенеджерЗаписи();
    МенеджерЗаписи.КонтрольнаяПроцедура = КонтрольнаяПроцедура;
    МенеджерЗаписи.Прочитать();
    
    Настройки = Новый Структура;
    Настройки.Вставить("ПороговаяПамятьМБ", МенеджерЗаписи.ПороговаяПамятьМБ);
    Настройки.Вставить("СрокХраненияДанных", МенеджерЗаписи.СрокХраненияДанных);
    Настройки.Вставить("АвтоматическиУдалятьЗаписиСеансов", МенеджерЗаписи.АвтоматическиУдалятьЗаписиСеансов);
    Настройки.Вставить("Расписание", МенеджерЗаписи.Расписание.Получить()); 
    Настройки.Вставить("Мониторинг", МенеджерЗаписи.Мониторинг);
    
    Возврат Настройки;
    
КонецФункции

// Записать настройки
//
// Параметры:
//  КонтрольнаяПроцедура - СправочникСсылка.КонтрольныеПроцедуры - контрольная процедура, для которой записываются настройки.
//  Настройки            - Структура - структура создания с ключами:
//                                                            — ПороговаяПамять                    - Число(10,0), в мегабайтах.
//                                                            — СрокХраненияДанных                 - Число (10,0), часы.
//                                                            — АвтоматическиУдалятьЗаписиСеансов  - Булево.
//
Процедура ЗаписатьНастройки(КонтрольнаяПроцедура, Настройки) Экспорт
    
    МенеджерЗаписи = СоздатьМенеджерЗаписи();
    МенеджерЗаписи.КонтрольнаяПроцедура = КонтрольнаяПроцедура;
    
    МенеджерЗаписи.Прочитать();
    МенеджерЗаписи.КонтрольнаяПроцедура = КонтрольнаяПроцедура;
    
    Если Настройки.Свойство("ПороговаяПамятьМБ") Тогда
        МенеджерЗаписи.ПороговаяПамятьМБ = Настройки.ПороговаяПамятьМБ;
    КонецЕсли;
    
    Если Настройки.Свойство("СрокХраненияДанных") Тогда
        МенеджерЗаписи.СрокХраненияДанных = Настройки.СрокХраненияДанных;
    КонецЕсли;
    
    Если Настройки.Свойство("АвтоматическиУдалятьЗаписиСеансов") Тогда
        МенеджерЗаписи.АвтоматическиУдалятьЗаписиСеансов = Настройки.АвтоматическиУдалятьЗаписиСеансов;
    КонецЕсли;
    
    Если Настройки.Свойство("Расписание") Тогда
        МенеджерЗаписи.Расписание = Новый ХранилищеЗначения(Настройки.Расписание);
    КонецЕсли;
    
    Если Настройки.Свойство("Мониторинг") Тогда
        МенеджерЗаписи.Мониторинг = Настройки.Мониторинг;
    КонецЕсли;
    
    МенеджерЗаписи.Записать(Истина);
    
КонецПроцедуры

Функция НастройкиУдаления() Экспорт
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = "
    |ВЫБРАТЬ
	|   КонтрольныеПроцедуры.ОбъектКонтроля КАК Кластер,
	|   ИнформационныеБазы.ОбъектКонтроля КАК ИнформационнаяБаза,
	|   Настройки.СрокХраненияДанных КАК СрокХраненияДанных
    |ИЗ
	|   РегистрСведений.НастройкиКонтрольПамяти КАК Настройки
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|   Справочник.КонтрольныеПроцедуры КАК КонтрольныеПроцедуры
    |ПО
	|   КонтрольныеПроцедуры.Ссылка = Настройки.КонтрольнаяПроцедура
    |ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|   РегистрСведений.ПараметрыИнформационныхБаз КАК ИнформационныеБазы
    |ПО
	|   ИнформационныеБазы.Кластер = КонтрольныеПроцедуры.ОбъектКонтроля
    |ГДЕ
	|   Настройки.АвтоматическиУдалятьЗаписиСеансов
    |";
    
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

#КонецОбласти

#КонецЕсли