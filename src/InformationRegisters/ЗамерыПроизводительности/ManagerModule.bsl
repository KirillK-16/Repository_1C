#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Функция УдалитьУстаревшиеДанные(КрайняяДатаЗаписи, УдалитьВсе) Экспорт
    
    ВнутренниеОбъектыКонтроля = Новый Массив;
               
	ЕстьУдаление = Ложь;
	
	Запрос = Новый Запрос;
    Запрос.Текст = "
    |ВЫБРАТЬ ПЕРВЫЕ 1000
    |   ОбъектКонтроля,
    |   ДатаЗамераUTC,
    |   ИдентификаторКлючевойОперации,
    |   НомерСеанса,
    |   УникальныйИдентификаторЗаписи
    |ИЗ
    |   РегистрСведений.ЗамерыПроизводительности
    |ГДЕ
    |   ДатаЗамераUTC < &ГраницаУдаления
    |   {И ОбъектКонтроля В (&ВнутренниеОбъектыКонтроля)}
    |УПОРЯДОЧИТЬ ПО
    |   ДатаЗамераUTC
    |";
    
    Если НЕ УдалитьВсе Тогда
        
        ЦентрКонтроляКачества = Справочники.ОбъектыКонтроля.НайтиПоНаименованию("Центр контроля качества", Истина);
        Если ЦентрКонтроляКачества <> Неопределено Тогда
            ВнутренниеОбъектыКонтроля.Добавить(ЦентрКонтроляКачества);
        КонецЕсли;
        
        ЦентрМониторингаИмпортСсылка = Справочники.ОбъектыКонтроля.НайтиПоНаименованию("Центр мониторинга", Истина);
        Если ЦентрМониторингаИмпортСсылка <> Неопределено Тогда
            ВнутренниеОбъектыКонтроля.Добавить(ЦентрМониторингаИмпортСсылка);
        КонецЕсли;
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ОбъектКонтроля В (&ВнутренниеОбъектыКонтроля)}", "И ОбъектКонтроля В (&ВнутренниеОбъектыКонтроля)");
        Запрос.УстановитьПараметр("ВнутренниеОбъектыКонтроля", ВнутренниеОбъектыКонтроля);
    Иначе
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "{И ОбъектКонтроля В (&ВнутренниеОбъектыКонтроля)}", "");
        
    КонецЕсли;
    
    Запрос.УстановитьПараметр("ГраницаУдаления", (КрайняяДатаЗаписи - Дата(1,1,1)) * 1000);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        
        ЕстьУдаление = Истина;
        
        НачатьТранзакцию();
        Попытка
            МенеджерЗаписи = РегистрыСведений.ЗамерыПроизводительности.СоздатьМенеджерЗаписи();
            МенеджерЗаписи.ОбъектКонтроля = Выборка.ОбъектКонтроля;
            МенеджерЗаписи.ДатаЗамераUTC = Выборка.ДатаЗамераUTC;
            МенеджерЗаписи.ИдентификаторКлючевойОперации = Выборка.ИдентификаторКлючевойОперации;
            МенеджерЗаписи.НомерСеанса = Выборка.НомерСеанса;
            МенеджерЗаписи.Удалить();
            
            НаборЗаписей = РегистрыСведений.ЗамерыПроизводительностиДополнительнаяИнформация.СоздатьНаборЗаписей();
            НаборЗаписей.Отбор.УникальныйИдентификаторЗаписи.Установить(Выборка.УникальныйИдентификаторЗаписи);
            НаборЗаписей.Записать(Истина);
            
            ЗафиксироватьТранзакцию();
        Исключение
            Комментарий = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
            ЗаписьЖурналаРегистрации("Удаление замеров производительности", УровеньЖурналаРегистрации.Ошибка,,,Комментарий);
            ОтменитьТранзакцию();
        КонецПопытки;
        
    КонецЦикла;
       
    
    
	Возврат ЕстьУдаление;
	
КонецФункции

#КонецЕсли