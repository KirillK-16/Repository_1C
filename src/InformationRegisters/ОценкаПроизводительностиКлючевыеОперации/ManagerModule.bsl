#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

Функция КлючевыеОперацииИнформационнойБазы(ИнформационнаяБаза, ЕстьЦелевоеВремя = Истина) Экспорт
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ОценкаПроизводительностиКлючевыеОперации.УникальныйИдентификатор КАК УникальныйИдентификатор,
	|	ОценкаПроизводительностиКлючевыеОперации.Приоритет КАК Приоритет,
	|	ОценкаПроизводительностиКлючевыеОперации.ЦелевоеВремя КАК ЦелевоеВремя,
	|	ОценкаПроизводительностиКлючевыеОперации.МинимальноДопустимыйУровень КАК МинимальноДопустимыйУровень,
	|	ОценкаПроизводительностиКлючевыеОперации.Имя КАК Имя,
	|	ОценкаПроизводительностиКлючевыеОперации.ПриоритетВИБ КАК ПриоритетВИБ,
	|	ОценкаПроизводительностиКлючевыеОперации.ЦелевоеВремяВИБ КАК ЦелевоеВремяВИБ
	|ИЗ
	|	РегистрСведений.ОценкаПроизводительностиКлючевыеОперации КАК ОценкаПроизводительностиКлючевыеОперации
	|ГДЕ
	|	ОценкаПроизводительностиКлючевыеОперации.ИнформационнаяБаза = &ИнформационнаяБаза
	|	%УслЦелевоеВремя
	|";
	
	Если ЕстьЦелевоеВремя Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслЦелевоеВремя", "И ОценкаПроизводительностиКлючевыеОперации.ЦелевоеВремя > 0");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УслЦелевоеВремя", "");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ИнформационнаяБаза", ИнформационнаяБаза);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	КлючевыеОперации = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		РеквизитыКлючевойОперации = Новый Структура;
		
		РеквизитыКлючевойОперации.Вставить("УникальныйИдентификатор", Выборка.УникальныйИдентификатор);
		РеквизитыКлючевойОперации.Вставить("Приоритет", Выборка.Приоритет);
		РеквизитыКлючевойОперации.Вставить("ЦелевоеВремя", Выборка.ЦелевоеВремя);
		РеквизитыКлючевойОперации.Вставить("МинимальноДопустимыйУровень", Выборка.МинимальноДопустимыйУровень);
		РеквизитыКлючевойОперации.Вставить("Имя", Выборка.Имя);
		РеквизитыКлючевойОперации.Вставить("ПриоритетВИБ", Выборка.ПриоритетВИБ);
		РеквизитыКлючевойОперации.Вставить("ЦелевоеВремяВИБ", Выборка.ЦелевоеВремяВИБ);
		
		КлючевыеОперации.Вставить(Выборка.УникальныйИдентификатор, РеквизитыКлючевойОперации);
	КонецЦикла;
	
	Возврат КлючевыеОперации;
КонецФункции

Функция ПолучитьАпдекс(ДатаUTC, КоличествоЗамеров, ИнформационнаяБаза, КлючеваяОперация) Экспорт
	МассивКО = Новый Массив;
	МассивКО.Добавить(КлючеваяОперация);
	АпдексМассив = КонтрольПроизводительности.ДинамикаApdex(ДатаUTC, 1, 0, КоличествоЗамеров, ИнформационнаяБаза, МассивКО);
	Если АпдексМассив.Количество() = 1 Тогда
		Апдекс = АпдексМассив[0];
	Иначе
		Апдекс = Неопределено;
	КонецЕсли;
	
	Возврат Апдекс;
КонецФункции

// Целевое время используется только в случае создания новой ключевой операции
Функция ПолучитьУникальныйИдентификаторКлючевойОперации(Наименование, ОбъектКонтроля, ЦелевоеВремя, КакСтруктура = Ложь) Экспорт
    
    УникальныйИдентификаторСтруктура = ПолучитьУникальныйИдентификаторКлючевойОперацииСлужебный(Наименование, ОбъектКонтроля);
    УникальныйИдентификатор = УникальныйИдентификаторСтруктура.УникальныйИдентификатор; 
    
	Если УникальныйИдентификатор = Неопределено Тогда
		НачатьТранзакцию();
		
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.ОбъектыБлокировок");
		ЭлементБлокировки.УстановитьЗначение("Объект", Наименование + ОбъектКонтроля);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаДанных.Заблокировать();
		
		Попытка
			БлокировкаДанных.Заблокировать();
			
			УникальныйИдентификаторСтруктура = ПолучитьУникальныйИдентификаторКлючевойОперацииСлужебный(Наименование, ОбъектКонтроля);
            УникальныйИдентификатор = УникальныйИдентификаторСтруктура.УникальныйИдентификатор;
			Если УникальныйИдентификатор = Неопределено Тогда
                
                УникальныйИдентификатор = СоздатьКлючевуюОперацию(Наименование, ОбъектКонтроля, ЦелевоеВремя);
                
                Если КакСтруктура Тогда
                    УникальныйИдентификаторСтруктура.УникальныйИдентификатор = УникальныйИдентификатор;
                    УникальныйИдентификаторСтруктура.ПомеченаНаУдаление = Ложь;
                КонецЕсли;
                
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецПопытки;
	КонецЕсли;
    
    Если КакСтруктура Тогда
        Возврат УникальныйИдентификаторСтруктура;
    Иначе
        Возврат УникальныйИдентификатор;
    КонецЕсли;
        
КонецФункции

Функция ЗначениеПоКлючу(Ключ) Экспорт
    
    МенеджерЗаписи = СоздатьМенеджерЗаписи();
    ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Ключ);
    МенеджерЗаписи.Прочитать();
    
    Данные = Новый Структура;
    
    МетаданныеРегистра = Метаданные.РегистрыСведений.ОценкаПроизводительностиКлючевыеОперации;
    Для Каждого Измерение Из МетаданныеРегистра.Измерения Цикл
        Данные.Вставить(Измерение.Имя, Неопределено);
    КонецЦикла;
    
    Для Каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл
        Данные.Вставить(Ресурс.Имя, Неопределено);
    КонецЦикла;
    
    Для Каждого Реквизит Из МетаданныеРегистра.Реквизиты Цикл
        Данные.Вставить(Реквизит.Имя, Неопределено);
    КонецЦикла;
                
    Если МенеджерЗаписи.Выбран() Тогда
        ЗаполнитьЗначенияСвойств(Данные, МенеджерЗаписи);
    КонецЕсли;
    
    Возврат Данные;
        
КонецФункции

Функция Имя(УникальныйИдентификатор) Экспорт
    
    Имя = Неопределено;
    
    Запрос = Новый Запрос;
    Запрос.Текст = "
    |ВЫБРАТЬ
    |   Имя
    |ИЗ
    |   РегистрСведений.ОценкаПроизводительностиКлючевыеОперации
    |ГДЕ
    |   УникальныйИдентификатор = &УникальныйИдентификатор
    |";
    Запрос.УстановитьПараметр("УникальныйИдентификатор", УникальныйИдентификатор);
    Результат = Запрос.Выполнить();
    
    
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        Имя = Выборка.Имя;
    КонецЕсли;
    
    Возврат Имя;
    
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоздатьКлючевуюОперацию(Наименование, ОбъектКонтроля, ЦелевоеВремя)
	УникальныйИдентификаторКлючевойОперации = Новый УникальныйИдентификатор();
	
	НовЗапись = РегистрыСведений.ОценкаПроизводительностиКлючевыеОперации.СоздатьМенеджерЗаписи();
	НовЗапись.УникальныйИдентификатор = УникальныйИдентификаторКлючевойОперации;
	НовЗапись.ИнформационнаяБаза = ОбъектКонтроля;
	НовЗапись.Приоритет = 1;
	НовЗапись.ЦелевоеВремя = ЦелевоеВремя;
	НовЗапись.Имя = Наименование;
	НовЗапись.ЦелевоеВремяВИБ = ЦелевоеВремя;
	
	НовЗапись.Записать();
	
	Возврат УникальныйИдентификаторКлючевойОперации;
КонецФункции

Функция ПолучитьУникальныйИдентификаторКлючевойОперацииСлужебный(Наименование, ОбъектКонтроля)
    
    УникальныйИдентификаторСтруктура = Новый Структура("УникальныйИдентификатор, ПомеченаНаУдаление", Неопределено, Неопределено);
    	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	УникальныйИдентификатор КАК УникальныйИдентификаторКлючевойОперации,
    |   ПомеченаНаУдаление КАК ПомеченаНаУдаление
	|ИЗ
	|	РегистрСведений.ОценкаПроизводительностиКлючевыеОперации
	|ГДЕ
	|	Имя = &Наименование
	|	И ИнформационнаяБаза = &ОбъектКонтроля
	|";
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("ОбъектКонтроля", ОбъектКонтроля);
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
        
        Выборка = Результат.Выбрать();
		Выборка.Следующий();
				
		УникальныйИдентификаторСтруктура = Новый Структура("УникальныйИдентификатор, ПомеченаНаУдаление", Выборка.УникальныйИдентификаторКлючевойОперации, Выборка.ПомеченаНаУдаление);
        
	КонецЕсли;
	
	Возврат УникальныйИдентификаторСтруктура;
    
КонецФункции

#КонецОбласти

#КонецЕсли

