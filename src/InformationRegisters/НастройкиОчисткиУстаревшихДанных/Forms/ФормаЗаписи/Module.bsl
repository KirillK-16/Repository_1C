
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Метаданные") Тогда
		ДоступныеМетаданные.Загрузить(Параметры.Метаданные.Выгрузить());
	КонецЕсли;
	Для Каждого СтрЗапись Из ДоступныеМетаданные Цикл
		СписокВыбораМетаданных.Добавить(СтрЗапись.ИмяОбъектаМетаданных, СтрЗапись.ИмяОбъектаМетаданных);
	КонецЦикла;
	Если ЗначениеЗаполнено(Запись.ИмяОбъектаМетаданных) Тогда
		Элементы.ИзмерениеГруппировки.Доступность = НЕ СтрНачинаетсяС(Запись.ИмяОбъектаМетаданных, "Справочник.");
		// Восстановление списков выбора.
		МассивСтрок = ДоступныеМетаданные.НайтиСтроки(Новый Структура("ИмяОбъектаМетаданных",Запись.ИмяОбъектаМетаданных));
		Если МассивСтрок.Количество() Тогда
			МассивИзмерений = МассивСтрок[0].Измерения;
			СписокВыбораИзмерений.Очистить();
			Для Каждого Элемент Из МассивИзмерений Цикл
				СписокВыбораИзмерений.Добавить(Элемент.Значение);
			КонецЦикла;
			
			МассивВсехИзмерений = МассивСтрок[0].ВсеИзмерения;		
			СписокВыбораВсехИзмерений.Очистить();
			Для Каждого Элемент Из МассивВсехИзмерений Цикл
				СписокВыбораВсехИзмерений.Добавить(Элемент.Значение);
			КонецЦикла;		
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Запись.ИзмерениеОтбора) Тогда
			// Восстановление типа отбора.
			ЗначенияОтбора.ТипЗначения = ТипИзмерения(Запись.ИмяОбъектаМетаданных, Запись.ИзмерениеОтбора);
			
			// Восстановление отбора.
			ЗаписьОбъект = РеквизитФормыВЗначение("Запись");
			ЗначениеХранилища = ЗаписьОбъект.УсловияОтбора.Получить();
			Если ЗначениеХранилища <> Неопределено Тогда
				ЗначенияОтбора.ЗагрузитьЗначения(ЗначениеХранилища);
			КонецЕсли;
			Элементы.ЗначенияОтбора.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИмяОбъектаМетаданныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбораМетаданных;
КонецПроцедуры

&НаКлиенте
Процедура ИмяОбъектаМетаданныхПриИзменении(Элемент)
	Элементы.ИзмерениеГруппировки.Доступность = НЕ СтрНачинаетсяС(Запись.ИмяОбъектаМетаданных, "Справочник.");
	МассивСтрок = ДоступныеМетаданные.НайтиСтроки(Новый Структура("ИмяОбъектаМетаданных", Запись.ИмяОбъектаМетаданных));
	Если МассивСтрок.Количество() Тогда
		МассивИзмерений = МассивСтрок[0].Измерения;
		СписокВыбораИзмерений.Очистить();
		Для Каждого Элемент Из МассивИзмерений Цикл
			СписокВыбораИзмерений.Добавить(Элемент.Значение);
		КонецЦикла;
		Если СписокВыбораИзмерений.Количество() = 1 Тогда
			Запись.Измерение = СписокВыбораИзмерений[0].Значение;
		КонецЕсли;
		
		МассивВсехИзмерений = МассивСтрок[0].ВсеИзмерения;		
		СписокВыбораВсехИзмерений.Очистить();
		Для Каждого Элемент Из МассивВсехИзмерений Цикл
			СписокВыбораВсехИзмерений.Добавить(Элемент.Значение);
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзмерениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбораИзмерений;
КонецПроцедуры

&НаКлиенте
Процедура ИзмерениеГруппировкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбораВсехИзмерений;
КонецПроцедуры

&НаКлиенте
Процедура ИзмерениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбораВсехИзмерений;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТипИзмерения(ИмяОбъекта, ИмяИзмерения)
	Если СтрНачинаетсяС(ИмяОбъекта, "Справочник.") Тогда
		Возврат Метаданные.НайтиПоПолномуИмени(ИмяОбъекта).Реквизиты[ИмяИзмерения].Тип;
	ИначеЕсли СтрНачинаетсяС(ИмяОбъекта, "РегистрСведений.") Тогда
		Возврат Метаданные.НайтиПоПолномуИмени(ИмяОбъекта).Измерения[ИмяИзмерения].Тип;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ИзмерениеОтбораПриИзменении(Элемент)
	ЗначенияОтбора.Очистить();
	Если ЗначениеЗаполнено(Запись.ИзмерениеОтбора) Тогда
		ЗначенияОтбора.ТипЗначения = ТипИзмерения(Запись.ИмяОбъектаМетаданных, Запись.ИзмерениеОтбора);
		Элементы.ЗначенияОтбора.Доступность = Истина;
	Иначе
		Элементы.ЗначенияОтбора.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.УсловияОтбора = Новый ХранилищеЗначения(ЗначенияОтбора.ВыгрузитьЗначения(), Новый СжатиеДанных(9));
КонецПроцедуры


