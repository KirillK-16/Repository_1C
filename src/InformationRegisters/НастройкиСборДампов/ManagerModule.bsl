#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс

Функция ПрочитатьНастройки(КонтрольнаяПроцедура) Экспорт
    
    МенеджерЗаписи = СоздатьМенеджерЗаписи();
    МенеджерЗаписи.КонтрольнаяПроцедура = КонтрольнаяПроцедура;
    МенеджерЗаписи.Прочитать();
    
    Настройки = Новый Структура;
    
    Для Каждого ТекРесурс Из Метаданные.РегистрыСведений.НастройкиСборДампов.Ресурсы Цикл
        
        Настройки.Вставить(ТекРесурс.Имя, МенеджерЗаписи[ТекРесурс.Имя]);
        
    КонецЦикла;
    
    Настройки.Вставить("Расписание", МенеджерЗаписи.Расписание.Получить());
    
    УстановитьПривилегированныйРежим(Истина);
    Данные = РегистрыСведений.БезопасноеХранилище.ПолучитьДанные(КонтрольнаяПроцедура);
    УстановитьПривилегированныйРежим(Ложь);
    
    Если Данные <> Неопределено И ТипЗнч(Данные) = Тип("Структура") И Данные.Свойство("КаталогЭкспортаДампов") Тогда
        Настройки.Вставить("КаталогЭкспортаДампов", Данные.КаталогЭкспортаДампов); 
    Иначе
        Настройки.Вставить("КаталогЭкспортаДампов", ""); 
    КонецЕсли;
    
    Возврат Настройки;
    
КонецФункции

// Записать настройки
//
// Параметры:
//  КонтрольнаяПроцедура - СправочникСсылка.КонтрольныеПроцедуры - контрольная процедура, для которой записываются настройки.
//  Настройки            - Структура - структура создания с ключами:
//                                                            — ПороговаяПамять                    - Число(10,0), в мегабайтах.
//                                                            — СрокХраненияДанных                 - Число (10,0), часы.
//                                                            — АвтоматическиУдалятьЗаписиСеансов  - Булево.
//
Процедура ЗаписатьНастройки(КонтрольнаяПроцедура, Настройки) Экспорт
    
    МенеджерЗаписи = СоздатьМенеджерЗаписи();
    МенеджерЗаписи.КонтрольнаяПроцедура = КонтрольнаяПроцедура;
    МенеджерЗаписи.Прочитать();
    
    МенеджерЗаписи.КонтрольнаяПроцедура = КонтрольнаяПроцедура;
    
    Если Настройки.Свойство("КаталогТЖСетевой") Тогда
        МенеджерЗаписи.КаталогТЖСетевой = Настройки.КаталогТЖСетевой;
    КонецЕсли;
    
    Если Настройки.Свойство("КаталогТЖЛокальный") Тогда
        МенеджерЗаписи.КаталогТЖЛокальный = Настройки.КаталогТЖЛокальный;
    КонецЕсли;
    
    Если Настройки.Свойство("ДлительностьХраненияФайловТЖ") Тогда
        МенеджерЗаписи.ДлительностьХраненияФайловТЖ = Настройки.ДлительностьХраненияФайловТЖ;
    КонецЕсли;
    
    Если Настройки.Свойство("КаталогВыгрузкиДамповСетевой") Тогда
        МенеджерЗаписи.КаталогВыгрузкиДамповСетевой = Настройки.КаталогВыгрузкиДамповСетевой;
    КонецЕсли;
    
    Если Настройки.Свойство("КаталогВыгрузкиДампов") Тогда
        МенеджерЗаписи.КаталогВыгрузкиДампов = Настройки.КаталогВыгрузкиДампов;
    КонецЕсли;
    
    Если Настройки.Свойство("КаталогВременныхФайлов") Тогда
        МенеджерЗаписи.КаталогВременныхФайлов = Настройки.КаталогВременныхФайлов;
    КонецЕсли;
    
    Если Настройки.Свойство("УровеньДетализацииДампов") Тогда
        МенеджерЗаписи.УровеньДетализацииДампов = Настройки.УровеньДетализацииДампов;
    КонецЕсли;
    
    Если Настройки.Свойство("АвтоматическаяНастройка") Тогда
        МенеджерЗаписи.АвтоматическаяНастройка = Настройки.АвтоматическаяНастройка;
    КонецЕсли;
    
    Если Настройки.Свойство("ИспользоватьАгента") Тогда
        МенеджерЗаписи.ИспользоватьАгента = Настройки.ИспользоватьАгента;
    КонецЕсли;
    
    Если Настройки.Свойство("Расписание") Тогда
        МенеджерЗаписи.Расписание = Новый ХранилищеЗначения(Настройки.Расписание);
    КонецЕсли;
    
    Если Настройки.Свойство("КаталогЭкспортаДампов") Тогда
        УстановитьПривилегированныйРежим(Истина);
        РегистрыСведений.БезопасноеХранилище.ЗаписатьДанные(КонтрольнаяПроцедура, Новый Структура("КаталогЭкспортаДампов", Настройки.КаталогЭкспортаДампов));
        УстановитьПривилегированныйРежим(Ложь);
    КонецЕсли;    

    МенеджерЗаписи.Записать(Истина);
    
КонецПроцедуры

#КонецОбласти
    
#Область СлужебныеПроцедурыИФункции

Функция ДобавитьЗапись(
		КонтрольнаяПроцедура,
		КаталогТЖСетевой,
		КаталогТЖЛокальный,
		ДлительностьХраненияФайловТЖ,
		КаталогВременныхФайлов,
		КаталогВыгрузкиДамповСетевой,
		КаталогВыгрузкиДампов
	) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.НастройкиСборДампов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.КонтрольнаяПроцедура = КонтрольнаяПроцедура;
	МенеджерЗаписи.КаталогТЖСетевой = КаталогТЖСетевой;
	МенеджерЗаписи.КаталогТЖЛокальный = КаталогТЖЛокальный;
	МенеджерЗаписи.ДлительностьХраненияФайловТЖ = ДлительностьХраненияФайловТЖ;
	МенеджерЗаписи.КаталогВременныхФайлов = КаталогВременныхФайлов;
	МенеджерЗаписи.КаталогВыгрузкиДамповСетевой = КаталогВыгрузкиДамповСетевой;
	МенеджерЗаписи.КаталогВыгрузкиДампов = КаталогВыгрузкиДампов;
		
	МенеджерЗаписи.Записать();
КонецФункции

#КонецОбласти

#КонецЕсли